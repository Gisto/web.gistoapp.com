{"version":3,"sources":["webpack:///./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/step21.js"],"names":["module","exports","hljs","name","aliases","case_insensitive","keywords","$pattern","keyword","contains","className","begin","relevance","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","C_NUMBER_MODE","inherit","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","variants"],"mappings":"8EAuDAA,EAAOC,QAhDP,SAAgBC,GAiBd,MAAO,CACLC,KAAM,eACNC,QAAS,CAAC,MAAO,OAAQ,OACzBC,kBAAkB,EAClBC,SAnBoB,CACpBC,SAFoB,oBAGpBC,QAAS,sBAkBTC,SAAU,CAhBO,CACjBC,UAAW,OACXC,MAAO,gBACPC,UAAW,IAEM,CACjBF,UAAW,OACXC,MAAO,oBACPC,UAAW,IAWTV,EAAKW,oBACLX,EAAKY,qBACLZ,EAAKa,QAAQ,WAAY,QACzBb,EAAKc,cACLd,EAAKe,QAAQf,EAAKgB,iBAAkB,CAACC,QAAS,OAC9CjB,EAAKe,QAAQf,EAAKkB,kBAAmB,CAACD,QAAS,OAC/C,CACET,UAAW,SACXC,MAAO,IAAKU,IAAK,KAEnB,CACEX,UAAW,SACXY,SAAU,CACR,CACEX,MAAO,IAAKU,IAAK,OACjBF,QAAS","file":"161.bundle.js","sourcesContent":["/*\nLanguage: STEP Part 21\nContributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\nDescription: Syntax highlighter for STEP Part 21 files (ISO 10303-21).\nWebsite: https://en.wikipedia.org/wiki/ISO_10303-21\n*/\n\nfunction step21(hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_KEYWORDS = {\n    $pattern: STEP21_IDENT_RE,\n    keyword: 'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'meta',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CLOSE = {\n    className: 'meta',\n    begin: 'END-ISO-10303-21;',\n    relevance: 10\n  };\n\n  return {\n    name: 'STEP Part 21',\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    keywords: STEP21_KEYWORDS,\n    contains: [\n      STEP21_START,\n      STEP21_CLOSE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'),\n      hljs.C_NUMBER_MODE,\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'string',\n        begin: \"'\", end: \"'\"\n      },\n      {\n        className: 'symbol',\n        variants: [\n          {\n            begin: '#', end: '\\\\d+',\n            illegal: '\\\\W'\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = step21;\n"],"sourceRoot":""}