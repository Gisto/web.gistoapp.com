(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"./node_modules/react-monaco-editor/node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/react-monaco-editor/node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js ***!
  \***********************************************************************************************************/
/*! exports provided: conf, language */function(e,o,t){"use strict";t.r(o),t.d(o,"conf",function(){return n}),t.d(o,"language",function(){return i});
/*!---------------------------------------------------------------------------------------------
 *  Copyright (C) David Owens II, owensd.io. All rights reserved.
 *--------------------------------------------------------------------------------------------*/
var n={comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}]},i={defaultToken:"",tokenPostfix:".swift",identifier:/[a-zA-Z_][\w$]*/,attributes:["@autoclosure","@noescape","@noreturn","@NSApplicationMain","@NSCopying","@NSManaged","@objc","@UIApplicationMain","@noreturn","@availability","@IBAction","@IBDesignable","@IBInspectable","@IBOutlet"],accessmodifiers:["public","private","internal"],keywords:["__COLUMN__","__FILE__","__FUNCTION__","__LINE__","as","as!","as?","associativity","break","case","catch","class","continue","convenience","default","deinit","didSet","do","dynamic","dynamicType","else","enum","extension","fallthrough","final","for","func","get","guard","if","import","in","infix","init","inout","internal","is","lazy","left","let","mutating","nil","none","nonmutating","operator","optional","override","postfix","precedence","prefix","private","protocol","Protocol","public","repeat","required","return","right","self","Self","set","static","struct","subscript","super","switch","throw","throws","try","try!","Type","typealias","unowned","var","weak","where","while","willSet","FALSE","TRUE"],symbols:/[=(){}\[\].,:;@#\_&\-<>`?!+*\\\/]/,operatorstart:/[\/=\-+!*%<>&|^~?\u00A1-\u00A7\u00A9\u00AB\u00AC\u00AE\u00B0-\u00B1\u00B6\u00BB\u00BF\u00D7\u00F7\u2016-\u2017\u2020-\u2027\u2030-\u203E\u2041-\u2053\u2055-\u205E\u2190-\u23FF\u2500-\u2775\u2794-\u2BFF\u2E00-\u2E7F\u3001-\u3003\u3008-\u3030]/,operatorend:/[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE00-\uFE0F\uFE20-\uFE2F\uE0100-\uE01EF]/,operators:/(@operatorstart)((@operatorstart)|(@operatorend))*/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[{include:"@comment"},{include:"@attribute"},{include:"@literal"},{include:"@keyword"},{include:"@invokedmethod"},{include:"@symbol"}],symbol:[[/[{}()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/[.]/,"delimiter"],[/@operators/,"operator"],[/@symbols/,"operator"]],comment:[[/\/\/\/.*$/,"comment.doc"],[/\/\*\*/,"comment.doc","@commentdocbody"],[/\/\/.*$/,"comment"],[/\/\*/,"comment","@commentbody"]],commentdocbody:[[/\/\*/,"comment","@commentbody"],[/\*\//,"comment.doc","@pop"],[/\:[a-zA-Z]+\:/,"comment.doc.param"],[/./,"comment.doc"]],commentbody:[[/\/\*/,"comment","@commentbody"],[/\*\//,"comment","@pop"],[/./,"comment"]],attribute:[[/\@@identifier/,{cases:{"@attributes":"keyword.control","@default":""}}]],literal:[[/"/,{token:"string.quote",next:"@stringlit"}],[/0[b]([01]_?)+/,"number.binary"],[/0[o]([0-7]_?)+/,"number.octal"],[/0[x]([0-9a-fA-F]_?)+([pP][\-+](\d_?)+)?/,"number.hex"],[/(\d_?)*\.(\d_?)+([eE][\-+]?(\d_?)+)?/,"number.float"],[/(\d_?)+/,"number"]],stringlit:[[/\\\(/,{token:"operator",next:"@interpolatedexpression"}],[/@escapes/,"string"],[/\\./,"string.escape.invalid"],[/"/,{token:"string.quote",next:"@pop"}],[/./,"string"]],interpolatedexpression:[[/\(/,{token:"operator",next:"@interpolatedexpression"}],[/\)/,{token:"operator",next:"@pop"}],{include:"@literal"},{include:"@keyword"},{include:"@symbol"}],keyword:[[/`/,{token:"operator",next:"@escapedkeyword"}],[/@identifier/,{cases:{"@keywords":"keyword","[A-Z][a-zA-Z0-9$]*":"type.identifier","@default":"identifier"}}]],escapedkeyword:[[/`/,{token:"operator",next:"@pop"}],[/./,"identifier"]],invokedmethod:[[/([.])(@identifier)/,{cases:{$2:["delimeter","type.identifier"],"@default":""}}]]}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9uYWNvLWVkaXRvci9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3N3aWZ0L3N3aWZ0LmpzIl0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJkIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsImxhbmd1YWdlIiwiY29uZiIsImNvbW1lbnRzIiwibGluZUNvbW1lbnQiLCJibG9ja0NvbW1lbnQiLCJicmFja2V0cyIsImF1dG9DbG9zaW5nUGFpcnMiLCJvcGVuIiwiY2xvc2UiLCJzdXJyb3VuZGluZ1BhaXJzIiwiZGVmYXVsdFRva2VuIiwidG9rZW5Qb3N0Zml4IiwiaWRlbnRpZmllciIsImF0dHJpYnV0ZXMiLCJhY2Nlc3Ntb2RpZmllcnMiLCJrZXl3b3JkcyIsInN5bWJvbHMiLCJvcGVyYXRvcnN0YXJ0Iiwib3BlcmF0b3JlbmQiLCJvcGVyYXRvcnMiLCJlc2NhcGVzIiwidG9rZW5pemVyIiwicm9vdCIsImluY2x1ZGUiLCJzeW1ib2wiLCJjb21tZW50IiwiY29tbWVudGRvY2JvZHkiLCJjb21tZW50Ym9keSIsImF0dHJpYnV0ZSIsImNhc2VzIiwiQGF0dHJpYnV0ZXMiLCJAZGVmYXVsdCIsImxpdGVyYWwiLCJ0b2tlbiIsIm5leHQiLCJzdHJpbmdsaXQiLCJpbnRlcnBvbGF0ZWRleHByZXNzaW9uIiwia2V5d29yZCIsIkBrZXl3b3JkcyIsIltBLVpdW2EtekEtWjAtOSRdKiIsImVzY2FwZWRrZXl3b3JkIiwiaW52b2tlZG1ldGhvZCIsIiQyIl0sIm1hcHBpbmdzIjoiOzs7OzhHQUFBQSxFQUFBQyxFQUFBQyxFQUFBLDZCQUFBQzs7OztBQUlBLElBQUFDLEdBQ0FDLFVBQ0FDLFlBQUEsS0FDQUMsY0FBQSxZQUVBQyxXQUNBLElBQVcsTUFDWCxVQUNBLFVBRUFDLG1CQUNTQyxLQUFBLElBQVNDLE1BQUEsTUFDVEQsS0FBQSxJQUFBQyxNQUFBLE1BQ0FELEtBQUEsSUFBQUMsTUFBQSxNQUNBRCxLQUFBLElBQUFDLE1BQUEsTUFDQUQsS0FBQSxJQUFBQyxNQUFBLE1BQ0FELEtBQUEsSUFBQUMsTUFBQSxNQUVUQyxtQkFDU0YsS0FBQSxJQUFTQyxNQUFBLE1BQ1RELEtBQUEsSUFBQUMsTUFBQSxNQUNBRCxLQUFBLElBQUFDLE1BQUEsTUFDQUQsS0FBQSxJQUFBQyxNQUFBLE1BQ0FELEtBQUEsSUFBQUMsTUFBQSxNQUNBRCxLQUFBLElBQUFDLE1BQUEsT0FHVFIsR0FDQVUsYUFBQSxHQUNBQyxhQUFBLFNBRUFDLFdBQUEsa0JBRUFDLFlBQ0Esc0ZBQ0EsbUhBRUFDLGlCQUFBLCtCQUNBQyxVQUNBLDBHQUNBLDBGQUNBLHNHQUNBLG9HQUNBLCtGQUNBLHdHQUNBLGtIQUVBQyxRQUFBLG9DQUVBQyxjQUFBLG9QQUNBQyxZQUFBLHFGQUNBQyxVQUFBLHFEQUVBQyxRQUFBLHdFQUNBQyxXQUNBQyxPQUNhQyxRQUFBLGFBQ0FBLFFBQUEsZUFDQUEsUUFBQSxhQUNBQSxRQUFBLGFBQ0FBLFFBQUEsbUJBQ0FBLFFBQUEsWUFFYkMsU0FDQSxhQUFpQixjQUNqQixpQ0FDQSxvQkFDQSwwQkFDQSx3QkFFQUMsVUFDQSw0QkFDQSwyQ0FDQSxzQkFDQSxrQ0FFQUMsaUJBQ0Esa0NBQ0EsOEJBQ0Esc0NBQ0Esb0JBRUFDLGNBQ0Esa0NBQ0EsMEJBQ0EsZ0JBRUFDLFlBQ0EsaUJBQ0FDLE9BQ0FDLGNBQUEsa0JBQ0FDLFdBQUEsT0FJQUMsVUFDQSxLQUFtQkMsTUFBQSxlQUFBQyxLQUFBLGdCQUNuQixrQ0FDQSxrQ0FDQSx5REFDQSx3REFDQSxxQkFFQUMsWUFDQSxRQUFzQkYsTUFBQSxXQUFBQyxLQUFBLDZCQUN0QixzQkFDQSxnQ0FDQSxLQUFtQkQsTUFBQSxlQUFBQyxLQUFBLFVBQ25CLGVBRUFFLHlCQUNBLE1BQW9CSCxNQUFBLFdBQUFDLEtBQUEsNkJBQ3BCLE1BQW9CRCxNQUFBLFdBQUFDLEtBQUEsVUFDUFgsUUFBQSxhQUNBQSxRQUFBLGFBQ0FBLFFBQUEsWUFFYmMsVUFDQSxLQUFtQkosTUFBQSxXQUFBQyxLQUFBLHFCQUNuQixlQUNBTCxPQUNBUyxZQUFBLFVBQUFDLHFCQUFBLGtCQUNBUixXQUFBLGlCQUlBUyxpQkFDQSxLQUFtQlAsTUFBQSxXQUFBQyxLQUFBLFVBQ25CLG1CQU1BTyxnQkFDQSxzQkFDQVosT0FDQWEsSUFBQSwrQkFDQVgsV0FBQSIsImZpbGUiOiIyOC5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKEMpIERhdmlkIE93ZW5zIElJLCBvd2Vuc2QuaW8uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCB2YXIgY29uZiA9IHtcbiAgICBjb21tZW50czoge1xuICAgICAgICBsaW5lQ29tbWVudDogJy8vJyxcbiAgICAgICAgYmxvY2tDb21tZW50OiBbJy8qJywgJyovJ10sXG4gICAgfSxcbiAgICBicmFja2V0czogW1xuICAgICAgICBbJ3snLCAnfSddLFxuICAgICAgICBbJ1snLCAnXSddLFxuICAgICAgICBbJygnLCAnKSddXG4gICAgXSxcbiAgICBhdXRvQ2xvc2luZ1BhaXJzOiBbXG4gICAgICAgIHsgb3BlbjogJ3snLCBjbG9zZTogJ30nIH0sXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nIH0sXG4gICAgICAgIHsgb3BlbjogJygnLCBjbG9zZTogJyknIH0sXG4gICAgICAgIHsgb3BlbjogJ1wiJywgY2xvc2U6ICdcIicgfSxcbiAgICAgICAgeyBvcGVuOiAnXFwnJywgY2xvc2U6ICdcXCcnIH0sXG4gICAgICAgIHsgb3BlbjogJ2AnLCBjbG9zZTogJ2AnIH0sXG4gICAgXSxcbiAgICBzdXJyb3VuZGluZ1BhaXJzOiBbXG4gICAgICAgIHsgb3BlbjogJ3snLCBjbG9zZTogJ30nIH0sXG4gICAgICAgIHsgb3BlbjogJ1snLCBjbG9zZTogJ10nIH0sXG4gICAgICAgIHsgb3BlbjogJygnLCBjbG9zZTogJyknIH0sXG4gICAgICAgIHsgb3BlbjogJ1wiJywgY2xvc2U6ICdcIicgfSxcbiAgICAgICAgeyBvcGVuOiAnXFwnJywgY2xvc2U6ICdcXCcnIH0sXG4gICAgICAgIHsgb3BlbjogJ2AnLCBjbG9zZTogJ2AnIH0sXG4gICAgXVxufTtcbmV4cG9ydCB2YXIgbGFuZ3VhZ2UgPSB7XG4gICAgZGVmYXVsdFRva2VuOiAnJyxcbiAgICB0b2tlblBvc3RmaXg6ICcuc3dpZnQnLFxuICAgIC8vIFRPRE8ob3dlbnNkKTogU3VwcG9ydCB0aGUgZnVsbCByYW5nZSBvZiB1bmljb2RlIHZhbGlkIGlkZW50aWZpZXJzLlxuICAgIGlkZW50aWZpZXI6IC9bYS16QS1aX11bXFx3JF0qLyxcbiAgICAvLyBUT0RPKG93ZW5zZCk6IFN1cHBvcnQgdGhlIEBhdmFpbGFiaWxpdHkgbWFjcm8gcHJvcGVybHkuXG4gICAgYXR0cmlidXRlczogW1xuICAgICAgICAnQGF1dG9jbG9zdXJlJywgJ0Bub2VzY2FwZScsICdAbm9yZXR1cm4nLCAnQE5TQXBwbGljYXRpb25NYWluJywgJ0BOU0NvcHlpbmcnLCAnQE5TTWFuYWdlZCcsXG4gICAgICAgICdAb2JqYycsICdAVUlBcHBsaWNhdGlvbk1haW4nLCAnQG5vcmV0dXJuJywgJ0BhdmFpbGFiaWxpdHknLCAnQElCQWN0aW9uJywgJ0BJQkRlc2lnbmFibGUnLCAnQElCSW5zcGVjdGFibGUnLCAnQElCT3V0bGV0J1xuICAgIF0sXG4gICAgYWNjZXNzbW9kaWZpZXJzOiBbJ3B1YmxpYycsICdwcml2YXRlJywgJ2ludGVybmFsJ10sXG4gICAga2V5d29yZHM6IFtcbiAgICAgICAgJ19fQ09MVU1OX18nLCAnX19GSUxFX18nLCAnX19GVU5DVElPTl9fJywgJ19fTElORV9fJywgJ2FzJywgJ2FzIScsICdhcz8nLCAnYXNzb2NpYXRpdml0eScsICdicmVhaycsICdjYXNlJywgJ2NhdGNoJyxcbiAgICAgICAgJ2NsYXNzJywgJ2NvbnRpbnVlJywgJ2NvbnZlbmllbmNlJywgJ2RlZmF1bHQnLCAnZGVpbml0JywgJ2RpZFNldCcsICdkbycsICdkeW5hbWljJywgJ2R5bmFtaWNUeXBlJyxcbiAgICAgICAgJ2Vsc2UnLCAnZW51bScsICdleHRlbnNpb24nLCAnZmFsbHRocm91Z2gnLCAnZmluYWwnLCAnZm9yJywgJ2Z1bmMnLCAnZ2V0JywgJ2d1YXJkJywgJ2lmJywgJ2ltcG9ydCcsICdpbicsICdpbmZpeCcsXG4gICAgICAgICdpbml0JywgJ2lub3V0JywgJ2ludGVybmFsJywgJ2lzJywgJ2xhenknLCAnbGVmdCcsICdsZXQnLCAnbXV0YXRpbmcnLCAnbmlsJywgJ25vbmUnLCAnbm9ubXV0YXRpbmcnLCAnb3BlcmF0b3InLFxuICAgICAgICAnb3B0aW9uYWwnLCAnb3ZlcnJpZGUnLCAncG9zdGZpeCcsICdwcmVjZWRlbmNlJywgJ3ByZWZpeCcsICdwcml2YXRlJywgJ3Byb3RvY29sJywgJ1Byb3RvY29sJywgJ3B1YmxpYycsXG4gICAgICAgICdyZXBlYXQnLCAncmVxdWlyZWQnLCAncmV0dXJuJywgJ3JpZ2h0JywgJ3NlbGYnLCAnU2VsZicsICdzZXQnLCAnc3RhdGljJywgJ3N0cnVjdCcsICdzdWJzY3JpcHQnLCAnc3VwZXInLCAnc3dpdGNoJyxcbiAgICAgICAgJ3Rocm93JywgJ3Rocm93cycsICd0cnknLCAndHJ5IScsICdUeXBlJywgJ3R5cGVhbGlhcycsICd1bm93bmVkJywgJ3ZhcicsICd3ZWFrJywgJ3doZXJlJywgJ3doaWxlJywgJ3dpbGxTZXQnLCAnRkFMU0UnLCAnVFJVRSdcbiAgICBdLFxuICAgIHN5bWJvbHM6IC9bPSgpe31cXFtcXF0uLDo7QCNcXF8mXFwtPD5gPyErKlxcXFxcXC9dLyxcbiAgICAvLyBNb3ZlZCAuIHRvIG9wZXJhdG9yc3RhcnQgc28gaXQgY2FuIGJlIGEgZGVsaW1pdGVyXG4gICAgb3BlcmF0b3JzdGFydDogL1tcXC89XFwtKyEqJTw+Jnxefj9cXHUwMEExLVxcdTAwQTdcXHUwMEE5XFx1MDBBQlxcdTAwQUNcXHUwMEFFXFx1MDBCMC1cXHUwMEIxXFx1MDBCNlxcdTAwQkJcXHUwMEJGXFx1MDBEN1xcdTAwRjdcXHUyMDE2LVxcdTIwMTdcXHUyMDIwLVxcdTIwMjdcXHUyMDMwLVxcdTIwM0VcXHUyMDQxLVxcdTIwNTNcXHUyMDU1LVxcdTIwNUVcXHUyMTkwLVxcdTIzRkZcXHUyNTAwLVxcdTI3NzVcXHUyNzk0LVxcdTJCRkZcXHUyRTAwLVxcdTJFN0ZcXHUzMDAxLVxcdTMwMDNcXHUzMDA4LVxcdTMwMzBdLyxcbiAgICBvcGVyYXRvcmVuZDogL1tcXHUwMzAwLVxcdTAzNkZcXHUxREMwLVxcdTFERkZcXHUyMEQwLVxcdTIwRkZcXHVGRTAwLVxcdUZFMEZcXHVGRTIwLVxcdUZFMkZcXHVFMDEwMC1cXHVFMDFFRl0vLFxuICAgIG9wZXJhdG9yczogLyhAb3BlcmF0b3JzdGFydCkoKEBvcGVyYXRvcnN0YXJ0KXwoQG9wZXJhdG9yZW5kKSkqLyxcbiAgICAvLyBUT0RPKG93ZW5zZCk6IFRoZXNlIGFyZSBib3Jyb3dlZCBmcm9tIEMjOyBuZWVkIHRvIHZhbGlkYXRlIGNvcnJlY3RuZXNzIGZvciBTd2lmdC5cbiAgICBlc2NhcGVzOiAvXFxcXCg/OlthYmZucnR2XFxcXFwiJ118eFswLTlBLUZhLWZdezEsNH18dVswLTlBLUZhLWZdezR9fFVbMC05QS1GYS1mXXs4fSkvLFxuICAgIHRva2VuaXplcjoge1xuICAgICAgICByb290OiBbXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAY29tbWVudCcgfSxcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0BhdHRyaWJ1dGUnIH0sXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAbGl0ZXJhbCcgfSxcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0BrZXl3b3JkJyB9LFxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQGludm9rZWRtZXRob2QnIH0sXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAc3ltYm9sJyB9LFxuICAgICAgICBdLFxuICAgICAgICBzeW1ib2w6IFtcbiAgICAgICAgICAgIFsvW3t9KClcXFtcXF1dLywgJ0BicmFja2V0cyddLFxuICAgICAgICAgICAgWy9bPD5dKD8hQHN5bWJvbHMpLywgJ0BicmFja2V0cyddLFxuICAgICAgICAgICAgWy9bLl0vLCAnZGVsaW1pdGVyJ10sXG4gICAgICAgICAgICBbL0BvcGVyYXRvcnMvLCAnb3BlcmF0b3InXSxcbiAgICAgICAgICAgIFsvQHN5bWJvbHMvLCAnb3BlcmF0b3InXVxuICAgICAgICBdLFxuICAgICAgICBjb21tZW50OiBbXG4gICAgICAgICAgICBbL1xcL1xcL1xcLy4qJC8sICdjb21tZW50LmRvYyddLFxuICAgICAgICAgICAgWy9cXC9cXCpcXCovLCAnY29tbWVudC5kb2MnLCAnQGNvbW1lbnRkb2Nib2R5J10sXG4gICAgICAgICAgICBbL1xcL1xcLy4qJC8sICdjb21tZW50J10sXG4gICAgICAgICAgICBbL1xcL1xcKi8sICdjb21tZW50JywgJ0Bjb21tZW50Ym9keSddXG4gICAgICAgIF0sXG4gICAgICAgIGNvbW1lbnRkb2Nib2R5OiBbXG4gICAgICAgICAgICBbL1xcL1xcKi8sICdjb21tZW50JywgJ0Bjb21tZW50Ym9keSddLFxuICAgICAgICAgICAgWy9cXCpcXC8vLCAnY29tbWVudC5kb2MnLCAnQHBvcCddLFxuICAgICAgICAgICAgWy9cXDpbYS16QS1aXStcXDovLCAnY29tbWVudC5kb2MucGFyYW0nXSxcbiAgICAgICAgICAgIFsvLi8sICdjb21tZW50LmRvYyddXG4gICAgICAgIF0sXG4gICAgICAgIGNvbW1lbnRib2R5OiBbXG4gICAgICAgICAgICBbL1xcL1xcKi8sICdjb21tZW50JywgJ0Bjb21tZW50Ym9keSddLFxuICAgICAgICAgICAgWy9cXCpcXC8vLCAnY29tbWVudCcsICdAcG9wJ10sXG4gICAgICAgICAgICBbLy4vLCAnY29tbWVudCddXG4gICAgICAgIF0sXG4gICAgICAgIGF0dHJpYnV0ZTogW1xuICAgICAgICAgICAgWy9cXEBAaWRlbnRpZmllci8sIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdAYXR0cmlidXRlcyc6ICdrZXl3b3JkLmNvbnRyb2wnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJydcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1dXG4gICAgICAgIF0sXG4gICAgICAgIGxpdGVyYWw6IFtcbiAgICAgICAgICAgIFsvXCIvLCB7IHRva2VuOiAnc3RyaW5nLnF1b3RlJywgbmV4dDogJ0BzdHJpbmdsaXQnIH1dLFxuICAgICAgICAgICAgWy8wW2JdKFswMV1fPykrLywgJ251bWJlci5iaW5hcnknXSxcbiAgICAgICAgICAgIFsvMFtvXShbMC03XV8/KSsvLCAnbnVtYmVyLm9jdGFsJ10sXG4gICAgICAgICAgICBbLzBbeF0oWzAtOWEtZkEtRl1fPykrKFtwUF1bXFwtK10oXFxkXz8pKyk/LywgJ251bWJlci5oZXgnXSxcbiAgICAgICAgICAgIFsvKFxcZF8/KSpcXC4oXFxkXz8pKyhbZUVdW1xcLStdPyhcXGRfPykrKT8vLCAnbnVtYmVyLmZsb2F0J10sXG4gICAgICAgICAgICBbLyhcXGRfPykrLywgJ251bWJlciddXG4gICAgICAgIF0sXG4gICAgICAgIHN0cmluZ2xpdDogW1xuICAgICAgICAgICAgWy9cXFxcXFwoLywgeyB0b2tlbjogJ29wZXJhdG9yJywgbmV4dDogJ0BpbnRlcnBvbGF0ZWRleHByZXNzaW9uJyB9XSxcbiAgICAgICAgICAgIFsvQGVzY2FwZXMvLCAnc3RyaW5nJ10sXG4gICAgICAgICAgICBbL1xcXFwuLywgJ3N0cmluZy5lc2NhcGUuaW52YWxpZCddLFxuICAgICAgICAgICAgWy9cIi8sIHsgdG9rZW46ICdzdHJpbmcucXVvdGUnLCBuZXh0OiAnQHBvcCcgfV0sXG4gICAgICAgICAgICBbLy4vLCAnc3RyaW5nJ11cbiAgICAgICAgXSxcbiAgICAgICAgaW50ZXJwb2xhdGVkZXhwcmVzc2lvbjogW1xuICAgICAgICAgICAgWy9cXCgvLCB7IHRva2VuOiAnb3BlcmF0b3InLCBuZXh0OiAnQGludGVycG9sYXRlZGV4cHJlc3Npb24nIH1dLFxuICAgICAgICAgICAgWy9cXCkvLCB7IHRva2VuOiAnb3BlcmF0b3InLCBuZXh0OiAnQHBvcCcgfV0sXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAbGl0ZXJhbCcgfSxcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0BrZXl3b3JkJyB9LFxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHN5bWJvbCcgfVxuICAgICAgICBdLFxuICAgICAgICBrZXl3b3JkOiBbXG4gICAgICAgICAgICBbL2AvLCB7IHRva2VuOiAnb3BlcmF0b3InLCBuZXh0OiAnQGVzY2FwZWRrZXl3b3JkJyB9XSxcbiAgICAgICAgICAgIFsvQGlkZW50aWZpZXIvLCB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2VzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnQGtleXdvcmRzJzogJ2tleXdvcmQnLCAnW0EtWl1bXFxhLXpBLVowLTkkXSonOiAndHlwZS5pZGVudGlmaWVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAZGVmYXVsdCc6ICdpZGVudGlmaWVyJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfV1cbiAgICAgICAgXSxcbiAgICAgICAgZXNjYXBlZGtleXdvcmQ6IFtcbiAgICAgICAgICAgIFsvYC8sIHsgdG9rZW46ICdvcGVyYXRvcicsIG5leHQ6ICdAcG9wJyB9XSxcbiAgICAgICAgICAgIFsvLi8sICdpZGVudGlmaWVyJ11cbiAgICAgICAgXSxcbiAgICAgICAgLy9cdFx0c3ltYm9sOiBbXG4gICAgICAgIC8vXHRcdFx0WyAvQHN5bWJvbHMvLCAnb3BlcmF0b3InIF0sXG4gICAgICAgIC8vXHRcdFx0WyAvQG9wZXJhdG9ycy8sICdvcGVyYXRvcicgXVxuICAgICAgICAvL1x0XHRdLFxuICAgICAgICBpbnZva2VkbWV0aG9kOiBbXG4gICAgICAgICAgICBbLyhbLl0pKEBpZGVudGlmaWVyKS8sIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICckMic6IFsnZGVsaW1ldGVyJywgJ3R5cGUuaWRlbnRpZmllciddLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJydcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1dLFxuICAgICAgICBdXG4gICAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=