{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/tokenization.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-types/main.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/css/cssMode.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/workerManager.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/languageFeatures.js","webpack:///./node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/cpp/cpp.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/azcli/azcli.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/csp/csp.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/css/css.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/go/go.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/html/html.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/java/java.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/less/less.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/lua/lua.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/mysql/mysql.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/objective-c/objective-c.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/pgsql/pgsql.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/php/php.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/powerquery/powerquery.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/powershell/powershell.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/python/python.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/r/r.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/razor/razor.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/redis/redis.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/redshift/redshift.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/sb/sb.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/solidity/solidity.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/sql/sql.js","webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","identifier","attributes","accessmodifiers","keywords","symbols","operatorstart","operatorend","operators","escapes","tokenizer","root","include","symbol","comment","commentdocbody","commentbody","attribute","cases","@attributes","@default","literal","token","next","stringlit","interpolatedexpression","keyword","@keywords","[A-Z][a-zA-Z0-9$]*","escapedkeyword","invokedmethod","$2","notIn","folding","markers","start","RegExp","end","ignoreCase","tagwords","integersuffix","floatsuffix","@tagwords","whitespace","string","qualifiedName","cdata","tag","offSide","numberInteger","numberFloat","numberOctal","numberHex","numberInfinity","numberNaN","numberDate","object","array","$#==$S2","multiString","multiStringContinued","$1==$S2","flowCollections","flowScalars","blockStyle","flowNumber","tagHandle","anchor","Position","Range","Location","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","Promise","monaco","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","p","completeCallback","errorCallback","resources","_i","arguments","length","then","client","_","withSyncedResources","c","e","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","Error","uri","range","defined","undefined","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textDocumentEdit","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","languageFeatures_Range","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","resource","worker","resetSchema","doValidation","map","diag","lsSeverity","MarkerSeverity","Info","toSeverity","startLineNumber","startColumn","endLineNumber","endColumn","getModel","err","console","error","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","getWordUntilPosition","wireCancellationToken","doComplete","info","entry","item","insertText","sortText","filterText","insertTextFormat","toMarkdownString","thing","HoverAdapter","provideHover","doHover","toMarkedStringArray","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","mKind","toSymbolKind","fromFormattingOptions","options","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","context","ranges","Comment","Imports","Region","toFoldingRangeKind","promise","cancel","onCancellationRequested","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","ch_1","scanString","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","main_createScanner","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","numberOfInsertedCharacters","adjustOffset","scanner","lastWasColon","tokens","endState","clone","type","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_state","equals","other","setStateData","setupMode","disposables","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","wordPattern","getStartPosition","getEndPosition","DocumentHighlightAdapter","provideDocumentHighlights","findDocumentHighlights","toHighlighKind","DocumentLinkAdapter","provideLinks","findDocumentLinks","url","registerDocumentHighlightProvider","registerLinkProvider","done","entries","toDocumentHighlightKind","toLocation","parse","DefinitionAdapter","provideDefinition","findDefinition","definition","ReferenceAdapter","provideReferences","findReferences","RenameAdapter","provideRenameEdits","newName","doRename","resourceEdits","_a","toWorkspaceEdit","first","more","concat","registerDefinitionProvider","registerReferenceProvider","registerRenameProvider","_modeId","maxIdleTime","getWorkerMaxIdleTime","timePassedSinceLastUsed","compilerOptions","getCompilerOptions","extraLibs","getExtraLibs","getEagerModelSync","filter","extendStatics","IndentStyle","__extends","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","languageFeatures_Promise","displayPartsToString","displayParts","displayPart","join","Adapter","_positionToOffset","getOffsetAt","_offsetToPosition","getPositionAt","_textSpanToRange","span","p1","p2","DiagnostcsAdapter","_super","_selector","changeSubscription","promises","getDiagnosticsOptions","noSyntaxValidation","noSemanticValidation","getSyntacticDiagnostics","getSemanticDiagnostics","reduce","_convertDiagnostics","_b","messageText","newLine","diagnosticChain","indent","flattenDiagnosticMessageText","SuggestAdapter","getCompletionsAtPosition","convertKind","resolveCompletionItem","myItem","getCompletionEntryDetails","details","Kind","primitiveType","variable","localVariable","memberVariable","memberGetAccessor","memberSetAccessor","function","memberFunction","constructSignature","callSignature","indexSignature","enum","module","class","interface","warning","SignatureHelpAdapter","signatureHelpTriggerCharacters","provideSignatureHelp","getSignatureHelpItems","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","signature","prefixDisplayParts","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","getQuickInfoAtPosition","tags","match","textSpan","OccurrencesAdapter","getOccurrencesAtPosition","isWriteAccess","getDefinitionAtPosition","entries_1","fileName","getReferencesAtPosition","entries_2","OutlineAdapter","getNavigationBarItems","convert","bucket","containerLabel","outlineTypeTable","spans","childItems","child","unknown","script","localFunction","constructorImplementation","typeParameter","alias","const","let","javaScriptWorker","typeScriptWorker","FormatHelper","_convertOptions","ConvertTabsToSpaces","TabSize","IndentSize","Smart","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","FormatAdapter","getFormattingEditsForRange","FormatOnTypeAdapter","provideOnTypeFormattingEdits","getFormattingEditsAfterKeystroke","setupTypeScript","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","registerSignatureHelpProvider","registerOnTypeFormattingEditProvider","encoding","@operators","doccomment","raw","$3==$S2","_monaco","self","onEnterRules","beforeText","afterText","action","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","typeKeywords","octaldigits","binarydigits","hexdigits","regexpctl","regexpesc","common","@typeKeywords","bracket","jsdoc","regexp","regexrange","string_double","string_single","string_backtick","bracketCounting","keywordsWithCaseVariations","lowercase","toUpperCase","uppercaseFirstLetter","apexdoc","str","@eos","constants","@constants","strings","multiLineString","regEx","$S2==interpolatedstring","$S2==\"","herestring","hereregexp","namespaceFollows","parenFollows","@namespaceFollows","$S2==litinterpstring","qualified","namespace","litstring","litinterpstring","interpolatedstring","ws","selector","selectorbody","selectorname","selectorattribute","term","rulevalue","warndebug","import","urldeclaration","parenthizedterm","declarationbody","numbers","units","keyframedeclaration","switchTo","keyframebody","functioninvocation","functionarguments","stringenddoublequote","stringendquote","instructions","instructionAfter","variableAfter","stringBody","dblStringBody","rawstring","EMPTY_ELEMENTS","Indent","doctype","otherTag","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","handlebarsInSimpleState","handlebarsInEmbeddedState","handlebarsRoot","javadoc","_typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__","identifierPlus","nestedJSBegin","nestedJSEnd","stringsEndDoubleQuote","stringsEndQuote","atRules","ATTRIB_NAME","control","noncontrol","jsescapes","empty","codeblock","codeblockgh","linecontent","html","@empty","$S2==style","$S2==script","$S3","embeddedStyle","embeddedScript","functions","@functions","complexIdentifiers","bracketedIdentifier","quotedIdentifier","builtinFunctions","builtinVariables","@builtinVariables","@builtinFunctions","stringDouble","decpart","decimal","(\\d)*","$0","builtinFileHandlers","@builtinFileHandlers","dblStrings","heredoc","heredocBody","perldoc","perldocBody","variables","pseudoColumns","@pseudoColumns","phpInSimpleState","phpInEmbeddedState","phpRoot","@phpKeywords","@phpCompileTimeConstants","@phpPreDefinedVariables","phpComment","phpLineComment","phpDoubleQuoteString","phpSingleQuoteString","phpKeywords","phpCompileTimeConstants","phpPreDefinedVariables","keywords_dlr","keywords_srp","irregular_keyword_list","keywords_types","keywords_effects","IDENTFST","IDENTRST","symbolic","digit","digitseq0","xdigit","xdigitseq0","INTSP","FLOATSP","fexponent","fexponent_bin","deciexp","hexiexp","irregular_keywords","ESCHAR","regex","@keywords_dlr","@keywords_srp","@keywords_types","lexing_COMMENT_block_ml","lexing_COMMENT_block_c","lexing_COMMENT_rest","lexing_EFFECT_commaseq0","@keywords_effects","lexing_EXTCODE","lexing_DQUOTE","operatorKeywords","constructors","builtinConstants","builtinTypes","@constructors","@operatorKeywords","@builtinTypes","@builtinConstants","helpKeywords","$2@tags","$2@keywords","simpleText","attributeList","blockText","($S2\\s+.*$)","endDocString","endDblDocString","roxygen","special","@roxygen","@special","razorInSimpleState","razorInEmbeddedState","razorBlockCommentTopLevel","razorBlockComment","razorRootTopLevel","razorRoot","razorCommon","@razorKeywords","razorKeywords","keywordops","builtins","declarations","linedecls","escape","delim","heredelim","for|until|while","@declarations","@builtins","if|unless|while|until","for","@linedecls","@keywordops","$1","dodecl","do","modifier","then|else|elsif|do","sstring","dstring","$#==$S3","$2==$S2","interpolated","interpolated_compound","pregexp","~[)}\\]]","~@regexpctl","regexcontrol","regexpcomment","pstring","qstring","$#==$S4","qqstring","supportConstants","supportMacros","delimiters","intSuffixes","floatSuffixes","@supportConstants","@supportMacros","nestedproperty","variabledeclaration","extendbody","variablereference","variableinterpolation","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","controlstatement","controlstatementdeclaration","functionbody","parameterBody","constant","defineKeywords","@defineKeywords","@constant","comment2","string_dq","string_sq"],"mappings":"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aAAA,OACAN,WACS4B,MAAA,kBAAA1B,KAAA,IAAmCC,MAAA,MACnCyB,MAAA,wBAAA1B,KAAA,IAAAC,MAAA,MACAyB,MAAA,mBAAA1B,KAAA,IAAAC,MAAA,MACAyB,MAAA,kBAAA1B,KAAA,IAAAC,MAAA,MAETO,UACA,WACA,MACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,YACA,aACA,WACA,MACA,WACA,UACA,WACA,SACA,KACA,SACA,eACA,OACA,OACA,OACA,QACA,WACA,SACA,SACA,QACA,QACA,UACA,QACA,MACA,SACA,QACA,UACA,OACA,KACA,KACA,WACA,SACA,MACA,YACA,eACA,WACA,UACA,OACA,UACA,YACA,MACA,WACA,UACA,YACA,WACA,WACA,UACA,SACA,UACA,UACA,WACA,YACA,SACA,MACA,WACA,mBACA,WACA,SACA,YACA,SACA,QACA,SACA,SACA,SACA,gBACA,cACA,SACA,SACA,WACA,OACA,eACA,QACA,cACA,OACA,MACA,UACA,SACA,WACA,QACA,WACA,QACA,UACA,OACA,WACA,UACA,QACA,QACA,OACA,SACA,SACA,YACA,YACA,aACA,iBACA,UACA,wBACA,UACA,sBACA,WACA,uBACA,OACA,aACA,YACA,QACA,WACA,UACA,QACA,oBACA,UACA,YACA,aACA,aACA,UACA,WACA,aACA,YACA,gBACA,OACA,SACA,eACA,cACA,kBACA,WACA,WACA,UACA,UACA,UACA,SACA,cACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,QACA,yBACA,YACA,SACA,SACA,aACA,eACA,WACA,QACA,WACA,aACA,UACA,UACA,UACA,aACA,WACA,WACA,uBACA,YACA,UACA,aACA,QACA,aACA,WACA,cACA,WACA,WACA,UACA,wBACA,QACA,aAEAI,WACA,4BACA,wCACA,qCACA,yCACA,8BAGAH,QAAA,wBACAI,QAAA,wEACA+B,cAAA,mCACAC,YAAA,UACAyqB,SAAA,WAEAxsB,WACAC,OAEA,oCAAkDW,MAAA,mBAAAC,KAAA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AA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAEToC,SACAC,SACAC,MAAA,IAAAC,OAAA,sDACAC,IAAA,IAAAD,OAAA,2DAsJA+sB,MAjJA,WACA,WACA,MACA,MACA,QACA,KACA,MACA,SACA,aACA,QACA,aACA,OACA,UACA,QACA,OACA,KACA,OACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,WACA,kBACA,UACA,UACA,SACA,OACA,KACA,SACA,OACA,MACA,OACA,YACA,OACA,SACA,UACA,QACA,QACA,UACA,QACA,MACA,OACA,SACA,MACA,SACA,OACA,QACA,SACA,OACA,KACA,aACA,SACA,KACA,QACA,SACA,aACA,MACA,YACA,OACA,OACA,eACA,aACA,cACA,YACA,OACA,QACA,OACA,OACA,OACA,MACA,QACA,SACA,MACA,eACA,aACA,cACA,YACA,MACA,OACA,QACA,SACA,SACA,KACA,KACA,KACA,QACA,WACA,UACA,WACA,SACA,UACA,YACA,SACA,WACA,SACA,YACA,WACA,YACA,SACA,SACA,MACA,QACA,OACA,OACA,SACA,WACA,QACA,SACA,eACA,SACA,aACA,OACA,OACA,aACA,YACA,QACA,SACA,QACA,UACA,WACA,cACA,YACA,UACA,OACA,MACA,OACA,WACA,SACA,SACA,QACA,UACA,OACA,WACA,aACA,OACA,QACA,QACA,aAMA9hB,QAAA,SAAA+hB,GACAD,EAAA1iB,KAAA2iB,GACAD,EAAA1iB,KAAA2iB,EAAAC,eACAF,EAAA1iB,KALA,SAAA2iB,GAAiD,OAAAA,EAAAna,OAAA,GAAAoa,cAAAD,EAAAjQ,OAAA,GAKjDmQ,CAAAF,MAEO,IAAA9vB,GACPS,aAAA,GACAC,aAAA,QACAI,SAAA+uB,EACA3uB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ACA,QACA,KACA,MACA,OACA,WACA,WACA,UACA,UACA,SACA,MACA,QACA,MACA,OACA,SACA,MACA,SACA,SACA,MACA,OACA,SACA,OACA,UACA,UACA,QACA,OACA,aACA,OACA,aACA,MACA,OACA,WACA,KACA,SACA,SACA,QACA,WACA,OACA,OACA,OACA,MACA,QACA,QACA,OACA,OACA,MACA,QACA,OACA,QACA,YACA,OACA,QACA,SACA,UACA,OACA,QACA,WACA,WACA,aACA,KACA,SACA,UACA,OACA,UACA,QACA,UACA,OACA,OACA,MACA,OACA,QACA,UACA,YACA,cACA,SACA,kBACA,cACA,UACA,WACA,MACA,QACA,UACA,MACA,QACA,UACA,OACA,MACA,MACA,QACA,UACA,WACA,SACA,YACA,UACA,UACA,YACA,UACA,UACA,MACA,eACA,MACA,SACA,MACA,OACA,QACA,OACA,QACA,KACA,UACA,SACA,UACA,OAEAsvB,WAAA,sBACAlvB,WACA,IACA,OACA,IACA,KACA,IACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,UACA,SACA,UACA,WAEAE,WACAC,OACA,mCACA,4DAEA,0GACA,gCAGA,mCAEAO,OACAS,YAAA,UACAguB,aAAA,WACAxC,aAAA,YACA/rB,WAAA,iBAIA,4CACaR,QAAA,gBACAA,QAAA,aAEb+B,aAAA,+BAAkD,YAClDitB,UACA,0BACA,uCAEAC,kBACA,wBACA,yBACA,sBACA,mBACA,+DC1MA5wB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACP+hB,YAAA,wFACA7hB,UACAE,cAAA,aACAD,YAAA,KAEAE,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA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X,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,OACAsC,YAAA,EACA5C,WACSE,KAAA,IAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BAETlB,UACA,2HACA,6HACA,6HACA,gIACA,kIACA,oIACA,iIACA,mIACA,mIACA,mIACA,2HACA,6HACA,kIACA,qIACA,8HACA,mIACA,2IACA,+HACA,mIACA,4HACA,sIACA,iJACA,+IACA,gJACA,yJACA,iJACA,4IACA,uIACA,0HACA,sIACA,2IACA,2IACA,yIACA,+IACA,iJACA,sJACA,+IACA,uJACA,kJACA,kJACA,gJACA,gJACA,iJACA,mJACA,uJACA,qJACA,mJACA,wJACA,iJACA,kDAEAI,WACA,8GAEA40B,kBACA,kHACA,qHACA,oHACA,oHACA,kHACA,0HACA,kHACA,sHACA,sHACA,6HACA,0HACA,+HACA,oHACA,wHACA,+HACA,mIACA,kIACA,6HACA,2HACA,yHACA,sHACA,2HACA,gIACA,yHACA,0HACA,+HACA,kIACA,8HACA,gIACA,oIACA,wHACA,+HACA,oIACA,+HACA,qIACA,0IACA,kIACA,oIACA,kIACA,+HACA,6HACA,mIACA,iIACA,uIACA,kIACA,2BAEAC,oBAGA30B,WACAC,OACaC,QAAA,cACAA,QAAA,gBACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBACAA,QAAA,YACb,QAAgB,cAChB,qBACA,UACAM,OACAS,YAAA,UACAwrB,aAAA,WACAmI,oBAAA,aACAC,oBAAA,aACAn0B,WAAA,iBAGA,gCAEAuB,aACA,gBAEApD,WACA,oBACA,mBACA,QAAsB+B,MAAA,gBAAAC,KAAA,cAEtBT,UACA,qBAIA,QAAsBQ,MAAA,gBAAAC,KAAA,UACtB,gBAEAiwB,UACA,+BACA,iCACA,qDAEA5B,UACA,KAAmBtuB,MAAA,SAAAC,KAAA,aACnB,KAAmBD,MAAA,gBAAAC,KAAA,mBAEnBqB,SACA,mBACA,gBACA,KAAmBtB,MAAA,SAAAC,KAAA,UAEnBi0B,eACA,0BACA,uBACA,KAAmBl0B,MAAA,gBAAAC,KAAA,UAEnB0zB,qBACA,KAAmB3zB,MAAA,mBAAAC,KAAA,uBAEnB4zB,mBACA,uBACA,oBACA,KAAmB7zB,MAAA,mBAAAC,KAAA,UAEnB0e,8CChNAhhB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACPE,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,eACAI,UACA,UACA,WACA,UACA,QACA,SACA,MACA,SACA,UACA,SACA,SACA,SACA,QACA,WACA,UACA,OACA,kBACA,aACA,WACA,WACA,aACA,YACA,YACA,UACA,YACA,cACA,aACA,SACA,OACA,OACA,QACA,SACA,QACA,OACA,OACA,QACA,QACA,OACA,WACA,UACA,KACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,MACA,OACA,KACA,KACA,MACA,KACA,QACA,MACA,OACA,MACA,YACA,OACA,SACA,MACA,UACA,SACA,YACA,YACA,WACA,WACA,SACA,MACA,OACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,OACA,OACA,QACA,WACA,WACA,OACA,SAEAq1B,QAAA,YACAC,QAAA,aACAh1B,WACAC,OACaC,QAAA,cACAA,QAAA,gBACAA,QAAA,aACAA,QAAA,aACb,QAAkB,cAClB,eAAiB,cACjB,iBACAM,OACAS,YAAA,UACAP,WAAA,iBAGA,gEAEAuB,aACA,gBAEApD,WACA,gCACA,wBAEAuB,UACA,4BACA,gBAEA0wB,UACA,mDACA,qDACAtwB,OACAy0B,SAAA,SACAC,GAAA,mBAKAhG,UACA,iCACA,oCACA,iCACA,uCAEAwC,aACA,iBACA,gCACA,sBACA,mBACA,2BAEAC,gBACA,iBACA,gCACA,sBACA,mBACA,+DCjLApzB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACPE,UACAC,YAAA,KAEAE,WAAA,IAAkB,MAAK,oBACvBC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,QACAN,WACS4B,MAAA,oBAAA1B,KAAA,IAAqCC,MAAA,MACrCyB,MAAA,wBAAA1B,KAAA,IAAAC,MAAA,MACAyB,MAAA,mBAAA1B,KAAA,IAAAC,MAAA,MAITO,UACA,WACA,OACA,OACA,KACA,UACA,QACA,KACA,KACA,WACA,KACA,IACA,IACA,WACA,MACA,KACA,MACA,cACA,MACA,KACA,KACA,MACA,UACA,KACA,SACA,MACA,KACA,UACA,QACA,WACA,KACA,IACA,QACA,OACA,KACA,KACA,MACA,KACA,KACA,KACA,IACA,UACA,YAGAg1B,kBACA,KACA,MACA,SACA,UACA,KACA,WACA,OACA,cACA,KACA,aACA,SACA,cACA,KACA,YACA,QACA,WACA,KACA,cACA,YACA,aACA,KACA,WACA,MACA,aACA,KACA,aACA,QACA,QACA,KACA,MACA,MACA,SACA,KACA,OACA,QACA,SACA,KACA,OACA,SACA,UACA,KACA,SACA,SACA,WACA,KACA,OACA,SACA,WACA,KACA,QACA,SACA,MACA,KACA,SACA,KACA,QACA,KACA,QACA,OACA,SACA,KACA,OACA,MACA,aACA,KACA,SACA,MACA,OACA,KACA,WACA,OACA,SACA,KACA,OACA,UACA,QACA,KACA,WACA,MACA,UACA,KACA,WACA,MACA,OACA,KACA,WACA,OACA,QACA,KACA,gBACA,OACA,OACA,KACA,gBACA,MACA,QACA,KACA,aACA,MACA,QACA,KACA,WACA,QACA,SACA,KACA,eACA,SACA,UACA,MACA,eACA,YACA,UACA,SACA,YACA,OACA,UACA,QACA,cACA,YACA,UACA,QACA,UACA,OACA,UACA,WACA,UACA,OACA,SACA,QACA,cACA,UACA,WACA,OACA,iBACA,WACA,OACA,UACA,mBACA,WACA,UACA,QACA,cACA,WACA,MACA,QACA,WACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,WACA,MACA,QACA,QACA,gBACA,SACA,WACA,QACA,gBACA,UACA,KACA,QACA,aACA,QACA,UACA,OACA,cACA,SACA,QACA,QACA,aACA,UACA,QACA,MACA,OACA,YACA,YACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,SACA,WACA,OACA,MACA,UACA,UACA,MACA,SACA,QACA,MACA,QACA,OACA,MACA,QACA,OACA,UACA,QACA,WACA,MACA,SACA,SACA,UACA,QACA,SACA,MACA,UACA,OACA,SACA,OACA,SACA,OACA,QACA,UACA,UACA,OACA,OACA,YACA,MACA,OACA,WACA,OACA,OACA,KACA,aACA,QACA,OACA,UACA,aAGAS,qBAAA,kDAEAR,kBACA,KACA,mBACA,2BACA,KACA,MACA,kBACA,KACA,MACA,SACA,KACA,UACA,sBACA,KACA,YACA,MACA,KACA,eACA,QACA,KACA,MACA,OACA,KACA,MACA,OACA,KACA,iBACA,YACA,KACA,sBACA,UACA,KACA,MACA,qBACA,KACA,KACA,0BACA,KACA,KACA,2BACA,KACA,KACA,gBACA,KACA,eACA,UACA,KACA,OACA,OACA,KACA,QACA,aACA,KACA,KACA,YACA,KACA,YACA,cACA,KACA,eACA,gBACA,KACA,aACA,iBACA,KACA,aACA,gBACA,KACA,sBACA,MACA,KACA,qBACA,uBACA,MACA,QACA,UACA,KACA,SACA,iBACA,KACA,QACA,OACA,MACA,cACA,WACA,MACA,2BACA,KACA,uBACA,mBACA,KACA,MACA,qBACA,KACA,MACA,mBACA,MACA,aACA,gCACA,OACA,MACA,qBACA,OACA,MACA,yBACA,YACA,MACA,eACA,OACA,MACA,sBACA,KACA,MACA,mBACA,KACA,MACA,OACA,KACA,MACA,gBACA,QACA,SACA,qBACA,OACA,MACA,0BACA,oBACA,MACA,kBACA,mBACA,qBAGAh1B,QAAA,2BACAI,QAAA,wEAEAC,WACAC,OACaC,QAAA,gBAEb,uBAEAM,OACAS,YAAA,UACA4zB,oBAAA,kBACAO,uBAAA,sBACA10B,WAAA,OAMA,qCAEAF,OACAo0B,oBAAA,sBACAl0B,WAAA,eAIaR,QAAA,aACAA,QAAA,gBAEAA,QAAA,aAEAA,QAAA,aACb,aAAiB,cAGjB,yFACA,WAEA,yBACaA,QAAA,aACb,OAAiB,cAEjB+B,aACA,gBACA,uBACA,sBAEA6uB,UACA,4CACA,+CACA,iBAGA5B,UAAA,6BACAwC,aACA,yBACA,wBACA,eAGA2D,aAAA,gCACA1D,gBACA,yBACA,6BACA,gCACazxB,QAAA,eACb,eAEAo1B,UAEA,8BACiB10B,MAAA,2BAAAC,KAAA,qBAGjB00B,cAEA,eAEA/0B,OACA2C,YAAqCvC,MAAA,2BAAAC,KAAA,YACrCH,WAAA,qBAIA,uBAEA80B,UAAA,sCACAC,cACA,wCACA,oBAEAC,YACA,qBACA,oBACA,wDCtiBAn3B,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACPE,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,OACAsC,YAAA,EACA5C,WACSE,KAAA,IAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BAETlB,UACA,kHACA,qHACA,qHACA,mHACA,oHACA,wGACA,sHACA,gHACA,+GACA,gHACA,kHACA,mHACA,oHACA,+GACA,oHACA,2GACA,kHACA,iHACA,qHACA,wHACA,gHACA,qHACA,sHACA,gHACA,oHACA,8GACA,+GACA,8GACA,gHACA,yGACA,kHACA,6GACA,8GACA,kHACA,iHACA,kHACA,gHACA,wGACA,oHACA,iHACA,6GACA,oHACA,qGACA,8GACA,oHACA,iHACA,iHACA,sHACA,qHACA,gHACA,oHACA,qHACA,gHACA,kHACA,+GACA,yGACA,+GACA,iHACA,uHACA,iHACA,8GACA,oHACA,wHACA,oHACA,qHACA,oHACA,mHACA,+GACA,kHACA,6GACA,sHACA,uEAEAI,WACA,8GAEA40B,kBACA,kHACA,6HACA,2HACA,2HACA,yHACA,yHACA,gIACA,iIACA,iIACA,mIACA,yHACA,uIACA,sIACA,iIACA,qIACA,4HACA,yHACA,8HACA,+HACA,sIACA,+IACA,mIACA,+HACA,oJACA,sIACA,qIACA,mJACA,iJACA,oJACA,sIACA,iJACA,oJACA,kJACA,kJACA,kKACA,wJACA,qJACA,0IACA,6IACA,2IACA,uIACA,oJACA,8IACA,+IACA,wIACA,mIACA,6IACA,0IACA,oJACA,oJACA,4IACA,+JACA,kJACA,0JACA,gFAEAC,oBAGAgB,iBAGA31B,WACAC,OACaC,QAAA,cACAA,QAAA,gBACAA,QAAA,mBACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBACAA,QAAA,YACb,QAAgB,cAChB,qBACA,YACAM,OACAS,YAAA,UACAwrB,aAAA,WACAmI,oBAAA,aACAC,oBAAA,aACAn0B,WAAA,iBAGA,gCAEAuB,aACA,gBAEApD,WACA,oBACA,QAAsB+B,MAAA,gBAAAC,KAAA,cAEtBT,UACA,qBAIA,QAAsBQ,MAAA,gBAAAC,KAAA,UACtB,gBAEA80B,gBACA,wBACAn1B,OACAo1B,iBAAA,aACAl1B,WAAA,iBAIAowB,UACA,+BACA,iCACA,qDAEA5B,UACA,KAAmBtuB,MAAA,SAAAC,KAAA,aAEnBqB,SACA,mBACA,gBACA,KAAmBtB,MAAA,SAAAC,KAAA,UAEnB0zB,qBACA,KAAmB3zB,MAAA,mBAAAC,KAAA,uBAEnB4zB,mBACA,uBACA,oBACA,KAAmB7zB,MAAA,mBAAAC,KAAA,UAEnB0e,8CCpPAhhB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACP+hB,YAAA,uFACA7hB,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,IAAYmC,OAAA,YACrBpC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,YACApC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,YACApC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,YACApC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,sBAETC,SACAC,SACAC,MAAA,IAAAC,OAAA,wBACAC,IAAA,IAAAD,OAAA,8BAIO9C,GACPS,aAAA,GACAC,aAAA,GAGAU,WACAC,OACA,iBAA+BW,MAAA,WAAAqwB,SAAA,4BAC/B,wCACA,mCACA,iEACA,iCAAgDrwB,MAAA,WAAAC,KAAA,cAChD,gCAA+CD,MAAA,WAAAC,KAAA,aAC/C,iCAAgDD,MAAA,WAAAC,KAAA,gBAChD,gCAA+CD,MAAA,WAAAC,KAAA,gBAC/C,uBACA,UAEAkxB,UACA,iBAA+BnxB,MAAA,WAAAqwB,SAAA,+BAC/B,iCACA,4BAEA7wB,UACA,iBAA+BQ,MAAA,WAAAqwB,SAAA,+BAC/B,8BACA,iCACA,6BAEAe,WACA,iBAA+BpxB,MAAA,WAAAqwB,SAAA,gCAC/B,iCACA,gCACA,gCACA,6BACA,kBACA,eAIAlH,SACA,iBAA+BnpB,MAAA,WAAAqwB,SAAA,8BAC/B,6CACA,gCACA,gCACA,6BACA,kBACA,KAAmBrwB,MAAA,iBAAAC,KAAA,kCAAAoxB,aAAA,qBACnB,eACA,oDAAoErxB,MAAA,iBAAAC,KAAA,WAGpEqxB,kBACA,iBAA+BtxB,MAAA,WAAAqwB,SAAA,uCAC/B,2CACA,KAAmBrwB,MAAA,iBAAAC,KAAA,kCAAAoxB,aAAA,qBACnB,eACA,iBAA+BrxB,MAAA,WAAAC,KAAA,UAG/BsxB,wBACA,iBAA+BvxB,MAAA,WAAAqwB,SAAA,6CAC/B,aAA2BrwB,MAAA,kBAAAqwB,SAAA,8BAC3B,aAA2BrwB,MAAA,kBAAAqwB,SAAA,8BAC3B,KAAmBrwB,MAAA,iBAAAC,KAAA,kCAAAoxB,aAAA,qBACnB,eACA,iBAA+BrxB,MAAA,WAAAC,KAAA,UAG/BuxB,uBACA,iBAA+BxxB,MAAA,WAAAqwB,SAAA,gDAC/B,KAAmBrwB,MAAA,iBAAAC,KAAA,sBAAAoxB,aAAA,SACnB,gCACA,gCACA,6BACA,kBACA,eACA,iBAA+BrxB,MAAA,WAAAC,KAAA,UAE/BwxB,iBACA,iBAA+BzxB,MAAA,WAAAqwB,SAAA,yCAAAgB,aAAA,UAC/B,aAA2BrxB,MAAA,WAAAC,KAAA,OAAAoxB,aAAA,UAK3BK,QACA,iBAA+B1xB,MAAA,WAAAqwB,SAAA,6BAC/B,4CACA,gCACA,gCACA,6BACA,kBACA,KAAmBrwB,MAAA,iBAAAC,KAAA,0BAAAoxB,aAAA,cACnB,eACA,mDAAmErxB,MAAA,iBAAAC,KAAA,WAGnE0xB,iBACA,iBAA+B3xB,MAAA,WAAAqwB,SAAA,sCAC/B,0CACA,KAAmBrwB,MAAA,iBAAAC,KAAA,0BAAAoxB,aAAA,cACnB,eACA,gBAA8BrxB,MAAA,WAAAC,KAAA,UAG9B2xB,uBACA,iBAA+B5xB,MAAA,WAAAqwB,SAAA,4CAC/B,aAA2BrwB,MAAA,kBAAAqwB,SAAA,6BAC3B,aAA2BrwB,MAAA,kBAAAqwB,SAAA,6BAC3B,KAAmBrwB,MAAA,iBAAAC,KAAA,0BAAAoxB,aAAA,cACnB,eACA,gBAA8BrxB,MAAA,WAAAC,KAAA,UAG9B4xB,sBACA,iBAA+B7xB,MAAA,WAAAqwB,SAAA,+CAC/B,KAAmBrwB,MAAA,iBAAAC,KAAA,qBAAAoxB,aAAA,SACnB,gCACA,gCACA,6BACA,kBACA,eACA,gBAA8BrxB,MAAA,WAAAC,KAAA,UAE9B6xB,gBACA,iBAA+B9xB,MAAA,WAAAqwB,SAAA,wCAAAgB,aAAA,UAC/B,YAA0BrxB,MAAA,WAAAC,KAAA,OAAAoxB,aAAA,UAG1B4D,mBACA,gCACA,OAAqBj1B,MAAA,cAAAqwB,SAAA,cACR/wB,QAAA,YAEb41B,qBACA,gCACA,OAAqBl1B,MAAA,cAAAqwB,SAAA,WAAAgB,aAAA,SACR/xB,QAAA,YAEb61B,UACA,gBACAv1B,OACAw1B,gBAAyCp1B,MAAA,eACzCq1B,4BAAqDr1B,MAAA,gBACrDF,WAAA,qBAGA,iBACAF,OACA01B,2BAAoDt1B,MAAA,2BACpDF,WAAA,mBAIA,OAAiB,0BACjB,iCACA,qCAEA,eAEA,sCACA,yCAEA,qCAEA,2CACA,2CAEA,2CAA6C,kBAE7C,8CACA,gDACA,mDACA,qCACA,0CACA,0BACA,oBAEAy1B,aACA,8BACA,wBACA,oBAEAC,iBACA,OAAqBx1B,MAAA,WAAAC,KAAA,UACrB,4BACA,gCACA,wBACA,oBAEAw1B,uBACA,yBACA,iCACA,oCACA,0BAEAC,uBACA,yBACA,iCACA,oCACA,2BAGAC,aACA,sCACA,sDACA,4CACA,mDACA,yDACA,2CACA,uDACA,gEACA,kEACA,uCACA,mCACA,kDACA,gDACA,eAEAC,yBACA,YACA,UACA,WACA,WACA,gBACA,aACA,eACA,aAEAC,wBACA,WACA,WACA,QACA,SACA,UACA,YACA,YACA,QACA,WACA,gBACA,sBACA,wBACA,QACA,SAEA12B,QAAA,2GCpRAxB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAOO,IAAAD,GACPE,UACAC,YAAA,KACAC,cAAA,YAEAC,WAAA,IAAkB,MAAK,8BACvBC,mBACSC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,sBACApC,KAAA,IAASC,MAAA,IAAYmC,OAAA,sBACrBpC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,sBACApC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,uBAGF1C,GACPU,aAAA,QAKAD,aAAA,UAEAK,UAEA,UACA,WACA,UACA,UACA,WACA,cACA,YACA,eAEA,KAEA,MAEA,SAEA,QAMA,WAEA,WAEA,WACA,WACA,WACA,YACA,eAEA,KAEA,MAEA,SACA,SACA,SAEA,YAEA,KACA,MACA,MAEA,OACA,QAEA,QACA,SAEA,KACA,OACA,OAEA,SAEA,KAEA,QACA,SACA,SACA,SACA,UAEA,UACA,YAEA,YACA,cAEA,SAQA,MAEA,QAEA,SACA,WAEA,SAEA,UACA,UACA,WAEA,KACA,KAEA,MAEA,MACA,QAEA,UAIA,MACA,SACA,SACA,SAKA,UACA,UAEA,MAEA,UAKA,UACA,UACA,UACA,WACA,cAKA,QAEA,MACA,QAEA,OACA,QAOA,OAEA,WACA,WACA,WACA,YACA,gBAEAg3B,cACA,SACA,UAEA,UACA,cAEA,WAEA,WACA,eACA,eACA,eACA,eACA,eAEA,UACA,WACA,UACA,iBAEA,UACA,YACA,YAEA,WAEA,cACA,cACA,cAEA,OACA,SACA,UACA,QACA,UACA,WAEA,OACA,SACA,UACA,UACA,YACA,aAEA,OACA,SACA,UACA,SACA,WACA,YAEA,SACA,YAEA,SAEA,YAEA,cACA,eAEA,aAEA,iBACA,kBAEAC,cAEA,MACA,SACA,UAEA,QAEA,QACA,WACA,YAEA,QACA,SAEA,SAEA,SACA,SAEA,UAEA,SACA,UAEA,WACA,WAEA,UACA,YACA,aAEAC,wBACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,MACA,OACA,MACA,QACA,OACA,aACA,aACA,YACA,YACA,YACA,WACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,SACA,SACA,QACA,UACA,UACA,SACA,aACA,aACA,YACA,YACA,YACA,WACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,WACA,UACA,eACA,YACA,OACA,MACA,SACA,SAEAC,gBACA,OACA,SACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,SACA,UAGAC,kBACA,IACA,MACA,MACA,MACA,SACA,SACA,SACA,MACA,MACA,KAEAh3B,WACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAEA,KACA,MAEA,KAEA,MACA,OACA,MACA,QAEA,IACA,IAEA,KAEA,KACA,KAEA,OAEA,KAEA,OAEAd,WACSE,KAAA,KAAAC,MAAA,IAAAyB,MAAA,0BACA1B,KAAA,KAAAC,MAAA,IAAAyB,MAAA,0BACA1B,KAAA,KAAAC,MAAA,IAAAyB,MAAA,0BACA1B,KAAA,KAAAC,MAAA,IAAAyB,MAAA,0BACA1B,KAAA,KAAWC,MAAA,IAAYyB,MAAA,0BACvB1B,KAAA,KAAAC,MAAA,IAAAyB,MAAA,0BACA1B,KAAA,KAAUC,MAAA,IAAYyB,MAAA,oBACtB1B,KAAA,KAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,KAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,IAASC,MAAA,IAAYyB,MAAA,oBACrB1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,oBAGTjB,QAAA,wBACAo3B,SAAA,YACAC,SAAA,iBACAC,SAAA,yBACAC,MAAA,QACAC,UAAA,UACAC,OAAA,cACAC,WAAA,WACAC,MAAA,SACAC,QAAA,SACAC,UAAA,kBACAC,cAAA,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,mBACSC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,mCACApC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,mCACApC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,mCACApC,KAAA,IAASC,MAAA,IAAYmC,OAAA,oCAGvB1C,GACPS,aAAA,GACAC,aAAA,MACAsC,YAAA,EACA5C,WACSE,KAAA,IAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,IAASC,MAAA,IAAYyB,MAAA,uBACrB1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BAET63B,kBACA,MACA,MACA,MAEA/4B,UACA,KACA,OACA,OACA,QACA,QACA,KACA,KACA,KACA,MACA,OACA,YACA,UACA,SACA,OACA,OACA,MACA,QAEAg5B,cACA,UACA,QACA,YACA,gBACA,YACA,SACA,SAEA1J,WACA,YACA,OACA,YACA,WAEAvB,cACA,SACA,MACA,aACA,OACA,OACA,UACA,SACA,OACA,OACA,WACA,eACA,WACA,OACA,SACA,OACA,SACA,QACA,YAEAiH,kBACA,kBACA,gBACA,kBACA,aACA,0BACA,uBACA,kBACA,uBACA,4BACA,6BACA,4BACA,qBACA,sBACA,gBACA,iBACA,kBACA,oBACA,aACA,cACA,kBACA,kBACA,0BACA,gBACA,gBACA,gBACA,wCACA,0CACA,sBACA,oBACA,yBACA,sBACA,uBACA,sBACA,qBACA,sBACA,oBACA,oBACA,sBACA,+BACA,+BACA,+BACA,sBACA,oBACA,yBACA,iCACA,iCACA,iCACA,YACA,uBACA,qBACA,kCACA,sCACA,gCACA,kCACA,+BACA,kBACA,uBACA,mBACA,6BACA,eACA,mCACA,wBACA,sBACA,yBACA,+BACA,gCACA,kBACA,sBACA,gBACA,kBACA,kBACA,mBACA,yBACA,iBACA,gBACA,eACA,eACA,iBACA,mBACA,gBACA,gBACA,WACA,iBACA,qBACA,iBACA,mBACA,gBACA,kBACA,oBACA,iBACA,iBACA,YACA,gBACA,sBACA,wBACA,0BACA,uBACA,uBACA,mBACA,qBACA,qBACA,uBACA,yBACA,sBACA,sBACA,uBACA,oBACA,oBACA,uBACA,yBACA,yBACA,2BACA,6BACA,0BACA,0BACA,2BACA,wBACA,wBACA,sBACA,kBACA,aACA,iBACA,qBACA,kBACA,oBACA,sBACA,mBACA,mBACA,gBACA,cACA,mBACA,kBACA,YACA,mBACA,gBACA,yBACA,gBACA,wBACA,oBACA,2BACA,6BACA,6BACA,wBACA,0BACA,0BACA,4BACA,4BACA,0BACA,4BACA,8BACA,8BACA,gCACA,gCACA,8BACA,oBACA,gBACA,oBACA,kBACA,6BACA,2BACA,oBACA,4BACA,wBACA,wBACA,0BACA,0BACA,uBACA,wBACA,sBACA,qBACA,sBACA,yBACA,2BACA,eACA,yBACA,oBACA,+BACA,cACA,gBACA,gBACA,oBACA,iBACA,mBACA,mBACA,oBACA,kBACA,qBACA,sBACA,wBACA,wBACA,iBACA,eACA,wBACA,iBACA,oBACA,sBACA,sBACA,wBACA,iBACA,gBACA,kBACA,eACA,gBACA,kBACA,uBACA,wBACA,2BACA,YACA,uBACA,qBACA,kBACA,gBACA,aACA,oBACA,aACA,aACA,aACA,YACA,sBACA,gBACA,iBACA,mBACA,iBACA,iBACA,eACA,kBACA,eACA,iBACA,eACA,eACA,cACA,eACA,gBACA,mBACA,mBACA,aACA,kBACA,qBACA,iBACA,aACA,kBACA,gBACA,iBACA,gBACA,aACA,cACA,gBACA,mBACA,iBACA,kBACA,eACA,YACA,aACA,kBACA,kBACA,WACA,YACA,cACA,WACA,YACA,YACA,aACA,oBACA,eACA,kBACA,qBACA,iBACA,eACA,cACA,aACA,oBACA,mBACA,mBACA,2BACA,mBACA,mBACA,cACA,4BACA,oBACA,oBACA,eACA,cACA,cACA,uBACA,YACA,YACA,yBACA,WACA,aACA,iBACA,qBACA,aACA,WACA,eACA,mBACA,iBACA,WACA,iBACA,aACA,cACA,cACA,cACA,eACA,oBACA,oBACA,mBACA,0BACA,2BACA,oBACA,sBACA,aACA,cACA,aACA,mBACA,cACA,kBACA,uBACA,gBACA,eACA,eACA,YACA,aACA,eACA,aACA,sBACA,eACA,gBACA,uBACA,eACA,2BACA,mBACA,yBACA,iBACA,cACA,aACA,cACA,cACA,aACA,cACA,gBACA,aACA,kBACA,aACA,mBACA,cACA,kBACA,kBACA,sBACA,mBACA,kBACA,iBACA,eACA,oBACA,oBACA,wBACA,qBACA,kBACA,mBACA,mBACA,sBACA,sBACA,uBACA,sBACA,gBACA,iBACA,yBACA,uBACA,wBACA,uBACA,qBACA,kBACA,qBACA,6BACA,mBACA,sBACA,mBACA,oBACA,cACA,YACA,0BACA,mCACA,gCACA,oCACA,8BACA,gCACA,6BACA,sCACA,iCACA,eACA,gBACA,2BACA,6BACA,kBACA,kBACA,uBACA,sBACA,eACA,6BACA,sBACA,eACA,eACA,oBACA,oBACA,sBACA,gBACA,uBACA,iBACA,oBACA,oBACA,sBACA,iBACA,wBACA,yBACA,2BACA,0BACA,iBACA,eACA,4BACA,iBACA,cACA,eACA,mBACA,oBACA,iBACA,uBACA,oBACA,iBACA,kBACA,cACA,mBACA,mBACA,mBACA,gBACA,aACA,aACA,aACA,cACA,uBACA,uBACA,YACA,aACA,YACA,aACA,mBACA,kBACA,wBACA,cACA,mBACA,sBACA,sBACA,gBACA,uBACA,cACA,sBACA,qBACA,oBACA,2BACA,mBACA,6BACA,sBACA,uBACA,eACA,2BACA,oBACA,4BACA,oCACA,oBACA,qBACA,oBACA,iBACA,eACA,sBACA,mBACA,6BACA,kBACA,aACA,aACA,oBACA,kBACA,eACA,kBACA,eACA,6BACA,6BACA,yBACA,sBACA,kBACA,gBACA,4BACA,aACA,qBACA,yBACA,yBACA,yBACA,0BACA,oBACA,sBACA,UACA,uBACA,yBACA,aACA,eACA,gBACA,WACA,gBACA,cACA,YACA,kBACA,cACA,cACA,aACA,cACA,eACA,cACA,gBACA,kBACA,qBACA,cACA,aACA,cACA,mBACA,cACA,eACA,oBACA,cACA,aACA,gBACA,aACA,kBACA,gBACA,cACA,YACA,eACA,iBACA,aACA,iBACA,YACA,gBACA,YACA,cACA,cACA,mBACA,gBACA,cACA,mBACA,oBACA,cACA,mBACA,iBACA,0BACA,kCACA,sBACA,UACA,kBACA,oBACA,gBACA,mBACA,kBACA,oBACA,qBACA,wBACA,mBACA,iBACA,gBACA,mBACA,aACA,uBACA,cACA,uBACA,YACA,YACA,WACA,gBACA,eACA,eACA,iBACA,iBACA,WACA,iBACA,iBACA,oBACA,uBACA,uBACA,wBACA,oBACA,iBACA,aACA,8BACA,sBACA,iBACA,eACA,WACA,oBACA,eACA,cAEAiE,kBACA,wBACA,qBACA,4BACA,6BACA,4BACA,sBACA,yBACA,sBACA,mBACA,+BACA,uBACA,kBACA,aACA,aACA,eACA,aACA,eACA,cACA,gBACA,oBACA,qBACA,mBACA,mBACA,kBACA,wBACA,yBACA,0BACA,6BACA,0BACA,2BACA,0BACA,qBACA,iBACA,oBACA,qBACA,qBACA,sBACA,gBACA,iBACA,qBACA,sBACA,uBACA,WACA,iBACA,aACA,0BACA,YACA,0BACA,iBACA,mBACA,kBACA,sBACA,uBACA,sBACA,kBACA,mBACA,oBACA,mBACA,iBACA,kBACA,2BACA,6BACA,4BACA,oBACA,sBACA,0BACA,kBACA,0BACA,iCACA,0BACA,gCACA,8BACA,mCACA,2CACA,gCACA,wCACA,iCACA,qBACA,gCACA,uBACA,qBACA,oBACA,uBACA,sBACA,mBACA,yBACA,qBACA,qBACA,mBACA,gBACA,iBACA,kBACA,iBACA,iBAEAC,cACA,cACA,WACA,cACA,sBACA,wBACA,YACA,iBACA,iBACA,mBACA,gBACA,gBACA,YACA,gBACA,oBACA,WACA,eACA,cACA,gBACA,mBACA,gBACA,iBACA,YACA,aACA,aACA,aACA,YACA,qBACA,gBACA,gBACA,YACA,eACA,oBACA,YACA,YACA,cACA,kBACA,aACA,gBACA,kBACA,iB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EACAd,SACAC,MAAA,IAAAC,OAAA,mBACAC,IAAA,IAAAD,OAAA,yBAIO9C,GACPS,aAAA,GACAC,aAAA,UACAI,UACA,MACA,KACA,SACA,QACA,QACA,WACA,MACA,MACA,OACA,OACA,SACA,OACA,UACA,MACA,OACA,SACA,KACA,SACA,KACA,KACA,SACA,OACA,MACA,KACA,OACA,QACA,QACA,SACA,OACA,MACA,QACA,OACA,QACA,MACA,QACA,OACA,UACA,MACA,MACA,MACA,MACA,QACA,aACA,MACA,OACA,SACA,YACA,WACA,MACA,cACA,MACA,SACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,WACA,OACA,SACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,KACA,QACA,SACA,aACA,aACA,OACA,MACA,SACA,OACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,WACA,QACA,YACA,SACA,SACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,SACA,UACA,OACA,SACA,MACA,OACA,QACA,WACA,cACA,cACA,YACA,YACA,WACA,UACA,iBACA,WACA,cAEAV,WACSE,KAAA,IAASC,MAAA,IAAYyB,MAAA,oBACrB1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,sBACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BAETZ,WACAC,OACaC,QAAA,gBACAA,QAAA,aACAA,QAAA,aACb,QAAkB,cAClB,aAAiB,cACjB,uBACA,eACAM,OACAS,YAAA,UACAP,WAAA,iBAKAuB,aACA,gBACA,sBACA,mCACA,oCACA,uCAEAu3B,eACA,iBACA,6BACA,iBAEAC,kBACA,iBACA,6BACA,iBAGA3I,UACA,kDACA,qDAGA5B,UACA,iCACA,oCACA,iCACA,uCAEAwC,aACA,iBACA,gCACA,sBACA,mBACA,2BAEAC,gBACA,iBACA,gCACA,sBACA,mBACA,+DC9OApzB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACPE,UACAC,YAAA,KAEAE,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,KACAo6B,SACA,SACA,UACA,QACA,UACA,YACA,WACA,WACA,YACA,QACA,WACA,SACA,YACA,UACA,kBACA,aACA,uBACA,WACA,eACA,gBACA,iBACA,UACA,WACA,UACA,qBACA,cACA,qBACA,UACA,YACA,UACA,QACA,QACA,cACA,WACA,YACA,QACA,UACA,SACA,UAEA1K,WACA,OACA,QACA,OACA,KACA,MACA,OACA,cACA,WACA,cACA,iBACA,IACA,IACA,UACA,UACA,YACA,aACA,KACA,oBAEAtvB,UACA,QACA,OACA,SACA,KACA,OACA,MACA,KACA,SACA,QACA,QACA,WACA,YACA,UACA,SACA,WACA,UACA,OACA,UACA,SACA,UACA,SACA,aACA,SACA,UACA,UACA,SACA,SACA,UAEAi6B,SACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAEA36B,WACSE,KAAA,IAASC,MAAA,IAAYyB,MAAA,oBACrB1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,sBACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BAETZ,WACAC,OACaC,QAAA,aACAA,QAAA,aACb,aAAiB,cACJA,QAAA,eACb,gCACA,sBACA,gBACA,QAAkB,cAClB,uBACA,eACAM,OACAS,YAAA,UACAguB,aAAA,WACAvuB,WAAA,iBAKAg5B,UACA,QACAl5B,OACAo5B,WAAA,MACA7K,QAAiCnuB,MAAA,cAAAC,KAAA,QACjCH,WAAA,kBAGA,OACAF,OACAuuB,QAAiCnuB,MAAA,cAAAC,KAAA,QACjCH,WAAA,kBAGA,MAAoBE,MAAA,cAAAC,KAAA,UAGpBiwB,UACA,mCACA,2CAGAhxB,YACA,UAAoB,aACpB,UAAqB,aACrB,yBACA,oBACA,kBACA,kBACA,oBACA,kBACA,kBACA,gCAGAovB,UACA,oCACA,uCAEAwC,aACA,OACAlxB,OACAq5B,WAAA,SACAn5B,WAAA,kBAGA,gCACA,eAEAixB,gBACA,OACAnxB,OACAq5B,WAAA,SACAn5B,WAAA,kBAGA,gCACA,mDCtNAnC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAMA,IAAAiuB,EAAA,qBAAAnoB,OAAAooB,KAAApoB,cACAmtB,GAAA,sHACOlzB,GACP+hB,YAAA,mFACA7hB,UACAE,cAAA,qBAEAC,WACA,qBACA,UACA,IAAW,MACX,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAET4tB,eAEAC,WAAA,IAAAtrB,OAAA,UAAAmwB,EAAAvN,KAAA,iDACA2I,UAAA,wBACAC,QAAqBC,aAAAN,EAAAvU,UAAA8U,aAAAC,iBAGrBL,WAAA,IAAAtrB,OAAA,UAAAmwB,EAAAvN,KAAA,iDACA4I,QAAqBC,aAAAN,EAAAvU,UAAA8U,aAAA0E,WAIdlzB,GACPS,aAAA,GACAC,aAAA,GAGAU,WACAC,OACA,OACA,SAAuBW,MAAA,WAAAqwB,SAAA,8BACvB,wCACA,mCACA,iEACA,iCAAgDrwB,MAAA,WAAAC,KAAA,cAChD,gCAA+CD,MAAA,WAAAC,KAAA,aAC/C,iCAAgDD,MAAA,WAAAC,KAAA,gBAChD,gCAA+CD,MAAA,WAAAC,KAAA,gBAC/C,uBACA,eACA,WAEAkxB,UACA,SAAuBnxB,MAAA,WAAAqwB,SAAA,iCACvB,iCACA,4BAEA7wB,UACA,SAAuBQ,MAAA,WAAAqwB,SAAA,iCACvB,8BACA,iCACA,6BAEAe,WACA,SAAuBpxB,MAAA,WAAAqwB,SAAA,kCACvB,iCACA,gCACA,gCACA,6BACA,kBACA,eAIAlH,SACA,SAAuBnpB,MAAA,WAAAqwB,SAAA,gCACvB,6CACA,gCACA,gCACA,6BACA,kBACA,KAAmBrwB,MAAA,iBAAAC,KAAA,kCAAAoxB,aAAA,qBACnB,eACA,oDAAoErxB,MAAA,iBAAAC,KAAA,WAGpEqxB,kBACA,SAAuBtxB,MAAA,WAAAqwB,SAAA,yCACvB,2CACA,KAAmBrwB,MAAA,iBAAAC,KAAA,kCAAAoxB,aAAA,qBACnB,eACA,iBAA+BrxB,MAAA,WAAAC,KAAA,UAG/BsxB,wBACA,SAAuBvxB,MAAA,WAAAqwB,SAAA,+CACvB,aAA2BrwB,MAAA,kBAAAqwB,SAAA,8BAC3B,aAA2BrwB,MAAA,kBAAAqwB,SAAA,8BAC3B,KAAmBrwB,MAAA,iBAAAC,KAAA,kCAAAoxB,aAAA,qBACnB,eACA,iBAA+BrxB,MAAA,WAAAC,KAAA,UAG/BuxB,uBACA,SAAuBxxB,MAAA,WAAAqwB,SAAA,kDACvB,KAAmBrwB,MAAA,iBAAAC,KAAA,sBAAAoxB,aAAA,SACnB,gCACA,gCACA,6BACA,kBACA,eACA,iBAA+BrxB,MAAA,WAAAC,KAAA,UAE/BwxB,iBACA,SAAuBzxB,MAAA,WAAAqwB,SAAA,2CAAAgB,aAAA,UACvB,aAA2BrxB,MAAA,WAAAC,KAAA,OAAAoxB,aAAA,UAK3BK,QACA,SAAuB1xB,MAAA,WAAAqwB,SAAA,+BACvB,4CACA,gCACA,gCACA,6BACA,kBACA,KAAmBrwB,MAAA,iBAAAC,KAAA,0BAAAoxB,aAAA,cACnB,eACA,mDAAmErxB,MAAA,iBAAAC,KAAA,WAGnE0xB,iBACA,SAAuB3xB,MAAA,WAAAqwB,SAAA,wCACvB,0CACA,KAAmBrwB,MAAA,iBAAAC,KAAA,0BAAAoxB,aAAA,cACnB,eACA,gBAA8BrxB,MAAA,WAAAC,KAAA,UAG9B2xB,uBACA,SAAuB5xB,MAAA,WAAAqwB,SAAA,8CACvB,aAA2BrwB,MAAA,kBAAAqwB,SAAA,6BAC3B,aAA2BrwB,MAAA,kBAAAqwB,SAAA,6BAC3B,KAAmBrwB,MAAA,iBAAAC,KAAA,0BAAAoxB,aAAA,cACnB,eACA,gBAA8BrxB,MAAA,WAAAC,KAAA,UAG9B4xB,sBACA,SAAuB7xB,MAAA,WAAAqwB,SAAA,iDACvB,KAAmBrwB,MAAA,iBAAAC,KAAA,qBAAAoxB,aAAA,SACnB,gCACA,gCACA,6BACA,kBACA,eACA,gBAA8BrxB,MAAA,WAAAC,KAAA,UAE9B6xB,gBACA,SAAuB9xB,MAAA,WAAAqwB,SAAA,0CAAAgB,aAAA,UACvB,YAA0BrxB,MAAA,WAAAC,KAAA,OAAAoxB,aAAA,UAG1B6H,qBACA,kDACA,QAAiB,oCACjB,+BAA8Cl5B,MAAA,gBAAAqwB,SAAA,eAC9C,QAAsBrwB,MAAA,aAAAqwB,SAAA,cACtB,OAAqBrwB,MAAA,aAAAqwB,SAAA,cAErB8I,uBACA,kDACA,QAAiB,oCACjB,+BAA8Cn5B,MAAA,gBAAAqwB,SAAA,WAAAgB,aAAA,UAC9C,QAAsBrxB,MAAA,aAAAqwB,SAAA,WAAAgB,aAAA,SACtB,OAAqBrxB,MAAA,aAAAqwB,SAAA,WAAAgB,aAAA,SAErB+H,4BACA,0BACA,uBACA,mBAEAC,oBACA,4BACA,uBACA,mBAEAC,oBACA,KAAgB,sCAChB,+CACA,OAAgB,oBACHh6B,QAAA,gBAEbi6B,YACA,KAAgB,sCAChB,+CACA,KAAgB,gCAChB,yCACaj6B,QAAA,gBAEbk6B,cACA,gBACA55B,OACA65B,kBAA2Cz5B,MAAA,cAC3CF,WAAA,oBAIA,gCAEA,eAEA,yBACA,0CAEA,0BACA,0BAEA,iEACA,+DACA,iEAEA,yCAA6C,iBAE7C,6CACA,+CACA,kDACA,oCACA,yCACA,yBACA,oBAGA45B,eACA,8CACA,2BACA,iCACA,uCACA,sCACA,mCACA,iCACA,+BACA,+BACA,kCACA,mCACA,kCACA,sCACA,wCACA,mCACA,kCACA,wCACA,+BACA,8BACA,sCACA,yCACA,wBACA,kBAEAv6B,QAAA,2GC9QAxB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACPK,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,SACAsC,YAAA,EACA5C,WACSE,KAAA,IAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BAETlB,UACA,4GACA,wGACA,6GACA,8GACA,+GACA,gHACA,wHACA,iHACA,4GACA,2GACA,oHACA,2GACA,kHACA,qHACA,qHACA,kHACA,qHACA,iBAEAI,aAGA40B,oBAGAC,oBAGAgB,iBAGA31B,WACAC,OACaC,QAAA,gBACAA,QAAA,mBACAA,QAAA,aACAA,QAAA,aACAA,QAAA,YACb,QAAgB,cAChB,qBACA,YACAM,OACAS,YAAA,UACAwrB,aAAA,WACAmI,oBAAA,aACAC,oBAAA,aACAn0B,WAAA,iBAGA,gCAEAuB,aACA,gBAEA0zB,gBACA,wBACAn1B,OACAo1B,iBAAA,aACAl1B,WAAA,iBAIAowB,UACA,+BACA,iCACA,qDAEA5B,UACA,KAAmBtuB,MAAA,SAAAC,KAAA,aACnB,KAAmBD,MAAA,gBAAAC,KAAA,mBAEnBqB,SACA,mBACA,gBACA,KAAmBtB,MAAA,SAAAC,KAAA,UAEnBi0B,eACA,0BACA,uBACA,KAAmBl0B,MAAA,gBAAAC,KAAA,UAEnB0e,8CCpHAhhB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACPE,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,OACAsC,YAAA,EACA5C,WACSE,KAAA,IAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BAETlB,UACA,4GACA,8GACA,6GACA,gHACA,gHACA,mHACA,6GACA,mHACA,kHACA,uHACA,gHACA,qHACA,4DAEAI,WACA,8GAEA40B,kBACA,+GACA,kHACA,sHACA,gHACA,iHACA,4GACA,4GACA,6GACA,sHACA,+GACA,+GACA,qHACA,qHACA,qHACA,iHACA,sHACA,wHACA,yHACA,oHACA,4GACA,oHACA,gGACA,wHACA,4GACA,iHACA,yHACA,2HACA,yHACA,oHACA,mHACA,6HACA,8GACA,yHACA,iHACA,uHACA,sHACA,+HACA,0HACA,wHACA,+GACA,+HACA,0GACA,yHACA,0HACA,4GACA,oHACA,sHACA,+GACA,4HACA,6GACA,uHACA,sGACA,qHACA,2HACA,8GACA,8GACA,6HACA,+GACA,gHACA,+GACA,mHACA,oHACA,qHACA,uHACA,mHACA,oHACA,iHACA,0HACA,sHACA,yHACA,qHACA,qHAEAC,oBAGAgB,iBAGA31B,WACAC,OACaC,QAAA,cACAA,QAAA,gBACAA,QAAA,mBACAA,QAAA,aACAA,QAAA,aACAA,QAAA,wBACAA,QAAA,YACb,QAAgB,cAChB,qBACA,YACAM,OACAS,YAAA,UACAwrB,aAAA,WACAmI,oBAAA,aACAC,oBAAA,aACAn0B,WAAA,iBAGA,gCAEAuB,aACA,gBAEApD,WACA,oBACA,QAAsB+B,MAAA,gBAAAC,KAAA,cAEtBT,UACA,qBAIA,QAAsBQ,MAAA,gBAAAC,KAAA,UACtB,gBAEA80B,gBACA,wBACAn1B,OACAo1B,iBAAA,aACAl1B,WAAA,iBAIAowB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CA,KACA,UACA,KACA,QACA,MACA,UACA,KACA,QACA,QACA,SACA,OACA,QACA,MACA,QACA,OACA,KACA,OACA,MACA,MACA,SACA,MACA,QACA,KACA,MACA,OACA,KACA,OACA,MACA,QACA,MACA,OAGA76B,QAAA,0BAEAK,WACAC,OACaC,QAAA,gBAEb,eAEAM,OACAS,YAAA,UACA+5B,YAAA,kBACAt6B,WAAA,OAIaR,QAAA,aACAA,QAAA,gBACAA,QAAA,aACb,aAAiB,cACjB,2BACA,yBACaA,QAAA,aACb,OAAiB,cAEjB+B,aACA,gBACA,uBACA,sBAEA6uB,UACA,4CACA,+CACA,iBAGA5B,UACA,6BACA,gCAEAwC,aACA,yBACA,eAEAC,gBACA,yBACA,eAEA2D,UACA,yIAEA/lB,aACA,gCACA,qBACA,8BACA,WAAoB,8BAEpBquB,gBACA,4BACA,SAAkB,oBAClB,qDCzLAr/B,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACPE,UACAC,YAAA,KACAC,cAAA,YAEAC,WAAA,IAAkB,MAAK,8BACvBC,mBACSC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,sBACApC,KAAA,IAASC,MAAA,IAAYmC,OAAA,sBACrBpC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,sBACApC,KAAA,IAAAC,MAAA,IAAAmC,OAAA,uBAGF1C,GACPS,aAAA,GACAC,aAAA,OACAN,WACS4B,MAAA,kBAAA1B,KAAA,IAAmCC,MAAA,MACnCyB,MAAA,wBAAA1B,KAAA,IAAAC,MAAA,MACAyB,MAAA,mBAAA1B,KAAA,IAAAC,MAAA,MACAyB,MAAA,kBAAA1B,KAAA,IAAAC,MAAA,MAETO,UAEA,SACA,WACA,WACA,UACA,QACA,SACA,WACA,WAEA,UACA,SACA,OAEA,qCAEA,yRAEA,0TAEA,sUAEA,ygOAEA,0hPACA,QACA,OACA,MACA,UACA,UACA,SACA,WACA,YACA,UACA,OACA,QACA,MACA,SACA,WACA,KACA,OACA,MACA,OACA,MACA,QACA,KACA,QACA,WACA,QACA,UACA,SACA,UACA,MACA,KACA,OACA,SAEAI,WACA,4BACA,wCACA,qCACA,yCACA,8BAGAH,QAAA,wBACAI,QAAA,wEACA+B,cAAA,mCACAC,YAAA,UAEA/B,WACAC,OAEA,gBACAO,OACAS,aAAsCL,MAAA,cACtCF,WAAA,iBAIaR,QAAA,gBAEb,4BAEA,uBAEA,qBAEA,aAAiB,cACjB,iCACA,YACAM,OACAisB,aAAA,YACA/rB,WAAA,OAIA,wDACA,0DACA,+DACA,iDACA,sDACA,wCACA,gCAEA,QAAgB,cAEhB,qCACA,yBAEA,sBACA,yDACA,uBAEAuB,aACA,kBACA,6CACA,8BACA,sBAEA7B,UACA,sBACA,0BACA,oBAGAssB,aACA,0BACA,8BACA,wBAEAxqB,SACA,qBACA,6BACA,gCACA,0DCnKA3D,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,GACPE,UACAC,YAAA,KACAC,cAAA,YAEAC,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFP,GACPS,aAAA,GACAC,aAAA,OACAsC,YAAA,EACA5C,WACSE,KAAA,IAAAC,MAAA,IAAAyB,MAAA,qBACA1B,KAAA,IAAAC,MAAA,IAAAyB,MAAA,0BAETlB,UACA,mBACA,SACA,WACA,qBACA,SACA,aACA,SACA,MACA,UACA,QACA,MACA,UACA,UACA,UACA,WACA,QACA,YACA,YACA,kBACA,gBACA,cACA,aACA,qBACA,oBACA,4BACA,mBACA,kBACA,0BACA,2BACA,UACA,QACA,YACA,gBACA,oBACA,qBACA,oBACA,aACA,eACA,gBACA,SACA,cACA,kBACA,aACA,cACA,KACA,MACA,WACA,aACA,sBACA,KACA,SACA,SACA,qBACA,QACA,aACA,iBACA,gBACA,OACA,eACA,aACA,yBACA,cACA,yBACA,+BACA,8BACA,YACA,eACA,oBACA,SACA,kBACA,SACA,YACA,QACA,eACA,SACA,SACA,UACA,MACA,WACA,YACA,eACA,QACA,SACA,kBACA,SACA,eACA,SACA,cACA,OACA,cACA,KACA,QACA,OACA,SACA,SACA,kBACA,UACA,OACA,UACA,QACA,mBACA,cACA,mBACA,kBACA,UACA,OACA,YACA,QACA,oBACA,mBACA,eACA,aACA,eACA,mBACA,UACA,iBACA,aACA,aACA,aACA,sBACA,aACA,UACA,QACA,QACA,UACA,YACA,WACA,UACA,aACA,SACA,aACA,UACA,cACA,sBACA,SACA,YACA,sBACA,cACA,UACA,SACA,0BACA,gBACA,UACA,aACA,cACA,UACA,UACA,WACA,uBACA,WACA,gBACA,UACA,eACA,SACA,YACA,UACA,MACA,SACA,aACA,uBACA,aACA,gBACA,OACA,UACA,eACA,SACA,yBACA,iBACA,QACA,OACA,mBACA,cACA,WACA,mBACA,qBACA,oBACA,eACA,OACA,gCACA,YACA,aACA,WACA,YACA,iBACA,MACA,YACA,OACA,cACA,OACA,YACA,4BACA,oBACA,aACA,MACA,UACA,UACA,aACA,UACA,mBACA,4BACA,mBACA,iBACA,aACA,QACA,qBACA,SACA,UACA,iBACA,OACA,aACA,MACA,OACA,cACA,OACA,OACA,cACA,SACA,eACA,iBACA,UACA,iBACA,WACA,OACA,WACA,cACA,WACA,SACA,OACA,gBACA,mBACA,OACA,aACA,UACA,UACA,WACA,OACA,YACA,QACA,YACA,SACA,gBACA,UACA,aACA,MACA,WACA,eACA,SACA,QACA,6BACA,YACA,SACA,eACA,QACA,uBACA,OACA,aACA,UACA,OACA,SACA,aACA,cACA,WACA,0BACA,YACA,WACA,kBACA,iBACA,WACA,gBACA,0BACA,QACA,SACA,OACA,eACA,QACA,kBACA,OACA,YACA,aACA,eACA,WACA,WACA,aACA,gBACA,6BACA,sBACA,4CACA,sBACA,wCACA,4CACA,aACA,YACA,gBACA,QACA,WACA,QACA,UACA,YACA,MACA,QACA,iCACA,gCACA,SACA,YACA,YACA,YACA,UACA,aACA,UACA,eACA,OACA,gBACA,mBACA,kBACA,OACA,OACA,WACA,WACA,WACA,KACA,sBACA,iBACA,qBACA,gBACA,MACA,SACA,KACA,OACA,WACA,QACA,QACA,QACA,qBACA,OACA,OACA,SACA,SACA,aACA,uBACA,OACA,cACA,OACA,OACA,YACA,WACA,wBACA,OACA,QACA,WACA,kBACA,iBACA,cACA,KACA,qBACA,iBACA,wCACA,kBACA,QACA,YACA,cACA,wBACA,aACA,UACA,YACA,cACA,QACA,cACA,WACA,eACA,OACA,YACA,QACA,cACA,cACA,SACA,WACA,UACA,MACA,UACA,OACA,KACA,KACA,UACA,YACA,MACA,KACA,OACA,WACA,aACA,mBACA,eACA,YACA,eACA,YACA,WACA,MACA,aACA,OACA,SACA,OACA,sBACA,YACA,WACA,OACA,UACA,QACA,UACA,UACA,UACA,UACA,WACA,QACA,SACA,OACA,WACA,cACA,gBACA,OACA,cACA,iBACA,QACA,qBACA,kBACA,eACA,QACA,WACA,OACA,MACA,SACA,OACA,0BACA,SACA,kBACA,uBACA,UACA,eACA,iBACA,YACA,sBACA,aACA,qBACA,oBACA,qBACA,WACA,SACA,YACA,YACA,eACA,UACA,kBACA,WACA,KACA,mBACA,YACA,gBACA,SACA,SACA,mBACA,wBACA,uCACA,wBACA,QACA,UACA,uBACA,qBACA,cACA,cACA,kBACA,sBACA,qBACA,SACA,UACA,WACA,SACA,iBACA,SACA,QACA,QACA,OACA,aACA,cACA,OACA,aACA,WACA,qBACA,QACA,YACA,kBACA,cACA,aACA,eACA,UACA,OACA,KACA,iBACA,cACA,iBACA,gBACA,cACA,cACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,SACA,SACA,MACA,wBACA,eACA,OACA,cACA,aACA,WACA,UACA,WACA,SACA,SACA,eACA,aACA,WACA,SACA,QACA,OACA,WACA,UACA,qBACA,WACA,SACA,KACA,MACA,UACA,SACA,UACA,cACA,eACA,KACA,aACA,SACA,OACA,OACA,gBACA,WACA,aACA,WACA,SACA,QACA,MACA,SACA,eACA,OACA,WACA,QACA,YACA,YACA,OACA,cACA,YACA,UACA,mBACA,YACA,UACA,YACA,aACA,UACA,WACA,OACA,UACA,WACA,UACA,iBACA,YACA,gBACA,OACA,0BACA,OACA,aACA,OACA,YACA,YACA,UACA,eACA,QACA,QACA,WACA,iBACA,UACA,aACA,OACA,YACA,YACA,iBACA,UACA,UACA,WACA,uBACA,kBACA,oBACA,WACA,oBACA,SACA,MACA,UACA,QACA,4BACA,QACA,cACA,oBACA,YACA,QACA,MACA,MACA,MACA,UACA,OACA,0BACA,YACA,yBACA,wBACA,aACA,wBACA,gBACA,oBACA,WACA,WACA,WACA,kBACA,YACA,OACA,UACA,UACA,YACA,cACA,WACA,YACA,qBACA,aACA,aACA,uBACA,6BACA,WACA,SACA,2BACA,sBACA,SACA,aACA,yBACA,cACA,iBACA,aACA,iBACA,UACA,cACA,2BACA,mCACA,mCACA,WACA,WACA,SACA,qBACA,QACA,WACA,UACA,UACA,WACA,kBACA,SACA,SACA,aACA,YACA,SACA,UACA,SACA,SACA,SACA,aACA,SACA,OACA,WACA,SACA,OACA,QACA,MACA,WACA,aACA,UACA,OACA,iBACA,gBACA,aACA,WACA,WACA,UACA,OACA,OACA,SACA,SACA,OACA,YACA,SACA,kBACA,cACA,gBACA,SACA,SACA,eACA,SACA,SACA,YACA,iBACA,iBACA,UACA,SACA,eACA,gBACA,SACA,YACA,OACA,OACA,OACA,WACA,eACA,SACA,UACA,iBACA,eACA,UACA,kBACA,MACA,OACA,UACA,kBACA,aACA,WACA,eACA,gBACA,eACA,iBACA,aACA,WACA,MACA,YACA,SACA,cACA,cACA,eACA,cACA,YACA,OACA,OACA,gBACA,WACA,aACA,WACA,iBACA,SACA,SACA,UACA,2BACA,gBACA,QACA,MACA,cACA,UACA,UACA,QACA,aACA,UACA,gBACA,cACA,QACA,YACA,SACA,wBACA,aACA,yBACA,yBACA,QACA,eACA,SACA,aACA,OACA,gBACA,SACA,aACA,iBACA,WACA,UACA,UACA,eACA,YACA,UACA,SACA,YACA,qBACA,UACA,UACA,SACA,QACA,eACA,cACA,UACA,WACA,OACA,OACA,SACA,uBACA,KACA,MACA,OACA,eACA,WACA,OACA,YACA,QACA,OACA,OACA,UACA,QACA,YACA,UACA,KACA,MACA,sBACA,WACA,UACA,cACA,kBACA,wBACA,OACA,cACA,WACA,wBACA,UACA,aACA,kBACA,OACA,WACA,eACA,cACA,MACA,OACA,wBACA,OACA,eACA,YACA,YACA,cACA,YACA,SACA,mBACA,UACA,YACA,SACA,SACA,SACA,aACA,cACA,UACA,MACA,MACA,OACA,OACA,cACA,QACA,YACA,aACA,QACA,SACA,YACA,UACA,UACA,aACA,UACA,OACA,gBACA,QACA,aACA,uBACA,UACA,OACA,SACA,kBACA,OACA,QACA,QACA,UACA,OACA,SACA,UACA,UACA,OACA,WACA,YACA,aACA,QACA,OACA,OACA,MACA,UACA,gBACA,YACA,SACA,SACA,OACA,OACA,QAEAI,WAEA,mEAEA,6BAEA,6DAEA,kCAEA,kBAEA,WAEA40B,kBAEA,kHAEA,uGAEA,iDAEA,6BAEA,8DAEA,2EACA,yHACA,sGACA,0HAEA,gBAEA,yFAEA,wHACA,0HACA,6FAEA,mCAEA,8FACA,yEAEA,qGACA,gHACA,wGACA,gFACA,sGACA,8GAEA,yCAEA,uBAEA,oDAEA,gIACA,kIACA,qEAEA,0GACA,0HAEA,kIACA,8HACA,+GAEA,sBAEA,2DAEA,kJAEA,gCAEA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","file":"static/js/vendors.chunk.js","sourcesContent":["/*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '`', close: '`' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '`', close: '`' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.swift',\n    // TODO(owensd): Support the full range of unicode valid identifiers.\n    identifier: /[a-zA-Z_][\\w$]*/,\n    // TODO(owensd): Support the @availability macro properly.\n    attributes: [\n        '@autoclosure', '@noescape', '@noreturn', '@NSApplicationMain', '@NSCopying', '@NSManaged',\n        '@objc', '@UIApplicationMain', '@noreturn', '@availability', '@IBAction', '@IBDesignable', '@IBInspectable', '@IBOutlet'\n    ],\n    accessmodifiers: ['public', 'private', 'internal'],\n    keywords: [\n        '__COLUMN__', '__FILE__', '__FUNCTION__', '__LINE__', 'as', 'as!', 'as?', 'associativity', 'break', 'case', 'catch',\n        'class', 'continue', 'convenience', 'default', 'deinit', 'didSet', 'do', 'dynamic', 'dynamicType',\n        'else', 'enum', 'extension', 'fallthrough', 'final', 'for', 'func', 'get', 'guard', 'if', 'import', 'in', 'infix',\n        'init', 'inout', 'internal', 'is', 'lazy', 'left', 'let', 'mutating', 'nil', 'none', 'nonmutating', 'operator',\n        'optional', 'override', 'postfix', 'precedence', 'prefix', 'private', 'protocol', 'Protocol', 'public',\n        'repeat', 'required', 'return', 'right', 'self', 'Self', 'set', 'static', 'struct', 'subscript', 'super', 'switch',\n        'throw', 'throws', 'try', 'try!', 'Type', 'typealias', 'unowned', 'var', 'weak', 'where', 'while', 'willSet', 'FALSE', 'TRUE'\n    ],\n    symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n    // Moved . to operatorstart so it can be a delimiter\n    operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n    operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n    operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n    // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            { include: '@comment' },\n            { include: '@attribute' },\n            { include: '@literal' },\n            { include: '@keyword' },\n            { include: '@invokedmethod' },\n            { include: '@symbol' },\n        ],\n        symbol: [\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/[.]/, 'delimiter'],\n            [/@operators/, 'operator'],\n            [/@symbols/, 'operator']\n        ],\n        comment: [\n            [/\\/\\/\\/.*$/, 'comment.doc'],\n            [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@commentbody']\n        ],\n        commentdocbody: [\n            [/\\/\\*/, 'comment', '@commentbody'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'],\n            [/./, 'comment.doc']\n        ],\n        commentbody: [\n            [/\\/\\*/, 'comment', '@commentbody'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/./, 'comment']\n        ],\n        attribute: [\n            [/\\@@identifier/, {\n                    cases: {\n                        '@attributes': 'keyword.control',\n                        '@default': ''\n                    }\n                }]\n        ],\n        literal: [\n            [/\"/, { token: 'string.quote', next: '@stringlit' }],\n            [/0[b]([01]_?)+/, 'number.binary'],\n            [/0[o]([0-7]_?)+/, 'number.octal'],\n            [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'],\n            [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'],\n            [/(\\d_?)+/, 'number']\n        ],\n        stringlit: [\n            [/\\\\\\(/, { token: 'operator', next: '@interpolatedexpression' }],\n            [/@escapes/, 'string'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', next: '@pop' }],\n            [/./, 'string']\n        ],\n        interpolatedexpression: [\n            [/\\(/, { token: 'operator', next: '@interpolatedexpression' }],\n            [/\\)/, { token: 'operator', next: '@pop' }],\n            { include: '@literal' },\n            { include: '@keyword' },\n            { include: '@symbol' }\n        ],\n        keyword: [\n            [/`/, { token: 'operator', next: '@escapedkeyword' }],\n            [/@identifier/, {\n                    cases: {\n                        '@keywords': 'keyword', '[A-Z][\\a-zA-Z0-9$]*': 'type.identifier',\n                        '@default': 'identifier'\n                    }\n                }]\n        ],\n        escapedkeyword: [\n            [/`/, { token: 'operator', next: '@pop' }],\n            [/./, 'identifier']\n        ],\n        //\t\tsymbol: [\n        //\t\t\t[ /@symbols/, 'operator' ],\n        //\t\t\t[ /@operators/, 'operator' ]\n        //\t\t],\n        invokedmethod: [\n            [/([.])(@identifier)/, {\n                    cases: {\n                        '$2': ['delimeter', 'type.identifier'],\n                        '@default': ''\n                    }\n                }],\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '\\'',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'], ['[', ']'], ['(', ')'], ['<', '>'],\n        ['addhandler', 'end addhandler'],\n        ['class', 'end class'],\n        ['enum', 'end enum'],\n        ['event', 'end event'],\n        ['function', 'end function'],\n        ['get', 'end get'],\n        ['if', 'end if'],\n        ['interface', 'end interface'],\n        ['module', 'end module'],\n        ['namespace', 'end namespace'],\n        ['operator', 'end operator'],\n        ['property', 'end property'],\n        ['raiseevent', 'end raiseevent'],\n        ['removehandler', 'end removehandler'],\n        ['select', 'end select'],\n        ['set', 'end set'],\n        ['structure', 'end structure'],\n        ['sub', 'end sub'],\n        ['synclock', 'end synclock'],\n        ['try', 'end try'],\n        ['while', 'end while'],\n        ['with', 'end with'],\n        ['using', 'end using'],\n        ['do', 'loop'],\n        ['for', 'next']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '<', close: '>', notIn: ['string', 'comment'] },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#Region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#End Region\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.vb',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.angle', open: '<', close: '>' },\n        // Special bracket statement pairs\n        // according to https://msdn.microsoft.com/en-us/library/tsw2a11z.aspx\n        { token: 'keyword.tag-addhandler', open: 'addhandler', close: 'end addhandler' },\n        { token: 'keyword.tag-class', open: 'class', close: 'end class' },\n        { token: 'keyword.tag-enum', open: 'enum', close: 'end enum' },\n        { token: 'keyword.tag-event', open: 'event', close: 'end event' },\n        { token: 'keyword.tag-function', open: 'function', close: 'end function' },\n        { token: 'keyword.tag-get', open: 'get', close: 'end get' },\n        { token: 'keyword.tag-if', open: 'if', close: 'end if' },\n        { token: 'keyword.tag-interface', open: 'interface', close: 'end interface' },\n        { token: 'keyword.tag-module', open: 'module', close: 'end module' },\n        { token: 'keyword.tag-namespace', open: 'namespace', close: 'end namespace' },\n        { token: 'keyword.tag-operator', open: 'operator', close: 'end operator' },\n        { token: 'keyword.tag-property', open: 'property', close: 'end property' },\n        { token: 'keyword.tag-raiseevent', open: 'raiseevent', close: 'end raiseevent' },\n        { token: 'keyword.tag-removehandler', open: 'removehandler', close: 'end removehandler' },\n        { token: 'keyword.tag-select', open: 'select', close: 'end select' },\n        { token: 'keyword.tag-set', open: 'set', close: 'end set' },\n        { token: 'keyword.tag-structure', open: 'structure', close: 'end structure' },\n        { token: 'keyword.tag-sub', open: 'sub', close: 'end sub' },\n        { token: 'keyword.tag-synclock', open: 'synclock', close: 'end synclock' },\n        { token: 'keyword.tag-try', open: 'try', close: 'end try' },\n        { token: 'keyword.tag-while', open: 'while', close: 'end while' },\n        { token: 'keyword.tag-with', open: 'with', close: 'end with' },\n        // Other pairs\n        { token: 'keyword.tag-using', open: 'using', close: 'end using' },\n        { token: 'keyword.tag-do', open: 'do', close: 'loop' },\n        { token: 'keyword.tag-for', open: 'for', close: 'next' }\n    ],\n    keywords: [\n        'AddHandler', 'AddressOf', 'Alias', 'And', 'AndAlso', 'As', 'Async', 'Boolean', 'ByRef', 'Byte', 'ByVal', 'Call',\n        'Case', 'Catch', 'CBool', 'CByte', 'CChar', 'CDate', 'CDbl', 'CDec', 'Char', 'CInt', 'Class', 'CLng',\n        'CObj', 'Const', 'Continue', 'CSByte', 'CShort', 'CSng', 'CStr', 'CType', 'CUInt', 'CULng', 'CUShort',\n        'Date', 'Decimal', 'Declare', 'Default', 'Delegate', 'Dim', 'DirectCast', 'Do', 'Double', 'Each', 'Else',\n        'ElseIf', 'End', 'EndIf', 'Enum', 'Erase', 'Error', 'Event', 'Exit', 'False', 'Finally', 'For', 'Friend',\n        'Function', 'Get', 'GetType', 'GetXMLNamespace', 'Global', 'GoSub', 'GoTo', 'Handles', 'If', 'Implements',\n        'Imports', 'In', 'Inherits', 'Integer', 'Interface', 'Is', 'IsNot', 'Let', 'Lib', 'Like', 'Long', 'Loop',\n        'Me', 'Mod', 'Module', 'MustInherit', 'MustOverride', 'MyBase', 'MyClass', 'NameOf', 'Namespace', 'Narrowing', 'New',\n        'Next', 'Not', 'Nothing', 'NotInheritable', 'NotOverridable', 'Object', 'Of', 'On', 'Operator', 'Option',\n        'Optional', 'Or', 'OrElse', 'Out', 'Overloads', 'Overridable', 'Overrides', 'ParamArray', 'Partial',\n        'Private', 'Property', 'Protected', 'Public', 'RaiseEvent', 'ReadOnly', 'ReDim', 'RemoveHandler', 'Resume',\n        'Return', 'SByte', 'Select', 'Set', 'Shadows', 'Shared', 'Short', 'Single', 'Static', 'Step', 'Stop',\n        'String', 'Structure', 'Sub', 'SyncLock', 'Then', 'Throw', 'To', 'True', 'Try', 'TryCast', 'TypeOf',\n        'UInteger', 'ULong', 'UShort', 'Using', 'Variant', 'Wend', 'When', 'While', 'Widening', 'With', 'WithEvents',\n        'WriteOnly', 'Xor'\n    ],\n    tagwords: [\n        'If', 'Sub', 'Select', 'Try', 'Class', 'Enum',\n        'Function', 'Get', 'Interface', 'Module', 'Namespace', 'Operator', 'Set', 'Structure', 'Using', 'While', 'With',\n        'Do', 'Loop', 'For', 'Next', 'Property', 'Continue', 'AddHandler', 'RemoveHandler', 'Event', 'RaiseEvent', 'SyncLock'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?;\\.,:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /U?[DI%L&S@]?/,\n    floatsuffix: /[R#F!]?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // whitespace\n            { include: '@whitespace' },\n            // special ending tag-words\n            [/next(?!\\w)/, { token: 'keyword.tag-for' }],\n            [/loop(?!\\w)/, { token: 'keyword.tag-do' }],\n            // usual ending tags\n            [/end\\s+(?!for|do)([a-zA-Z_]\\w*)/, { token: 'keyword.tag-$1' }],\n            // identifiers, tagwords, and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@tagwords': { token: 'keyword.tag-$0' },\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // Preprocessor directive\n            [/^\\s*#\\w+/, 'keyword'],\n            // numbers\n            [/\\d*\\d+e([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+(e[\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/&H[0-9a-f]+(@integersuffix)/, 'number.hex'],\n            [/&0[0-7]+(@integersuffix)/, 'number.octal'],\n            [/\\d+(@integersuffix)/, 'number'],\n            // date literal\n            [/#.*#/, 'number'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(\\'|REM(?!\\w)).*$/, 'comment'],\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"C?/, 'string', '@pop']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->'],\n    },\n    brackets: [\n        ['<', '>']\n    ],\n    autoClosingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.xml',\n    ignoreCase: true,\n    // Useful regular expressions\n    qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n    tokenizer: {\n        root: [\n            [/[^<&]+/, ''],\n            { include: '@whitespace' },\n            // Standard opening tag\n            [/(<)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag', next: '@tag' }\n                ]],\n            // Standard closing tag\n            [/(<\\/)(@qualifiedName)(\\s*)(>)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag' },\n                    '',\n                    { token: 'delimiter' }\n                ]],\n            // Meta tags - instruction\n            [/(<\\?)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // Meta tags - declaration\n            [/(<\\!)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // CDATA\n            [/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', next: '@cdata' }],\n            [/&\\w+;/, 'string.escape'],\n        ],\n        cdata: [\n            [/[^\\]]+/, ''],\n            [/\\]\\]>/, { token: 'delimiter.cdata', next: '@pop' }],\n            [/\\]/, '']\n        ],\n        tag: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']],\n            [/@qualifiedName/, 'attribute.name'],\n            [/\\?>/, { token: 'delimiter', next: '@pop' }],\n            [/(\\/)(>)/, [\n                    { token: 'tag' },\n                    { token: 'delimiter', next: '@pop' }\n                ]],\n            [/>/, { token: 'delimiter', next: '@pop' }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n    },\n};\n","export var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        offSide: true\n    }\n};\nexport var language = {\n    tokenPostfix: '.yaml',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: ['true', 'True', 'TRUE', 'false', 'False', 'FALSE', 'null', 'Null', 'Null', '~'],\n    numberInteger: /(?:0|[+-]?[0-9]+)/,\n    numberFloat: /(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/,\n    numberOctal: /0o[0-7]+/,\n    numberHex: /0x[0-9a-fA-F]+/,\n    numberInfinity: /[+-]?\\.(?:inf|Inf|INF)/,\n    numberNaN: /\\.(?:nan|Nan|NAN)/,\n    numberDate: /\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/,\n    escapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Directive\n            [/%[^ ]+.*$/, 'meta.directive'],\n            // Document Markers\n            [/---/, 'operators.directivesEnd'],\n            [/\\.{3}/, 'operators.documentEnd'],\n            // Block Structure Indicators\n            [/[-?:](?= )/, 'operators'],\n            { include: '@anchor' },\n            { include: '@tagHandle' },\n            { include: '@flowCollections' },\n            { include: '@blockStyle' },\n            // Numbers\n            [/@numberInteger(?![ \\t]*\\S+)/, 'number'],\n            [/@numberFloat(?![ \\t]*\\S+)/, 'number.float'],\n            [/@numberOctal(?![ \\t]*\\S+)/, 'number.octal'],\n            [/@numberHex(?![ \\t]*\\S+)/, 'number.hex'],\n            [/@numberInfinity(?![ \\t]*\\S+)/, 'number.infinity'],\n            [/@numberNaN(?![ \\t]*\\S+)/, 'number.nan'],\n            [/@numberDate(?![ \\t]*\\S+)/, 'number.date'],\n            // Key:Value pair\n            [/(\".*?\"|'.*?'|.*?)([ \\t]*)(:)( |$)/, ['type', 'white', 'operators', 'white']],\n            { include: '@flowScalars' },\n            // String nodes\n            [/.+$/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Collection: Flow Mapping\n        object: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Flow Mapping termination\n            [/\\}/, '@brackets', '@pop'],\n            // Flow Mapping delimiter\n            [/,/, 'delimiter.comma'],\n            // Flow Mapping Key:Value delimiter\n            [/:(?= )/, 'operators'],\n            // Flow Mapping Key:Value key\n            [/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/, 'type'],\n            // Start Flow Style\n            { include: '@flowCollections' },\n            { include: '@flowScalars' },\n            // Scalar Data types\n            { include: '@tagHandle' },\n            { include: '@anchor' },\n            { include: '@flowNumber' },\n            // Other value (keyword or string)\n            [/[^\\},]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Collection: Flow Sequence\n        array: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Flow Sequence termination\n            [/\\]/, '@brackets', '@pop'],\n            // Flow Sequence delimiter\n            [/,/, 'delimiter.comma'],\n            // Start Flow Style\n            { include: '@flowCollections' },\n            { include: '@flowScalars' },\n            // Scalar Data types\n            { include: '@tagHandle' },\n            { include: '@anchor' },\n            { include: '@flowNumber' },\n            // Other value (keyword or string)\n            [/[^\\],]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Scalars (quoted strings)\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // First line of a Block Style\n        multiString: [\n            [/^( +).+$/, 'string', '@multiStringContinued.$1']\n        ],\n        // Further lines of a Block Style\n        //   Workaround for indentation detection\n        multiStringContinued: [\n            [/^( *).+$/, {\n                    cases: {\n                        '$1==$S2': 'string',\n                        '@default': { token: '@rematch', next: '@popall' }\n                    }\n                }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white']\n        ],\n        // Only line comments\n        comment: [\n            [/#.*$/, 'comment']\n        ],\n        // Start Flow Collections\n        flowCollections: [\n            [/\\[/, '@brackets', '@array'],\n            [/\\{/, '@brackets', '@object']\n        ],\n        // Start Flow Scalars (quoted strings)\n        flowScalars: [\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\'']\n        ],\n        // Start Block Scalar\n        blockStyle: [\n            [/[>|][0-9]*[+-]?$/, 'operators', '@multiString']\n        ],\n        // Numbers in Flow Collections (terminate with ,]})\n        flowNumber: [\n            [/@numberInteger(?=[ \\t]*[,\\]\\}])/, 'number'],\n            [/@numberFloat(?=[ \\t]*[,\\]\\}])/, 'number.float'],\n            [/@numberOctal(?=[ \\t]*[,\\]\\}])/, 'number.octal'],\n            [/@numberHex(?=[ \\t]*[,\\]\\}])/, 'number.hex'],\n            [/@numberInfinity(?=[ \\t]*[,\\]\\}])/, 'number.infinity'],\n            [/@numberNaN(?=[ \\t]*[,\\]\\}])/, 'number.nan'],\n            [/@numberDate(?=[ \\t]*[,\\]\\}])/, 'number.date']\n        ],\n        tagHandle: [\n            [/\\![^ ]*/, 'tag']\n        ],\n        anchor: [\n            [/[&*][^ ]+/, 'namespace']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `JSONWorker` instance\n                moduleId: 'vs/language/json/jsonWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n            _this._resetSchema(model.uri);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n            _this._resetSchema(event.model.uri);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                monaco.editor.getModels().forEach(onModelRemoved);\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n        this._worker().then(function (worker) {\n            worker.resetSchema(resource.toString());\n        });\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                var model = monaco.editor.getModel(resource);\n                if (model.getModeId() === languageId) {\n                    monaco.editor.setModelMarkers(model, languageId, markers);\n                }\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        }));\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n//# sourceMappingURL=scanner.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n//# sourceMappingURL=main.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n    return {\n        getInitialState: function () { return new JSONState(null, null, false); },\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\n    };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\nvar JSONState = /** @class */ (function () {\n    function JSONState(state, scanError, lastWasColon) {\n        this._state = state;\n        this.scanError = scanError;\n        this.lastWasColon = lastWasColon;\n    }\n    JSONState.prototype.clone = function () {\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\n    };\n    JSONState.prototype.equals = function (other) {\n        if (other === this) {\n            return true;\n        }\n        if (!other || !(other instanceof JSONState)) {\n            return false;\n        }\n        return this.scanError === other.scanError &&\n            this.lastWasColon === other.lastWasColon;\n    };\n    JSONState.prototype.getStateData = function () {\n        return this._state;\n    };\n    JSONState.prototype.setStateData = function (state) {\n        this._state = state;\n    };\n    return JSONState;\n}());\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n    if (offsetDelta === void 0) { offsetDelta = 0; }\n    // handle multiline strings and block comments\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\n    switch (state.scanError) {\n        case 2 /* UnexpectedEndOfString */:\n            line = '\"' + line;\n            numberOfInsertedCharacters = 1;\n            break;\n        case 1 /* UnexpectedEndOfComment */:\n            line = '/*' + line;\n            numberOfInsertedCharacters = 2;\n            break;\n    }\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\n    ret = {\n        tokens: [],\n        endState: state.clone()\n    };\n    while (true) {\n        var offset = offsetDelta + scanner.getPosition(), type = '';\n        kind = scanner.scan();\n        if (kind === 17 /* EOF */) {\n            break;\n        }\n        // Check that the scanner has advanced\n        if (offset === offsetDelta + scanner.getPosition()) {\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n        }\n        // In case we inserted /* or \" character, we need to\n        // adjust the offset of all tokens (except the first)\n        if (adjustOffset) {\n            offset -= numberOfInsertedCharacters;\n        }\n        adjustOffset = numberOfInsertedCharacters > 0;\n        // brackets and type\n        switch (kind) {\n            case 1 /* OpenBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 2 /* CloseBraceToken */:\n                type = TOKEN_DELIM_OBJECT;\n                lastWasColon = false;\n                break;\n            case 3 /* OpenBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 4 /* CloseBracketToken */:\n                type = TOKEN_DELIM_ARRAY;\n                lastWasColon = false;\n                break;\n            case 6 /* ColonToken */:\n                type = TOKEN_DELIM_COLON;\n                lastWasColon = true;\n                break;\n            case 5 /* CommaToken */:\n                type = TOKEN_DELIM_COMMA;\n                lastWasColon = false;\n                break;\n            case 8 /* TrueKeyword */:\n            case 9 /* FalseKeyword */:\n                type = TOKEN_VALUE_BOOLEAN;\n                lastWasColon = false;\n                break;\n            case 7 /* NullKeyword */:\n                type = TOKEN_VALUE_NULL;\n                lastWasColon = false;\n                break;\n            case 10 /* StringLiteral */:\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n                lastWasColon = false;\n                break;\n            case 11 /* NumericLiteral */:\n                type = TOKEN_VALUE_NUMBER;\n                lastWasColon = false;\n                break;\n        }\n        // comments, iff enabled\n        if (comments) {\n            switch (kind) {\n                case 12 /* LineCommentTrivia */:\n                    type = TOKEN_COMMENT_LINE;\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    type = TOKEN_COMMENT_BLOCK;\n                    break;\n            }\n        }\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n        ret.tokens.push({\n            startIndex: offset,\n            scopes: type\n        });\n    }\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n    var disposables = [];\n    var client = new WorkerManager(defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n    disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n}\nvar richEditConfiguration = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] }\n    ]\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `HTMLWorker` instance\n                moduleId: 'vs/language/html/htmlWorker',\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.options,\n                    languageId: this._defaults.languageId\n                },\n                label: this._defaults.languageId\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Range = monaco.Range;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n            onModelRemoved(model);\n        }));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push(defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        }));\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n                monaco.editor.setModelMarkers(monaco.editor.getModel(resource), languageId, markers);\n            });\n        }).then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: fromPosition(range.getStartPosition()), end: fromPosition(range.getEndPosition()) };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction fromCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\n        case mItemKind.File: return ls.CompletionItemKind.File;\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\n    }\n    return ls.CompletionItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nfunction toCompletionItem(entry) {\n    return {\n        label: entry.label,\n        insertText: entry.insertText,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: entry.documentation,\n        detail: entry.detail,\n        kind: toCompletionItemKind(entry.kind),\n        textEdit: toTextEdit(entry.textEdit),\n        data: entry.data\n    };\n}\nfunction fromMarkdownString(entry) {\n    return {\n        kind: (typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown),\n        value: (typeof entry === 'string' ? entry : entry.value)\n    };\n}\nfunction fromCompletionItem(entry) {\n    var item = {\n        label: entry.label,\n        sortText: entry.sortText,\n        filterText: entry.filterText,\n        documentation: fromMarkdownString(entry.documentation),\n        detail: entry.detail,\n        kind: fromCompletionItemKind(entry.kind),\n        data: entry.data\n    };\n    if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n        item.insertText = entry.insertText.value;\n        item.insertTextFormat = ls.InsertTextFormat.Snippet;\n    }\n    else {\n        item.insertText = entry.insertText;\n    }\n    if (entry.range) {\n        item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n    }\n    return item;\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.', ':', '<', '\"', '=', '/'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toHighlighKind(kind) {\n    var mKind = monaco.languages.DocumentHighlightKind;\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return mKind.Read;\n        case ls.DocumentHighlightKind.Write: return mKind.Write;\n        case ls.DocumentHighlightKind.Text: return mKind.Text;\n    }\n    return mKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentHighlights(resource.toString(), fromPosition(position)); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                kind: toHighlighKind(item.kind)\n            }); });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\nvar DocumentLinkAdapter = /** @class */ (function () {\n    function DocumentLinkAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentLinkAdapter.prototype.provideLinks = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentLinks(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                range: toRange(item.range),\n                url: item.target\n            }); });\n        }));\n    };\n    return DocumentLinkAdapter;\n}());\nexport { DocumentLinkAdapter };\nfunction fromFormattingOptions(options) {\n    return {\n        tabSize: options.tabSize,\n        insertSpaces: options.insertSpaces\n    };\n}\nvar DocumentFormattingEditProvider = /** @class */ (function () {\n    function DocumentFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentFormattingEditProvider;\n}());\nexport { DocumentFormattingEditProvider };\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\n    function DocumentRangeFormattingEditProvider(_worker) {\n        this._worker = _worker;\n    }\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n                if (!edits || edits.length === 0) {\n                    return;\n                }\n                return edits.map(toTextEdit);\n            });\n        }));\n    };\n    return DocumentRangeFormattingEditProvider;\n}());\nexport { DocumentRangeFormattingEditProvider };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        }));\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    if (promise.cancel) {\n        token.onCancellationRequested(function () { return promise.cancel(); });\n    }\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    var languageId = defaults.languageId;\n    // all modes\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerLinkProvider(languageId, new languageFeatures.DocumentLinkAdapter(worker));\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n    // only html\n    if (languageId === 'html') {\n        monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker));\n        monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker));\n        new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `CSSWorker` instance\n                moduleId: 'vs/language/css/cssWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\nexport { DocumentSymbol };\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        defaults.onDidChange(function (_) {\n            monaco.editor.getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        });\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        monaco.editor.getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource).then(function (worker) {\n            return worker.doValidation(resource.toString());\n        }).then(function (diagnostics) {\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n            var model = monaco.editor.getModel(resource);\n            if (model.getModeId() === languageId) {\n                monaco.editor.setModelMarkers(model, languageId, markers);\n            }\n        }).done(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\nexport { DiagnosticsAdapter };\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\n        default:\n            return monaco.MarkerSeverity.Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new monaco.Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = monaco.languages.CompletionItemKind;\n    switch (kind) {\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\n        case ls.CompletionItemKind.File: return mItemKind.File;\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    kind: toCompletionItemKind(entry.kind),\n                };\n                if (entry.textEdit) {\n                    item.range = toRange(entry.textEdit.range);\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                    item.insertText = { value: item.insertText };\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                items: items\n            };\n        }));\n    };\n    return CompletionAdapter;\n}());\nexport { CompletionAdapter };\nfunction isMarkupContent(thing) {\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        }));\n    };\n    return HoverAdapter;\n}());\nexport { HoverAdapter };\n// --- document highlights ------\nfunction toDocumentHighlightKind(kind) {\n    switch (kind) {\n        case ls.DocumentHighlightKind.Read: return monaco.languages.DocumentHighlightKind.Read;\n        case ls.DocumentHighlightKind.Write: return monaco.languages.DocumentHighlightKind.Write;\n        case ls.DocumentHighlightKind.Text: return monaco.languages.DocumentHighlightKind.Text;\n    }\n    return monaco.languages.DocumentHighlightKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(function (entry) {\n                return {\n                    range: toRange(entry.range),\n                    kind: toDocumentHighlightKind(entry.kind)\n                };\n            });\n        }));\n    };\n    return DocumentHighlightAdapter;\n}());\nexport { DocumentHighlightAdapter };\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: Uri.parse(location.uri),\n        range: toRange(location.range)\n    };\n}\nvar DefinitionAdapter = /** @class */ (function () {\n    function DefinitionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.findDefinition(resource.toString(), fromPosition(position));\n        }).then(function (definition) {\n            if (!definition) {\n                return;\n            }\n            return [toLocation(definition)];\n        }));\n    };\n    return DefinitionAdapter;\n}());\nexport { DefinitionAdapter };\n// --- references ------\nvar ReferenceAdapter = /** @class */ (function () {\n    function ReferenceAdapter(_worker) {\n        this._worker = _worker;\n    }\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.findReferences(resource.toString(), fromPosition(position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(toLocation);\n        }));\n    };\n    return ReferenceAdapter;\n}());\nexport { ReferenceAdapter };\n// --- rename ------\nfunction toWorkspaceEdit(edit) {\n    if (!edit || !edit.changes) {\n        return void 0;\n    }\n    var resourceEdits = [];\n    for (var uri in edit.changes) {\n        var edits = [];\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\n            var e = _a[_i];\n            edits.push({\n                range: toRange(e.range),\n                text: e.newText\n            });\n        }\n        resourceEdits.push({ resource: Uri.parse(uri), edits: edits });\n    }\n    return {\n        edits: resourceEdits\n    };\n}\nvar RenameAdapter = /** @class */ (function () {\n    function RenameAdapter(_worker) {\n        this._worker = _worker;\n    }\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\n        }).then(function (edit) {\n            return toWorkspaceEdit(edit);\n        }));\n    };\n    return RenameAdapter;\n}());\nexport { RenameAdapter };\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = monaco.languages.SymbolKind;\n    switch (kind) {\n        case ls.SymbolKind.File: return mKind.Array;\n        case ls.SymbolKind.Module: return mKind.Module;\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\n        case ls.SymbolKind.Package: return mKind.Package;\n        case ls.SymbolKind.Class: return mKind.Class;\n        case ls.SymbolKind.Method: return mKind.Method;\n        case ls.SymbolKind.Property: return mKind.Property;\n        case ls.SymbolKind.Field: return mKind.Field;\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\n        case ls.SymbolKind.Enum: return mKind.Enum;\n        case ls.SymbolKind.Interface: return mKind.Interface;\n        case ls.SymbolKind.Function: return mKind.Function;\n        case ls.SymbolKind.Variable: return mKind.Variable;\n        case ls.SymbolKind.Constant: return mKind.Constant;\n        case ls.SymbolKind.String: return mKind.String;\n        case ls.SymbolKind.Number: return mKind.Number;\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\n        case ls.SymbolKind.Array: return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        }));\n    };\n    return DocumentSymbolAdapter;\n}());\nexport { DocumentSymbolAdapter };\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        }));\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label,\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        }));\n    };\n    return DocumentColorAdapter;\n}());\nexport { DocumentColorAdapter };\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        }));\n    };\n    return FoldingRangeAdapter;\n}());\nexport { FoldingRangeAdapter };\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\n    }\n    return void 0;\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    token.onCancellationRequested(function () { return promise.cancel(); });\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nexport function setupMode(defaults) {\n    var client = new WorkerManager(defaults);\n    var worker = function (first) {\n        var more = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            more[_i - 1] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n    };\n    var languageId = defaults.languageId;\n    monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker));\n    monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(languageId, new languageFeatures.DocumentHighlightAdapter(worker));\n    monaco.languages.registerDefinitionProvider(languageId, new languageFeatures.DefinitionAdapter(worker));\n    monaco.languages.registerReferenceProvider(languageId, new languageFeatures.ReferenceAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker));\n    monaco.languages.registerRenameProvider(languageId, new languageFeatures.RenameAdapter(worker));\n    monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker));\n    monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker));\n    new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Promise = monaco.Promise;\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(modeId, defaults) {\n        var _this = this;\n        this._modeId = modeId;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var maxIdleTime = this._defaults.getWorkerMaxIdleTime();\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (maxIdleTime > 0 && timePassedSinceLastUsed > maxIdleTime) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        var _this = this;\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = monaco.editor.createWebWorker({\n                // module that exports the create() method and returns a `TypeScriptWorker` instance\n                moduleId: 'vs/language/typescript/tsWorker',\n                label: this._modeId,\n                // passed in to the create() method\n                createData: {\n                    compilerOptions: this._defaults.getCompilerOptions(),\n                    extraLibs: this._defaults.getExtraLibs()\n                }\n            });\n            var p = this._worker.getProxy();\n            if (this._defaults.getEagerModelSync()) {\n                p = p.then(function (worker) {\n                    return _this._worker.withSyncedResources(monaco.editor.getModels()\n                        .filter(function (model) { return model.getModeId() === _this._modeId; })\n                        .map(function (model) { return model.uri; }));\n                });\n            }\n            this._client = p;\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return toShallowCancelPromise(this._getClient().then(function (client) {\n            _client = client;\n        }).then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        }).then(function (_) { return _client; }));\n    };\n    return WorkerManager;\n}());\nexport { WorkerManager };\nfunction toShallowCancelPromise(p) {\n    var completeCallback;\n    var errorCallback;\n    var r = new Promise(function (c, e) {\n        completeCallback = c;\n        errorCallback = e;\n    }, function () { });\n    p.then(completeCallback, errorCallback);\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar Uri = monaco.Uri;\nvar Promise = monaco.Promise;\n//#region utils copied from typescript to prevent loading the entire typescriptServices ---\nvar IndentStyle;\n(function (IndentStyle) {\n    IndentStyle[IndentStyle[\"None\"] = 0] = \"None\";\n    IndentStyle[IndentStyle[\"Block\"] = 1] = \"Block\";\n    IndentStyle[IndentStyle[\"Smart\"] = 2] = \"Smart\";\n})(IndentStyle || (IndentStyle = {}));\nfunction flattenDiagnosticMessageText(messageText, newLine) {\n    if (typeof messageText === \"string\") {\n        return messageText;\n    }\n    else {\n        var diagnosticChain = messageText;\n        var result = \"\";\n        var indent = 0;\n        while (diagnosticChain) {\n            if (indent) {\n                result += newLine;\n                for (var i = 0; i < indent; i++) {\n                    result += \"  \";\n                }\n            }\n            result += diagnosticChain.messageText;\n            indent++;\n            diagnosticChain = diagnosticChain.next;\n        }\n        return result;\n    }\n}\nfunction displayPartsToString(displayParts) {\n    if (displayParts) {\n        return displayParts.map(function (displayPart) { return displayPart.text; }).join(\"\");\n    }\n    return \"\";\n}\n//#endregion\nvar Adapter = /** @class */ (function () {\n    function Adapter(_worker) {\n        this._worker = _worker;\n    }\n    Adapter.prototype._positionToOffset = function (uri, position) {\n        var model = monaco.editor.getModel(uri);\n        return model.getOffsetAt(position);\n    };\n    Adapter.prototype._offsetToPosition = function (uri, offset) {\n        var model = monaco.editor.getModel(uri);\n        return model.getPositionAt(offset);\n    };\n    Adapter.prototype._textSpanToRange = function (uri, span) {\n        var p1 = this._offsetToPosition(uri, span.start);\n        var p2 = this._offsetToPosition(uri, span.start + span.length);\n        var startLineNumber = p1.lineNumber, startColumn = p1.column;\n        var endLineNumber = p2.lineNumber, endColumn = p2.column;\n        return { startLineNumber: startLineNumber, startColumn: startColumn, endLineNumber: endLineNumber, endColumn: endColumn };\n    };\n    return Adapter;\n}());\nexport { Adapter };\n// --- diagnostics --- ---\nvar DiagnostcsAdapter = /** @class */ (function (_super) {\n    __extends(DiagnostcsAdapter, _super);\n    function DiagnostcsAdapter(_defaults, _selector, worker) {\n        var _this = _super.call(this, worker) || this;\n        _this._defaults = _defaults;\n        _this._selector = _selector;\n        _this._disposables = [];\n        _this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            if (model.getModeId() !== _selector) {\n                return;\n            }\n            var handle;\n            var changeSubscription = model.onDidChangeContent(function () {\n                clearTimeout(handle);\n                handle = setTimeout(function () { return _this._doValidate(model.uri); }, 500);\n            });\n            _this._listener[model.uri.toString()] = {\n                dispose: function () {\n                    changeSubscription.dispose();\n                    clearTimeout(handle);\n                }\n            };\n            _this._doValidate(model.uri);\n        };\n        var onModelRemoved = function (model) {\n            monaco.editor.setModelMarkers(model, _this._selector, []);\n            var key = model.uri.toString();\n            if (_this._listener[key]) {\n                _this._listener[key].dispose();\n                delete _this._listener[key];\n            }\n        };\n        _this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n        _this._disposables.push(monaco.editor.onWillDisposeModel(onModelRemoved));\n        _this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        _this._disposables.push({\n            dispose: function () {\n                for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\n                    var model = _a[_i];\n                    onModelRemoved(model);\n                }\n            }\n        });\n        _this._disposables.push(_this._defaults.onDidChange(function () {\n            // redo diagnostics when options change\n            for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\n                var model = _a[_i];\n                onModelRemoved(model);\n                onModelAdd(model);\n            }\n        }));\n        monaco.editor.getModels().forEach(onModelAdd);\n        return _this;\n    }\n    DiagnostcsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnostcsAdapter.prototype._doValidate = function (resource) {\n        var _this = this;\n        this._worker(resource).then(function (worker) {\n            if (!monaco.editor.getModel(resource)) {\n                // model was disposed in the meantime\n                return null;\n            }\n            var promises = [];\n            var _a = _this._defaults.getDiagnosticsOptions(), noSyntaxValidation = _a.noSyntaxValidation, noSemanticValidation = _a.noSemanticValidation;\n            if (!noSyntaxValidation) {\n                promises.push(worker.getSyntacticDiagnostics(resource.toString()));\n            }\n            if (!noSemanticValidation) {\n                promises.push(worker.getSemanticDiagnostics(resource.toString()));\n            }\n            return Promise.join(promises);\n        }).then(function (diagnostics) {\n            if (!diagnostics || !monaco.editor.getModel(resource)) {\n                // model was disposed in the meantime\n                return null;\n            }\n            var markers = diagnostics\n                .reduce(function (p, c) { return c.concat(p); }, [])\n                .map(function (d) { return _this._convertDiagnostics(resource, d); });\n            monaco.editor.setModelMarkers(monaco.editor.getModel(resource), _this._selector, markers);\n        }).done(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    DiagnostcsAdapter.prototype._convertDiagnostics = function (resource, diag) {\n        var _a = this._offsetToPosition(resource, diag.start), startLineNumber = _a.lineNumber, startColumn = _a.column;\n        var _b = this._offsetToPosition(resource, diag.start + diag.length), endLineNumber = _b.lineNumber, endColumn = _b.column;\n        return {\n            severity: monaco.MarkerSeverity.Error,\n            startLineNumber: startLineNumber,\n            startColumn: startColumn,\n            endLineNumber: endLineNumber,\n            endColumn: endColumn,\n            message: flattenDiagnosticMessageText(diag.messageText, '\\n')\n        };\n    };\n    return DiagnostcsAdapter;\n}(Adapter));\nexport { DiagnostcsAdapter };\nvar SuggestAdapter = /** @class */ (function (_super) {\n    __extends(SuggestAdapter, _super);\n    function SuggestAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SuggestAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return ['.'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuggestAdapter.prototype.provideCompletionItems = function (model, position, token) {\n        var wordInfo = model.getWordUntilPosition(position);\n        var resource = model.uri;\n        var offset = this._positionToOffset(resource, position);\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getCompletionsAtPosition(resource.toString(), offset);\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var suggestions = info.entries.map(function (entry) {\n                return {\n                    uri: resource,\n                    position: position,\n                    label: entry.name,\n                    sortText: entry.sortText,\n                    kind: SuggestAdapter.convertKind(entry.kind)\n                };\n            });\n            return suggestions;\n        }));\n    };\n    SuggestAdapter.prototype.resolveCompletionItem = function (item, token) {\n        var _this = this;\n        var myItem = item;\n        var resource = myItem.uri;\n        var position = myItem.position;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getCompletionEntryDetails(resource.toString(), _this._positionToOffset(resource, position), myItem.label);\n        }).then(function (details) {\n            if (!details) {\n                return myItem;\n            }\n            return {\n                uri: resource,\n                position: position,\n                label: details.name,\n                kind: SuggestAdapter.convertKind(details.kind),\n                detail: displayPartsToString(details.displayParts),\n                documentation: displayPartsToString(details.documentation)\n            };\n        }));\n    };\n    SuggestAdapter.convertKind = function (kind) {\n        switch (kind) {\n            case Kind.primitiveType:\n            case Kind.keyword:\n                return monaco.languages.CompletionItemKind.Keyword;\n            case Kind.variable:\n            case Kind.localVariable:\n                return monaco.languages.CompletionItemKind.Variable;\n            case Kind.memberVariable:\n            case Kind.memberGetAccessor:\n            case Kind.memberSetAccessor:\n                return monaco.languages.CompletionItemKind.Field;\n            case Kind.function:\n            case Kind.memberFunction:\n            case Kind.constructSignature:\n            case Kind.callSignature:\n            case Kind.indexSignature:\n                return monaco.languages.CompletionItemKind.Function;\n            case Kind.enum:\n                return monaco.languages.CompletionItemKind.Enum;\n            case Kind.module:\n                return monaco.languages.CompletionItemKind.Module;\n            case Kind.class:\n                return monaco.languages.CompletionItemKind.Class;\n            case Kind.interface:\n                return monaco.languages.CompletionItemKind.Interface;\n            case Kind.warning:\n                return monaco.languages.CompletionItemKind.File;\n        }\n        return monaco.languages.CompletionItemKind.Property;\n    };\n    return SuggestAdapter;\n}(Adapter));\nexport { SuggestAdapter };\nvar SignatureHelpAdapter = /** @class */ (function (_super) {\n    __extends(SignatureHelpAdapter, _super);\n    function SignatureHelpAdapter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.signatureHelpTriggerCharacters = ['(', ','];\n        return _this;\n    }\n    SignatureHelpAdapter.prototype.provideSignatureHelp = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getSignatureHelpItems(resource.toString(), _this._positionToOffset(resource, position)); }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var ret = {\n                activeSignature: info.selectedItemIndex,\n                activeParameter: info.argumentIndex,\n                signatures: []\n            };\n            info.items.forEach(function (item) {\n                var signature = {\n                    label: '',\n                    documentation: null,\n                    parameters: []\n                };\n                signature.label += displayPartsToString(item.prefixDisplayParts);\n                item.parameters.forEach(function (p, i, a) {\n                    var label = displayPartsToString(p.displayParts);\n                    var parameter = {\n                        label: label,\n                        documentation: displayPartsToString(p.documentation)\n                    };\n                    signature.label += label;\n                    signature.parameters.push(parameter);\n                    if (i < a.length - 1) {\n                        signature.label += displayPartsToString(item.separatorDisplayParts);\n                    }\n                });\n                signature.label += displayPartsToString(item.suffixDisplayParts);\n                ret.signatures.push(signature);\n            });\n            return ret;\n        }));\n    };\n    return SignatureHelpAdapter;\n}(Adapter));\nexport { SignatureHelpAdapter };\n// --- hover ------\nvar QuickInfoAdapter = /** @class */ (function (_super) {\n    __extends(QuickInfoAdapter, _super);\n    function QuickInfoAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    QuickInfoAdapter.prototype.provideHover = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getQuickInfoAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (info) {\n            if (!info) {\n                return;\n            }\n            var documentation = displayPartsToString(info.documentation);\n            var tags = info.tags ? info.tags.map(function (tag) {\n                var label = \"*@\" + tag.name + \"*\";\n                if (!tag.text) {\n                    return label;\n                }\n                return label + (tag.text.match(/\\r\\n|\\n/g) ? ' \\n' + tag.text : \" - \" + tag.text);\n            })\n                .join('  \\n\\n') : '';\n            var contents = displayPartsToString(info.displayParts);\n            return {\n                range: _this._textSpanToRange(resource, info.textSpan),\n                contents: [{\n                        value: '```js\\n' + contents + '\\n```\\n'\n                    }, {\n                        value: documentation + (tags ? '\\n\\n' + tags : '')\n                    }]\n            };\n        }));\n    };\n    return QuickInfoAdapter;\n}(Adapter));\nexport { QuickInfoAdapter };\n// --- occurrences ------\nvar OccurrencesAdapter = /** @class */ (function (_super) {\n    __extends(OccurrencesAdapter, _super);\n    function OccurrencesAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OccurrencesAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getOccurrencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(function (entry) {\n                return {\n                    range: _this._textSpanToRange(resource, entry.textSpan),\n                    kind: entry.isWriteAccess ? monaco.languages.DocumentHighlightKind.Write : monaco.languages.DocumentHighlightKind.Text\n                };\n            });\n        }));\n    };\n    return OccurrencesAdapter;\n}(Adapter));\nexport { OccurrencesAdapter };\n// --- definition ------\nvar DefinitionAdapter = /** @class */ (function (_super) {\n    __extends(DefinitionAdapter, _super);\n    function DefinitionAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getDefinitionAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            var result = [];\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var entry = entries_1[_i];\n                var uri = Uri.parse(entry.fileName);\n                if (monaco.editor.getModel(uri)) {\n                    result.push({\n                        uri: uri,\n                        range: _this._textSpanToRange(uri, entry.textSpan)\n                    });\n                }\n            }\n            return result;\n        }));\n    };\n    return DefinitionAdapter;\n}(Adapter));\nexport { DefinitionAdapter };\n// --- references ------\nvar ReferenceAdapter = /** @class */ (function (_super) {\n    __extends(ReferenceAdapter, _super);\n    function ReferenceAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getReferencesAtPosition(resource.toString(), _this._positionToOffset(resource, position));\n        }).then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            var result = [];\n            for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {\n                var entry = entries_2[_i];\n                var uri = Uri.parse(entry.fileName);\n                if (monaco.editor.getModel(uri)) {\n                    result.push({\n                        uri: uri,\n                        range: _this._textSpanToRange(uri, entry.textSpan)\n                    });\n                }\n            }\n            return result;\n        }));\n    };\n    return ReferenceAdapter;\n}(Adapter));\nexport { ReferenceAdapter };\n// --- outline ------\nvar OutlineAdapter = /** @class */ (function (_super) {\n    __extends(OutlineAdapter, _super);\n    function OutlineAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OutlineAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) { return worker.getNavigationBarItems(resource.toString()); }).then(function (items) {\n            if (!items) {\n                return;\n            }\n            var convert = function (bucket, item, containerLabel) {\n                var result = {\n                    name: item.text,\n                    detail: '',\n                    kind: (outlineTypeTable[item.kind] || monaco.languages.SymbolKind.Variable),\n                    range: _this._textSpanToRange(resource, item.spans[0]),\n                    selectionRange: _this._textSpanToRange(resource, item.spans[0]),\n                    containerName: containerLabel\n                };\n                if (item.childItems && item.childItems.length > 0) {\n                    for (var _i = 0, _a = item.childItems; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        convert(bucket, child, result.name);\n                    }\n                }\n                bucket.push(result);\n            };\n            var result = [];\n            items.forEach(function (item) { return convert(result, item); });\n            return result;\n        }));\n    };\n    return OutlineAdapter;\n}(Adapter));\nexport { OutlineAdapter };\nvar Kind = /** @class */ (function () {\n    function Kind() {\n    }\n    Kind.unknown = '';\n    Kind.keyword = 'keyword';\n    Kind.script = 'script';\n    Kind.module = 'module';\n    Kind.class = 'class';\n    Kind.interface = 'interface';\n    Kind.type = 'type';\n    Kind.enum = 'enum';\n    Kind.variable = 'var';\n    Kind.localVariable = 'local var';\n    Kind.function = 'function';\n    Kind.localFunction = 'local function';\n    Kind.memberFunction = 'method';\n    Kind.memberGetAccessor = 'getter';\n    Kind.memberSetAccessor = 'setter';\n    Kind.memberVariable = 'property';\n    Kind.constructorImplementation = 'constructor';\n    Kind.callSignature = 'call';\n    Kind.indexSignature = 'index';\n    Kind.constructSignature = 'construct';\n    Kind.parameter = 'parameter';\n    Kind.typeParameter = 'type parameter';\n    Kind.primitiveType = 'primitive type';\n    Kind.label = 'label';\n    Kind.alias = 'alias';\n    Kind.const = 'const';\n    Kind.let = 'let';\n    Kind.warning = 'warning';\n    return Kind;\n}());\nexport { Kind };\nvar outlineTypeTable = Object.create(null);\noutlineTypeTable[Kind.module] = monaco.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco.languages.SymbolKind.Function;\n// --- formatting ----\nvar FormatHelper = /** @class */ (function (_super) {\n    __extends(FormatHelper, _super);\n    function FormatHelper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormatHelper._convertOptions = function (options) {\n        return {\n            ConvertTabsToSpaces: options.insertSpaces,\n            TabSize: options.tabSize,\n            IndentSize: options.tabSize,\n            IndentStyle: IndentStyle.Smart,\n            NewLineCharacter: '\\n',\n            InsertSpaceAfterCommaDelimiter: true,\n            InsertSpaceAfterSemicolonInForStatements: true,\n            InsertSpaceBeforeAndAfterBinaryOperators: true,\n            InsertSpaceAfterKeywordsInControlFlowStatements: true,\n            InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n            InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n            PlaceOpenBraceOnNewLineForControlBlocks: false,\n            PlaceOpenBraceOnNewLineForFunctions: false\n        };\n    };\n    FormatHelper.prototype._convertTextChanges = function (uri, change) {\n        return {\n            text: change.newText,\n            range: this._textSpanToRange(uri, change.span)\n        };\n    };\n    return FormatHelper;\n}(Adapter));\nexport { FormatHelper };\nvar FormatAdapter = /** @class */ (function (_super) {\n    __extends(FormatAdapter, _super);\n    function FormatAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormatAdapter.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getFormattingEditsForRange(resource.toString(), _this._positionToOffset(resource, { lineNumber: range.startLineNumber, column: range.startColumn }), _this._positionToOffset(resource, { lineNumber: range.endLineNumber, column: range.endColumn }), FormatHelper._convertOptions(options));\n        }).then(function (edits) {\n            if (edits) {\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\n            }\n        }));\n    };\n    return FormatAdapter;\n}(FormatHelper));\nexport { FormatAdapter };\nvar FormatOnTypeAdapter = /** @class */ (function (_super) {\n    __extends(FormatOnTypeAdapter, _super);\n    function FormatOnTypeAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(FormatOnTypeAdapter.prototype, \"autoFormatTriggerCharacters\", {\n        get: function () {\n            return [';', '}', '\\n'];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FormatOnTypeAdapter.prototype.provideOnTypeFormattingEdits = function (model, position, ch, options, token) {\n        var _this = this;\n        var resource = model.uri;\n        return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n            return worker.getFormattingEditsAfterKeystroke(resource.toString(), _this._positionToOffset(resource, position), ch, FormatHelper._convertOptions(options));\n        }).then(function (edits) {\n            if (edits) {\n                return edits.map(function (edit) { return _this._convertTextChanges(resource, edit); });\n            }\n        }));\n    };\n    return FormatOnTypeAdapter;\n}(FormatHelper));\nexport { FormatOnTypeAdapter };\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nfunction wireCancellationToken(token, promise) {\n    token.onCancellationRequested(function () { return promise.cancel(); });\n    return promise;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nvar javaScriptWorker;\nvar typeScriptWorker;\nexport function setupTypeScript(defaults) {\n    typeScriptWorker = setupMode(defaults, 'typescript');\n}\nexport function setupJavaScript(defaults) {\n    javaScriptWorker = setupMode(defaults, 'javascript');\n}\nexport function getJavaScriptWorker() {\n    return new monaco.Promise(function (resolve, reject) {\n        if (!javaScriptWorker) {\n            return reject(\"JavaScript not registered!\");\n        }\n        resolve(javaScriptWorker);\n    });\n}\nexport function getTypeScriptWorker() {\n    return new monaco.Promise(function (resolve, reject) {\n        if (!typeScriptWorker) {\n            return reject(\"TypeScript not registered!\");\n        }\n        resolve(typeScriptWorker);\n    });\n}\nfunction setupMode(defaults, modeId) {\n    var client = new WorkerManager(modeId, defaults);\n    var worker = function (first) {\n        var more = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            more[_i - 1] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, [first].concat(more));\n    };\n    monaco.languages.registerCompletionItemProvider(modeId, new languageFeatures.SuggestAdapter(worker));\n    monaco.languages.registerSignatureHelpProvider(modeId, new languageFeatures.SignatureHelpAdapter(worker));\n    monaco.languages.registerHoverProvider(modeId, new languageFeatures.QuickInfoAdapter(worker));\n    monaco.languages.registerDocumentHighlightProvider(modeId, new languageFeatures.OccurrencesAdapter(worker));\n    monaco.languages.registerDefinitionProvider(modeId, new languageFeatures.DefinitionAdapter(worker));\n    monaco.languages.registerReferenceProvider(modeId, new languageFeatures.ReferenceAdapter(worker));\n    monaco.languages.registerDocumentSymbolProvider(modeId, new languageFeatures.OutlineAdapter(worker));\n    monaco.languages.registerDocumentRangeFormattingEditProvider(modeId, new languageFeatures.FormatAdapter(worker));\n    monaco.languages.registerOnTypeFormattingEditProvider(modeId, new languageFeatures.FormatOnTypeAdapter(worker));\n    new languageFeatures.DiagnostcsAdapter(defaults, modeId, worker);\n    return worker;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.cpp',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.angle', open: '<', close: '>' }\n    ],\n    keywords: [\n        'abstract',\n        'amp',\n        'array',\n        'auto',\n        'bool',\n        'break',\n        'case',\n        'catch',\n        'char',\n        'class',\n        'const',\n        'constexpr',\n        'const_cast',\n        'continue',\n        'cpu',\n        'decltype',\n        'default',\n        'delegate',\n        'delete',\n        'do',\n        'double',\n        'dynamic_cast',\n        'each',\n        'else',\n        'enum',\n        'event',\n        'explicit',\n        'export',\n        'extern',\n        'false',\n        'final',\n        'finally',\n        'float',\n        'for',\n        'friend',\n        'gcnew',\n        'generic',\n        'goto',\n        'if',\n        'in',\n        'initonly',\n        'inline',\n        'int',\n        'interface',\n        'interior_ptr',\n        'internal',\n        'literal',\n        'long',\n        'mutable',\n        'namespace',\n        'new',\n        'noexcept',\n        'nullptr',\n        '__nullptr',\n        'operator',\n        'override',\n        'partial',\n        'pascal',\n        'pin_ptr',\n        'private',\n        'property',\n        'protected',\n        'public',\n        'ref',\n        'register',\n        'reinterpret_cast',\n        'restrict',\n        'return',\n        'safe_cast',\n        'sealed',\n        'short',\n        'signed',\n        'sizeof',\n        'static',\n        'static_assert',\n        'static_cast',\n        'struct',\n        'switch',\n        'template',\n        'this',\n        'thread_local',\n        'throw',\n        'tile_static',\n        'true',\n        'try',\n        'typedef',\n        'typeid',\n        'typename',\n        'union',\n        'unsigned',\n        'using',\n        'virtual',\n        'void',\n        'volatile',\n        'wchar_t',\n        'where',\n        'while',\n        '_asm',\n        '_based',\n        '_cdecl',\n        '_declspec',\n        '_fastcall',\n        '_if_exists',\n        '_if_not_exists',\n        '_inline',\n        '_multiple_inheritance',\n        '_pascal',\n        '_single_inheritance',\n        '_stdcall',\n        '_virtual_inheritance',\n        '_w64',\n        '__abstract',\n        '__alignof',\n        '__asm',\n        '__assume',\n        '__based',\n        '__box',\n        '__builtin_alignof',\n        '__cdecl',\n        '__clrcall',\n        '__declspec',\n        '__delegate',\n        '__event',\n        '__except',\n        '__fastcall',\n        '__finally',\n        '__forceinline',\n        '__gc',\n        '__hook',\n        '__identifier',\n        '__if_exists',\n        '__if_not_exists',\n        '__inline',\n        '__int128',\n        '__int16',\n        '__int32',\n        '__int64',\n        '__int8',\n        '__interface',\n        '__leave',\n        '__m128',\n        '__m128d',\n        '__m128i',\n        '__m256',\n        '__m256d',\n        '__m256i',\n        '__m64',\n        '__multiple_inheritance',\n        '__newslot',\n        '__nogc',\n        '__noop',\n        '__nounwind',\n        '__novtordisp',\n        '__pascal',\n        '__pin',\n        '__pragma',\n        '__property',\n        '__ptr32',\n        '__ptr64',\n        '__raise',\n        '__restrict',\n        '__resume',\n        '__sealed',\n        '__single_inheritance',\n        '__stdcall',\n        '__super',\n        '__thiscall',\n        '__try',\n        '__try_cast',\n        '__typeof',\n        '__unaligned',\n        '__unhook',\n        '__uuidof',\n        '__value',\n        '__virtual_inheritance',\n        '__w64',\n        '__wchar_t'\n    ],\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\n    floatsuffix: /[fFlL]?/,\n    encoding: /u|u8|U|L/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // C++ 11 Raw String\n            [/@encoding?R\\\"(?:([^ ()\\\\\\t]*))\\(/, { token: 'string.raw.begin', next: '@raw.$1' }],\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [[ attributes ]].\n            [/\\[\\[.*\\]\\]/, 'annotation'],\n            [/^\\s*#include/, { token: 'keyword.directive.include', next: '@include' }],\n            // Preprocessor directive\n            [/^\\s*#\\s*\\w+/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\n            [/\\d(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        doccomment: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n        raw: [\n            [/(.*)(\\))(?:([^ ()\\\\\\t]*))(\\\")/, {\n                    cases: {\n                        '$3==$S2': ['string.raw', 'string.raw.end', 'string.raw.end', { token: 'string.raw.end', next: '@pop' }],\n                        '@default': ['string.raw', 'string.raw', 'string.raw', 'string.raw']\n                    }\n                }\n            ],\n            [/.*/, 'string.raw']\n        ],\n        include: [\n            [/(\\s*)(<)([^<>]*)(>)/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]],\n            [/(\\s*)(\")([^\"]*)(\")/, ['', 'keyword.directive.include.begin', 'string.include.identifier', { token: 'keyword.directive.include.end', next: '@pop' }]]\n        ]\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    onEnterRules: [\n        {\n            // e.g. /** | */\n            beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n            afterText: /^\\s*\\*\\/$/,\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\n        },\n        {\n            // e.g. /** ...|\n            beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n            action: { indentAction: _monaco.languages.IndentAction.None, appendText: ' * ' }\n        },\n        {\n            // e.g.  * ...|\n            beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n            action: { indentAction: _monaco.languages.IndentAction.None, appendText: '* ' }\n        },\n        {\n            // e.g.  */|\n            beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\n            action: { indentAction: _monaco.languages.IndentAction.None, removeText: 1 }\n        }\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '`', close: '`', notIn: ['string', 'comment'] },\n        { open: \"/**\", close: \" */\", notIn: [\"string\"] }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*#?region\\\\b\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*#?endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    defaultToken: 'invalid',\n    tokenPostfix: '.ts',\n    keywords: [\n        'abstract', 'as', 'break', 'case', 'catch', 'class', 'continue', 'const',\n        'constructor', 'debugger', 'declare', 'default', 'delete', 'do', 'else',\n        'enum', 'export', 'extends', 'false', 'finally', 'for', 'from', 'function',\n        'get', 'if', 'implements', 'import', 'in', 'infer', 'instanceof', 'interface',\n        'is', 'keyof', 'let', 'module', 'namespace', 'never', 'new', 'null', 'package',\n        'private', 'protected', 'public', 'readonly', 'require', 'global', 'return',\n        'set', 'static', 'super', 'switch', 'symbol', 'this', 'throw', 'true', 'try',\n        'type', 'typeof', 'unique', 'var', 'void', 'while', 'with', 'yield', 'async',\n        'await', 'of'\n    ],\n    typeKeywords: [\n        'any', 'boolean', 'number', 'object', 'string', 'undefined'\n    ],\n    operators: [\n        '<=', '>=', '==', '!=', '===', '!==', '=>', '+', '-', '**',\n        '*', '/', '%', '++', '--', '<<', '</', '>>', '>>>', '&',\n        '|', '^', '!', '~', '&&', '||', '?', ':', '=', '+=', '-=',\n        '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=', '&=', '|=',\n        '^=', '@',\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+(_+\\d+)*/,\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n    regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n    regexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/[{}]/, 'delimiter.bracket'],\n            { include: 'common' }\n        ],\n        common: [\n            // identifiers and keywords\n            [/[a-z_$][\\w$]*/, {\n                    cases: {\n                        '@typeKeywords': 'keyword',\n                        '@keywords': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[A-Z][\\w\\$]*/, 'type.identifier'],\n            // [/[A-Z][\\w\\$]*/, 'identifier'],\n            // whitespace\n            { include: '@whitespace' },\n            // regular expression: ensure it is terminated before beginning (otherwise it is an opeator)\n            [/\\/(?=([^\\\\\\/]|\\\\.)+\\/([gimuy]*)(\\s*)(\\.|;|\\/|,|\\)|\\]|\\}|$))/, { token: 'regexp', bracket: '@open', next: '@regexp' }],\n            // delimiters and operators\n            [/[()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/(@digits)[eE]([\\-+]?(@digits))?/, 'number.float'],\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, 'number.float'],\n            [/0[xX](@hexdigits)/, 'number.hex'],\n            [/0(@octaldigits)/, 'number.octal'],\n            [/0[bB](@binarydigits)/, 'number.binary'],\n            [/(@digits)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string_double'],\n            [/'/, 'string', '@string_single'],\n            [/`/, 'string', '@string_backtick'],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@jsdoc'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        jsdoc: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        // We match regular expression quite precisely\n        regexp: [\n            [/(\\{)(\\d+(?:,\\d*)?)(\\})/, ['regexp.escape.control', 'regexp.escape.control', 'regexp.escape.control']],\n            [/(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/, ['regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]],\n            [/(\\()(\\?:|\\?=|\\?!)/, ['regexp.escape.control', 'regexp.escape.control']],\n            [/[()]/, 'regexp.escape.control'],\n            [/@regexpctl/, 'regexp.escape.control'],\n            [/[^\\\\\\/]/, 'regexp'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/\\\\\\./, 'regexp.invalid'],\n            ['/', { token: 'regexp', bracket: '@close' }, '@pop'],\n        ],\n        regexrange: [\n            [/-/, 'regexp.escape.control'],\n            [/\\^/, 'regexp.invalid'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/[^\\]]/, 'regexp'],\n            [/\\]/, '@brackets.regexp.escape.control', '@pop'],\n        ],\n        string_double: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n        string_single: [\n            [/[^\\\\']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, 'string', '@pop']\n        ],\n        string_backtick: [\n            [/\\$\\{/, { token: 'delimiter.bracket', next: '@bracketCounting' }],\n            [/[^\\\\`$]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/`/, 'string', '@pop']\n        ],\n        bracketCounting: [\n            [/\\{/, 'delimiter.bracket', '@bracketCounting'],\n            [/\\}/, 'delimiter.bracket', '@pop'],\n            { include: 'common' }\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `@$`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '<', close: '>' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n        }\n    }\n};\nvar keywords = [\n    'abstract',\n    'activate',\n    'and',\n    'any',\n    'array',\n    'as',\n    'asc',\n    'assert',\n    'autonomous',\n    'begin',\n    'bigdecimal',\n    'blob',\n    'boolean',\n    'break',\n    'bulk',\n    'by',\n    'case',\n    'cast',\n    'catch',\n    'char',\n    'class',\n    'collect',\n    'commit',\n    'const',\n    'continue',\n    'convertcurrency',\n    'decimal',\n    'default',\n    'delete',\n    'desc',\n    'do',\n    'double',\n    'else',\n    'end',\n    'enum',\n    'exception',\n    'exit',\n    'export',\n    'extends',\n    'false',\n    'final',\n    'finally',\n    'float',\n    'for',\n    'from',\n    'future',\n    'get',\n    'global',\n    'goto',\n    'group',\n    'having',\n    'hint',\n    'if',\n    'implements',\n    'import',\n    'in',\n    'inner',\n    'insert',\n    'instanceof',\n    'int',\n    'interface',\n    'into',\n    'join',\n    'last_90_days',\n    'last_month',\n    'last_n_days',\n    'last_week',\n    'like',\n    'limit',\n    'list',\n    'long',\n    'loop',\n    'map',\n    'merge',\n    'native',\n    'new',\n    'next_90_days',\n    'next_month',\n    'next_n_days',\n    'next_week',\n    'not',\n    'null',\n    'nulls',\n    'number',\n    'object',\n    'of',\n    'on',\n    'or',\n    'outer',\n    'override',\n    'package',\n    'parallel',\n    'pragma',\n    'private',\n    'protected',\n    'public',\n    'retrieve',\n    'return',\n    'returning',\n    'rollback',\n    'savepoint',\n    'search',\n    'select',\n    'set',\n    'short',\n    'sort',\n    'stat',\n    'static',\n    'strictfp',\n    'super',\n    'switch',\n    'synchronized',\n    'system',\n    'testmethod',\n    'then',\n    'this',\n    'this_month',\n    'this_week',\n    'throw',\n    'throws',\n    'today',\n    'tolabel',\n    'tomorrow',\n    'transaction',\n    'transient',\n    'trigger',\n    'true',\n    'try',\n    'type',\n    'undelete',\n    'update',\n    'upsert',\n    'using',\n    'virtual',\n    'void',\n    'volatile',\n    'webservice',\n    'when',\n    'where',\n    'while',\n    'yesterday'\n];\n// create case variations of the keywords - apex is case insensitive, but we can't make the highlighter case insensitive\n// because we use a heuristic to assume that identifiers starting with an upper case letter are types.\nvar uppercaseFirstLetter = function (lowercase) { return lowercase.charAt(0).toUpperCase() + lowercase.substr(1); };\nvar keywordsWithCaseVariations = [];\nkeywords.forEach(function (lowercase) {\n    keywordsWithCaseVariations.push(lowercase);\n    keywordsWithCaseVariations.push(lowercase.toUpperCase());\n    keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\n});\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.apex',\n    keywords: keywordsWithCaseVariations,\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+(_+\\d+)*/,\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-z_$][\\w$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // assume that identifiers starting with an uppercase letter are types\n            [/[A-Z][\\w\\$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'type.identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // @ annotations.\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\n            // numbers\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/(@digits)[fFdD]/, 'number.float'],\n            [/(@digits)[lL]?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@apexdoc'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        apexdoc: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, { cases: { '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string' } }]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n    }\n};\nexport var language = {\n    defaultToken: 'keyword',\n    ignoreCase: true,\n    tokenPostfix: '.azcli',\n    str: /[^#\\s]/,\n    tokenizer: {\n        root: [\n            { include: '@comment' },\n            [/\\s-+@str*\\s*/, {\n                    cases: {\n                        '@eos': { token: 'key.identifier', next: '@popall' },\n                        '@default': { token: 'key.identifier', next: '@type' }\n                    }\n                }],\n            [/^-+@str*\\s*/, {\n                    cases: {\n                        '@eos': { token: 'key.identifier', next: '@popall' },\n                        '@default': { token: 'key.identifier', next: '@type' }\n                    }\n                }]\n        ],\n        type: [\n            { include: '@comment' },\n            [/-+@str*\\s*/, {\n                    cases: {\n                        '@eos': { token: 'key.identifier', next: '@popall' },\n                        '@default': 'key.identifier'\n                    }\n                }],\n            [/@str+\\s*/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        comment: [\n            [/#.*$/, {\n                    cases: {\n                        '@eos': { token: 'comment', next: '@popall' }\n                    }\n                }]\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: 'REM'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\n            end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.bat',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/^(\\s*)(rem(?:\\s.*|))$/, ['', 'comment']],\n            [/(\\@?)(@keywords)(?!\\w)/, [{ token: 'keyword' }, { token: 'keyword.$2' }]],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // blocks\n            [/setlocal(?!\\w)/, 'keyword.tag-setlocal'],\n            [/endlocal(?!\\w)/, 'keyword.tag-setlocal'],\n            // words\n            [/[a-zA-Z_]\\w*/, ''],\n            // labels\n            [/:\\w*/, 'metatag'],\n            // variables\n            [/%[^%]+%/, 'variable'],\n            [/%%[\\w]+(?!\\w)/, 'variable'],\n            // punctuations\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n            // punctuation: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        string: [\n            [/[^\\\\\"'%]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/%[\\w ]+%/, 'variable'],\n            [/%%[\\w]+(?!\\w)/, 'variable'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/$/, 'string', '@popall']\n        ],\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: ';;',\n    },\n    brackets: [['(', ')'], ['{', '}'], ['[', ']']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.clj',\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n    ],\n    keywords: [\n        'ns',\n        'ns-unmap',\n        'create-ns',\n        'in-ns',\n        'fn',\n        'def',\n        'defn',\n        'defmacro',\n        'defmulti',\n        'defonce',\n        'require',\n        'import',\n        'new',\n        'refer',\n        'pos',\n        'pos?',\n        'filter',\n        'map',\n        'reduce',\n        'repeat',\n        'key',\n        'rest',\n        'concat',\n        'into',\n        'reverse',\n        'iterate',\n        'range',\n        'drop',\n        'drop-while',\n        'take',\n        'take-while',\n        'neg',\n        'neg?',\n        'bound-fn',\n        'if',\n        'if-not',\n        'if-let',\n        'case,',\n        'contains',\n        'conj',\n        'disj',\n        'sort',\n        'get',\n        'assoc',\n        'merge',\n        'keys',\n        'vals',\n        'nth',\n        'first',\n        'last',\n        'count',\n        'contains?',\n        'cond',\n        'condp',\n        'cond->',\n        'cond->>',\n        'when',\n        'while',\n        'when-not',\n        'when-let',\n        'when-first',\n        'do',\n        'future',\n        'comment',\n        'doto',\n        'locking',\n        'proxy',\n        'println',\n        'type',\n        'meta',\n        'var',\n        'as->',\n        'reify',\n        'deftype',\n        'defrecord',\n        'defprotocol',\n        'extend',\n        'extend-protocol',\n        'extend-type',\n        'specify',\n        'specify!',\n        'try',\n        'catch',\n        'finally',\n        'let',\n        'letfn',\n        'binding',\n        'loop',\n        'for',\n        'seq',\n        'doseq',\n        'dotimes',\n        'when-let',\n        'if-let',\n        'when-some',\n        'if-some',\n        'this-as',\n        'defmethod',\n        'testing',\n        'deftest',\n        'are',\n        'use-fixtures',\n        'use',\n        'remove',\n        'run',\n        'run*',\n        'fresh',\n        'alt!',\n        'alt!!',\n        'go',\n        'go-loop',\n        'thread',\n        'boolean',\n        'str',\n    ],\n    constants: ['true', 'false', 'nil'],\n    operators: [\n        '=',\n        'not=',\n        '<',\n        '<=',\n        '>',\n        '>=',\n        'and',\n        'or',\n        'not',\n        'inc',\n        'dec',\n        'max',\n        'min',\n        'rem',\n        'bit-and',\n        'bit-or',\n        'bit-xor',\n        'bit-not',\n    ],\n    tokenizer: {\n        root: [\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\n            [\n                /(?:\\b(?:(ns|def|defn|defn-|defmacro|defmulti|defonce|ns|ns-unmap|fn))(?![\\w-]))(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\n                ['keyword', 'white', 'variable'],\n            ],\n            [\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@constants': 'constant',\n                        '@operators': 'operators',\n                        '@default': 'identifier',\n                    },\n                },\n            ],\n            [/\\/#\"(?:\\.|(?:\\\")|[^\"\"\\n])*\"\\/g/, 'regexp'],\n            { include: '@whitespace' },\n            { include: '@strings' },\n        ],\n        whitespace: [[/[ \\t\\r\\n]+/, 'white'], [/;;.*$/, 'comment']],\n        strings: [\n            [/\"$/, 'string', '@popall'],\n            [/\"(?=.)/, 'string', '@multiLineString'],\n        ],\n        multiLineString: [\n            [/\\\\./, 'string.escape'],\n            [/\"/, 'string', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall'],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        blockComment: ['###', '###'],\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.coffee',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n    keywords: [\n        'and', 'or', 'is', 'isnt', 'not', 'on', 'yes', '@', 'no', 'off',\n        'true', 'false', 'null', 'this',\n        'new', 'delete', 'typeof', 'in', 'instanceof',\n        'return', 'throw', 'break', 'continue', 'debugger',\n        'if', 'else', 'switch', 'for', 'while', 'do', 'try', 'catch', 'finally',\n        'class', 'extends', 'super',\n        'undefined', 'then', 'unless', 'until', 'loop', 'of', 'by', 'when'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@[a-zA-Z_]\\w*/, 'variable.predefined'],\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        'this': 'variable.predefined',\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // Comments\n            [/###/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // regular expressions\n            ['///', { token: 'regexp', next: '@hereregexp' }],\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\n            [/(\\()(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\=)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\[)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\!)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\&)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\|)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\?)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\{)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\;)(\\s*)(@regEx)/, ['', '', 'regexp']],\n            // delimiters\n            [/}/, {\n                    cases: {\n                        '$S2==interpolatedstring': { token: 'string', next: '@pop' },\n                        '@default': '@brackets'\n                    }\n                }],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[,.]/, 'delimiter'],\n            // strings:\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\n            [/'''/, 'string', '@herestring.\\'\\'\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\#\\\\]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, {\n                    cases: {\n                        '$S2==\"': { token: 'string', next: 'root.interpolatedstring' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/#/, 'string']\n        ],\n        herestring: [\n            [/(\"\"\"|''')/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^#\\\\'\"]+/, 'string'],\n            [/['\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/#/, 'string']\n        ],\n        comment: [\n            [/[^#]+/, 'comment',],\n            [/###/, 'comment', '@pop'],\n            [/#/, 'comment'],\n        ],\n        hereregexp: [\n            [/[^\\\\\\/#]+/, 'regexp'],\n            [/\\\\./, 'regexp'],\n            [/#.*$/, 'comment'],\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\n            [/\\//, 'regexp'],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.cs',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    keywords: [\n        'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\n        'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\n        'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\n        'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\n        'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\n        'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\n        'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\n        'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\n        'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\n        'field', 'event', 'method', 'param', 'property', 'public', 'protected',\n        'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\n        'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\n        'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\n        'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof',\n        'when'\n    ],\n    namespaceFollows: [\n        'namespace', 'using',\n    ],\n    parenFollows: [\n        'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\n    ],\n    operators: [\n        '=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\n        '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=',\n        '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\n    ],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // escape sequences\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@?[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\n                        '@keywords': { token: 'keyword.$0', next: '@qualified' },\n                        '@default': { token: 'identifier', next: '@qualified' }\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/}/, {\n                    cases: {\n                        '$S2==interpolatedstring': { token: 'string.quote', next: '@pop' },\n                        '$S2==litinterpstring': { token: 'string.quote', next: '@pop' },\n                        '@default': '@brackets'\n                    }\n                }],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\n            [/0[bB][01_]+/, 'number.hex'],\n            [/[0-9_]+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', next: '@string' }],\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        qualified: [\n            [/[a-zA-Z_][\\w]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            [/\\./, 'delimiter'],\n            ['', '', '@pop'],\n        ],\n        namespace: [\n            { include: '@whitespace' },\n            [/[A-Z]\\w*/, 'namespace'],\n            [/[\\.=]/, 'delimiter'],\n            ['', '', '@pop'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\n            ['\\\\*/', 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        litstring: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        litinterpstring: [\n            [/[^\"{]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/{{/, 'string.escape'],\n            [/}}/, 'string.escape'],\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        interpolatedstring: [\n            [/[^\\\\\"{]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/{{/, 'string.escape'],\n            [/}}/, 'string.escape'],\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        whitespace: [\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [],\n    autoClosingPairs: [],\n    surroundingPairs: []\n};\nexport var language = {\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    // defaultToken: 'invalid',\n    keywords: [],\n    typeKeywords: [],\n    tokenPostfix: '.csp',\n    operators: [],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            [/child-src/, 'string.quote'],\n            [/connect-src/, 'string.quote'],\n            [/default-src/, 'string.quote'],\n            [/font-src/, 'string.quote'],\n            [/frame-src/, 'string.quote'],\n            [/img-src/, 'string.quote'],\n            [/manifest-src/, 'string.quote'],\n            [/media-src/, 'string.quote'],\n            [/object-src/, 'string.quote'],\n            [/script-src/, 'string.quote'],\n            [/style-src/, 'string.quote'],\n            [/worker-src/, 'string.quote'],\n            [/base-uri/, 'string.quote'],\n            [/plugin-types/, 'string.quote'],\n            [/sandbox/, 'string.quote'],\n            [/disown-opener/, 'string.quote'],\n            [/form-action/, 'string.quote'],\n            [/frame-ancestors/, 'string.quote'],\n            [/report-uri/, 'string.quote'],\n            [/report-to/, 'string.quote'],\n            [/upgrade-insecure-requests/, 'string.quote'],\n            [/block-all-mixed-content/, 'string.quote'],\n            [/require-sri-for/, 'string.quote'],\n            [/reflected-xss/, 'string.quote'],\n            [/referrer/, 'string.quote'],\n            [/policy-uri/, 'string.quote'],\n            [/'self'/, 'string.quote'],\n            [/'unsafe-inline'/, 'string.quote'],\n            [/'unsafe-eval'/, 'string.quote'],\n            [/'strict-dynamic'/, 'string.quote'],\n            [/'unsafe-hashed-attributes'/, 'string.quote']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n    comments: {\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.css',\n    ws: '[ \\t\\n\\r\\f]*',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.bracket' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@selector' },\n        ],\n        selector: [\n            { include: '@comments' },\n            { include: '@import' },\n            { include: '@strings' },\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\n            ['(url-prefix)(\\\\()', ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]],\n            ['(url)(\\\\()', ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]],\n            { include: '@selectorname' },\n            ['[\\\\*]', 'tag'],\n            ['[>\\\\+,]', 'delimiter'],\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }]\n        ],\n        selectorbody: [\n            { include: '@comments' },\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\n            ['}', { token: 'delimiter.bracket', next: '@pop' }]\n        ],\n        selectorname: [\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\n        ],\n        selectorattribute: [\n            { include: '@term' },\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\n        ],\n        term: [\n            { include: '@comments' },\n            ['(url-prefix)(\\\\()', ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]],\n            ['(url)(\\\\()', ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]],\n            { include: '@functioninvocation' },\n            { include: '@numbers' },\n            { include: '@name' },\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'delimiter'],\n            [',', 'delimiter']\n        ],\n        rulevalue: [\n            { include: '@comments' },\n            { include: '@strings' },\n            { include: '@term' },\n            ['!important', 'keyword'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        warndebug: [\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]\n        ],\n        import: [\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }]\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        parenthizedterm: [\n            { include: '@term' },\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        declarationbody: [\n            { include: '@term' },\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment']\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            [/[^*/]+/, 'comment'],\n            [/./, 'comment'],\n        ],\n        name: [\n            ['@identifier', 'attribute.value']\n        ],\n        numbers: [\n            ['-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'attribute.value.number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'attribute.value.unit', '@pop']\n        ],\n        keyframedeclaration: [\n            ['@identifier', 'attribute.value'],\n            ['{', { token: 'delimiter.bracket', switchTo: '@keyframebody' }],\n        ],\n        keyframebody: [\n            { include: '@term' },\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }],\n            ['}', { token: 'delimiter.bracket', next: '@pop' }],\n        ],\n        functioninvocation: [\n            ['@identifier\\\\(', { token: 'attribute.value', next: '@functionarguments' }],\n        ],\n        functionarguments: [\n            ['\\\\$@identifier@ws:', 'attribute.name'],\n            ['[,]', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'attribute.value', next: '@pop' }],\n        ],\n        strings: [\n            ['~?\"', { token: 'string', next: '@stringenddoublequote' }],\n            ['~?\\'', { token: 'string', next: '@stringendquote' }]\n        ],\n        stringenddoublequote: [\n            ['\\\\\\\\.', 'string'],\n            ['\"', { token: 'string', next: '@pop' }],\n            [/[^\\\\\"]+/, 'string'],\n            ['.', 'string']\n        ],\n        stringendquote: [\n            ['\\\\\\\\.', 'string'],\n            ['\\'', { token: 'string', next: '@pop' }],\n            [/[^\\\\']+/, 'string'],\n            ['.', 'string']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.dockerfile',\n    instructions: /FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT/,\n    instructionAfter: /ONBUILD/,\n    variableAfter: /ENV/,\n    variable: /\\${?[\\w]+}?/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            [/(@instructionAfter)(\\s+)/, ['keyword', { token: '', next: '@instructions' }]],\n            ['', 'keyword', '@instructions']\n        ],\n        instructions: [\n            [/(@variableAfter)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\n            [/(@instructions)/, 'keyword', '@arguments']\n        ],\n        arguments: [\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [/(@variable)/, {\n                    cases: {\n                        '@eos': { token: 'variable', next: '@popall' },\n                        '@default': 'variable'\n                    }\n                }],\n            [/\\\\/, {\n                    cases: {\n                        '@eos': '',\n                        '@default': ''\n                    }\n                }],\n            [/./, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        // Deal with white space, including comments\n        whitespace: [\n            [/\\s+/, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        comment: [\n            [/(^#.*$)/, 'comment', '@popall']\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@stringBody'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/[^\\\\\\$']/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/[^\\\\\\$\"]/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.fs',\n    keywords: [\n        'abstract', 'and', 'atomic', 'as',\n        'assert', 'asr', 'base', 'begin',\n        'break', 'checked', 'component',\n        'const', 'constraint', 'constructor',\n        'continue', 'class', 'default',\n        'delegate', 'do', 'done', 'downcast',\n        'downto', 'elif', 'else', 'end',\n        'exception', 'eager', 'event', 'external',\n        'extern', 'false', 'finally', 'for',\n        'fun', 'function', 'fixed', 'functor',\n        'global', 'if', 'in', 'include', 'inherit',\n        'inline', 'interface', 'internal', 'land',\n        'lor', 'lsl', 'lsr', 'lxor', 'lazy', 'let',\n        'match', 'member', 'mod', 'module', 'mutable',\n        'namespace', 'method', 'mixin', 'new', 'not',\n        'null', 'of', 'open', 'or', 'object',\n        'override', 'private', 'parallel', 'process',\n        'protected', 'pure', 'public', 'rec', 'return',\n        'static', 'sealed', 'struct', 'sig', 'then',\n        'to', 'true', 'tailcall', 'trait',\n        'try', 'type', 'upcast', 'use',\n        'val', 'void', 'virtual', 'volatile',\n        'when', 'while', 'with', 'yield'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /[uU]?[yslnLI]?/,\n    floatsuffix: /[fFmM]?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [< attributes >].\n            [/\\[<.*>\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^#(if|else|endif)/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0x[0-9a-fA-F]+LF/, 'number.float'],\n            [/0x[0-9a-fA-F]+(@integersuffix)/, 'number.hex'],\n            [/0b[0-1]+(@integersuffix)/, 'number.bin'],\n            [/\\d+(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"\"\"/, 'string', '@string.\"\"\"'],\n            [/\"/, 'string', '@string.\"'],\n            // literal string\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\n            // characters\n            [/'[^\\\\']'B?/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\(\\*(?!\\))/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\*]+/, 'comment'],\n            [/\\*\\)/, 'comment', '@pop'],\n            [/\\*/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/(\"\"\"|\"B?)/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        litstring: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '`', close: '`', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '`', close: '`' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.go',\n    keywords: [\n        'break',\n        'case',\n        'chan',\n        'const',\n        'continue',\n        'default',\n        'defer',\n        'else',\n        'fallthrough',\n        'for',\n        'func',\n        'go',\n        'goto',\n        'if',\n        'import',\n        'interface',\n        'map',\n        'package',\n        'range',\n        'return',\n        'select',\n        'struct',\n        'switch',\n        'type',\n        'var',\n        'bool',\n        'true',\n        'false',\n        'uint8',\n        'uint16',\n        'uint32',\n        'uint64',\n        'int8',\n        'int16',\n        'int32',\n        'int64',\n        'float32',\n        'float64',\n        'complex64',\n        'complex128',\n        'byte',\n        'rune',\n        'uint',\n        'int',\n        'uintptr',\n        'string',\n        'nil',\n    ],\n    operators: [\n        '+', '-', '*', '/', '%', '&', '|', '^', '<<', '>>', '&^',\n        '+=', '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '&^=',\n        '&&', '||', '<-', '++', '--', '==', '<', '>', '=', '!', '!=', '<=', '>=', ':=', '...',\n        '(', ')', '', ']', '{', '}', ',', ';', '.', ':'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [[ attributes ]].\n            [/\\[\\[.*\\]\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^\\s*#\\w+/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex'],\n            [/0[0-7']*[0-7]/, 'number.octal'],\n            [/0[bB][0-1']*[0-1]/, 'number.binary'],\n            [/\\d[\\d']*/, 'number'],\n            [/\\d/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            [/`/, \"string\", \"@rawstring\"],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        doccomment: [\n            [/[^\\/*]+/, 'comment.doc'],\n            // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\n            [/\\/\\*/, 'comment.doc.invalid'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n        rawstring: [\n            [/[^\\`]/, \"string\"],\n            [/`/, \"string\", \"@pop\"]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: ['{{!--', '--}}']\n    },\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{{', '}}'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\n        }\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '',\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.root' }],\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\n            [/<!--/, 'comment.html', '@comment'],\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/</, 'delimiter.html'],\n            [/\\{/, 'delimiter.html'],\n            [/[^<{]+/] // text\n        ],\n        doctype: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.comment' }],\n            [/[^>]+/, 'metatag.content.html'],\n            [/>/, 'metatag.html', '@pop'],\n        ],\n        comment: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.comment' }],\n            [/-->/, 'comment.html', '@pop'],\n            [/[^-]+/, 'comment.content.html'],\n            [/./, 'comment.content.html']\n        ],\n        otherTag: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.otherTag' }],\n            [/\\/?>/, 'delimiter.html', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.script' }],\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptAfterType' }],\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.scriptWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.style' }],\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleAfterType' }],\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInSimpleState.styleWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/\\{\\{/, { token: '@rematch', switchTo: '@handlebarsInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <style> tags handling\n        handlebarsInSimpleState: [\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3' }],\n            { include: 'handlebarsRoot' }\n        ],\n        handlebarsInEmbeddedState: [\n            [/\\{\\{\\{?/, 'delimiter.handlebars'],\n            [/\\}\\}\\}?/, { token: 'delimiter.handlebars', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\n            { include: 'handlebarsRoot' }\n        ],\n        handlebarsRoot: [\n            [/[#/][^\\s}]+/, 'keyword.helper.handlebars'],\n            [/else\\b/, 'keyword.helper.handlebars'],\n            [/[\\s]+/],\n            [/[^}]/, 'variable.parameter.handlebars'],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: ['<!--', '-->']\n    },\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    surroundingPairs: [\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\n        }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.html',\n    ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/<!DOCTYPE/, 'metatag', '@doctype'],\n            [/<!--/, 'comment', '@comment'],\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, ['delimiter', 'tag', '', 'delimiter']],\n            [/(<)(script)/, ['delimiter', { token: 'tag', next: '@script' }]],\n            [/(<)(style)/, ['delimiter', { token: 'tag', next: '@style' }]],\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\n            [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\n            [/</, 'delimiter'],\n            [/[^<]+/],\n        ],\n        doctype: [\n            [/[^>]+/, 'metatag.content'],\n            [/>/, 'metatag', '@pop'],\n        ],\n        comment: [\n            [/-->/, 'comment', '@pop'],\n            [/[^-]+/, 'comment.content'],\n            [/./, 'comment.content']\n        ],\n        otherTag: [\n            [/\\/?>/, 'delimiter', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter', next: '@scriptEmbedded', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [/>/, { token: 'delimiter', next: '@scriptEmbedded', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/>/, { token: 'delimiter', next: '@scriptEmbedded', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [/>/, { token: 'delimiter', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^<]+/, '']\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter', next: '@styleEmbedded', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [/>/, { token: 'delimiter', next: '@styleEmbedded', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/>/, { token: 'delimiter', next: '@styleEmbedded', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [/>/, { token: 'delimiter', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^<]+/, '']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.ini',\n    // we include these common regular expressions\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // sections\n            [/^\\[[^\\]]*\\]/, 'metatag'],\n            // keys\n            [/(^\\w+)(\\s*)(\\=)/, ['key', '', 'delimiter']],\n            // whitespace\n            { include: '@whitespace' },\n            // numbers\n            [/\\d+/, 'number'],\n            // strings: recover on non-terminated strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/^\\s*[#;].*$/, 'comment'],\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `@$`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '<', close: '>' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.java',\n    keywords: [\n        'abstract', 'continue', 'for', 'new', 'switch', 'assert', 'default',\n        'goto', 'package', 'synchronized', 'boolean', 'do', 'if', 'private',\n        'this', 'break', 'double', 'implements', 'protected', 'throw', 'byte',\n        'else', 'import', 'public', 'throws', 'case', 'enum', 'instanceof', 'return',\n        'transient', 'catch', 'extends', 'int', 'short', 'try', 'char', 'final',\n        'interface', 'static', 'void', 'class', 'finally', 'long', 'strictfp',\n        'volatile', 'const', 'float', 'native', 'super', 'while', 'true', 'false'\n    ],\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+(_+\\d+)*/,\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_$][\\w$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // @ annotations.\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\n            // numbers\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\n            [/0(@octaldigits)[Ll]?/, 'number.octal'],\n            [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\n            [/(@digits)[fFdD]/, 'number.float'],\n            [/(@digits)[lL]?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        javadoc: [\n            [/[^\\/*]+/, 'comment.doc'],\n            // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\n            [/\\/\\*/, 'comment.doc.invalid'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { conf as tsConf, language as tsLanguage } from '../typescript/typescript.js';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nexport var conf = tsConf;\nexport var language = {\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    defaultToken: 'invalid',\n    tokenPostfix: '.js',\n    keywords: [\n        'break', 'case', 'catch', 'class', 'continue', 'const',\n        'constructor', 'debugger', 'default', 'delete', 'do', 'else',\n        'export', 'extends', 'false', 'finally', 'for', 'from', 'function',\n        'get', 'if', 'import', 'in', 'instanceof', 'let', 'new', 'null',\n        'return', 'set', 'super', 'switch', 'symbol', 'this', 'throw', 'true',\n        'try', 'typeof', 'undefined', 'var', 'void', 'while', 'with', 'yield',\n        'async', 'await', 'of'\n    ],\n    typeKeywords: [],\n    operators: tsLanguage.operators,\n    symbols: tsLanguage.symbols,\n    escapes: tsLanguage.escapes,\n    digits: tsLanguage.digits,\n    octaldigits: tsLanguage.octaldigits,\n    binarydigits: tsLanguage.binarydigits,\n    hexdigits: tsLanguage.hexdigits,\n    regexpctl: tsLanguage.regexpctl,\n    regexpesc: tsLanguage.regexpesc,\n    tokenizer: tsLanguage.tokenizer,\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n    comments: {\n        blockComment: ['/*', '*/'],\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.less',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    identifierPlus: '-?-?([a-zA-Z:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@nestedJSBegin' },\n            ['[ \\\\t\\\\r\\\\n]+', ''],\n            { include: '@comments' },\n            { include: '@keyword' },\n            { include: '@strings' },\n            { include: '@numbers' },\n            ['[*_]?[a-zA-Z\\\\-\\\\s]+(?=:.*(;|(\\\\\\\\$)))', 'attribute.name', '@attribute'],\n            ['url(\\\\-prefix)?\\\\(', { token: 'tag', next: '@urldeclaration' }],\n            ['[{}()\\\\[\\\\]]', '@brackets'],\n            ['[,:;]', 'delimiter'],\n            ['#@identifierPlus', 'tag.id'],\n            ['&', 'tag'],\n            ['\\\\.@identifierPlus(?=\\\\()', 'tag.class', '@attribute'],\n            ['\\\\.@identifierPlus', 'tag.class'],\n            ['@identifierPlus', 'tag'],\n            { include: '@operators' },\n            ['@(@identifier(?=[:,\\\\)]))', 'variable', '@attribute'],\n            ['@(@identifier)', 'variable'],\n            ['@', 'key', '@atRules']\n        ],\n        nestedJSBegin: [\n            ['``', 'delimiter.backtick'],\n            ['`', { token: 'delimiter.backtick', next: '@nestedJSEnd', nextEmbedded: 'text/javascript' }],\n        ],\n        nestedJSEnd: [\n            ['`', { token: 'delimiter.backtick', next: '@pop', nextEmbedded: '@pop' }],\n        ],\n        operators: [\n            ['[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~]', 'operator']\n        ],\n        keyword: [\n            ['(@[\\\\s]*import|![\\\\s]*important|true|false|when|iscolor|isnumber|isstring|iskeyword|isurl|ispixel|ispercentage|isem|hue|saturation|lightness|alpha|lighten|darken|saturate|desaturate|fadein|fadeout|fade|spin|mix|round|ceil|floor|percentage)\\\\b', 'keyword']\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'tag', next: '@pop' }],\n        ],\n        attribute: [\n            { include: '@nestedJSBegin' },\n            { include: '@comments' },\n            { include: '@strings' },\n            { include: '@numbers' },\n            { include: '@keyword' },\n            ['[a-zA-Z\\\\-]+(?=\\\\()', 'attribute.value', '@attribute'],\n            ['>', 'operator', '@pop'],\n            ['@identifier', 'attribute.value'],\n            { include: '@operators' },\n            ['@(@identifier)', 'variable'],\n            ['[)\\\\}]', '@brackets', '@pop'],\n            ['[{}()\\\\[\\\\]>]', '@brackets'],\n            ['[;]', 'delimiter', '@pop'],\n            ['[,=:]', 'delimiter'],\n            ['\\\\s', ''],\n            ['.', 'attribute.value']\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment'],\n        ],\n        numbers: [\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'attribute.value.number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'attribute.value.unit', '@pop']\n        ],\n        strings: [\n            ['~?\"', { token: 'string.delimiter', next: '@stringsEndDoubleQuote' }],\n            ['~?\\'', { token: 'string.delimiter', next: '@stringsEndQuote' }]\n        ],\n        stringsEndDoubleQuote: [\n            ['\\\\\\\\\"', 'string'],\n            ['\"', { token: 'string.delimiter', next: '@popall' }],\n            ['.', 'string']\n        ],\n        stringsEndQuote: [\n            ['\\\\\\\\\\'', 'string'],\n            ['\\'', { token: 'string.delimiter', next: '@popall' }],\n            ['.', 'string']\n        ],\n        atRules: [\n            { include: '@comments' },\n            { include: '@strings' },\n            ['[()]', 'delimiter'],\n            ['[\\\\{;]', 'delimiter', '@pop'],\n            ['.', 'key']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['--[[', ']]'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.lua',\n    keywords: [\n        'and', 'break', 'do', 'else', 'elseif',\n        'end', 'false', 'for', 'function', 'goto', 'if',\n        'in', 'local', 'nil', 'not', 'or',\n        'repeat', 'return', 'then', 'true', 'until',\n        'while'\n    ],\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    operators: [\n        '+', '-', '*', '/', '%', '^', '#', '==', '~=', '<=', '>=', '<', '>', '=',\n        ';', ':', ',', '.', '..', '...'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // keys\n            [/(,)(\\s*)([a-zA-Z_]\\w*)(\\s*)(:)(?!:)/, ['delimiter', '', 'key', '', 'delimiter']],\n            [/({)(\\s*)([a-zA-Z_]\\w*)(\\s*)(:)(?!:)/, ['@brackets', '', 'key', '', 'delimiter']],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings: recover on non-terminated strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/--\\[([=]*)\\[/, 'comment', '@comment.$1'],\n            [/--.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\]]+/, 'comment'],\n            [/\\]([=]*)\\]/, {\n                    cases: {\n                        '$1==$S2': { token: 'comment', next: '@pop' },\n                        '@default': 'comment'\n                    }\n                }],\n            [/./, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar TOKEN_HEADER_LEAD = 'keyword';\nvar TOKEN_HEADER = 'keyword';\nvar TOKEN_EXT_HEADER = 'keyword';\nvar TOKEN_SEPARATOR = 'meta.separator';\nvar TOKEN_QUOTE = 'comment';\nvar TOKEN_LIST = 'keyword';\nvar TOKEN_BLOCK = 'string';\nvar TOKEN_BLOCK_CODE = 'variable.source';\nvar DELIM_ASSIGN = 'delimiter.html';\nvar ATTRIB_NAME = 'attribute.name.html';\nvar ATTRIB_VALUE = 'string.html';\nfunction getTag(name) {\n    return 'tag';\n}\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->',]\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '(', close: ')' },\n        { open: '[', close: ']' },\n        { open: '`', close: '`' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.md',\n    // escape codes\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    escapes: /\\\\(?:@control)/,\n    // escape codes for javascript/CSS strings\n    jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    // non matched elements\n    empty: [\n        'area', 'base', 'basefont', 'br', 'col', 'frame',\n        'hr', 'img', 'input', 'isindex', 'link', 'meta', 'param'\n    ],\n    tokenizer: {\n        root: [\n            // headers (with #)\n            [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, ['white', TOKEN_HEADER_LEAD, TOKEN_HEADER, TOKEN_HEADER]],\n            // headers (with =)\n            [/^\\s*(=+|\\-+)\\s*$/, TOKEN_EXT_HEADER],\n            // headers (with ***)\n            [/^\\s*((\\*[ ]?)+)\\s*$/, TOKEN_SEPARATOR],\n            // quote\n            [/^\\s*>+/, TOKEN_QUOTE],\n            // list (starting with * or number)\n            [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, TOKEN_LIST],\n            // code block (4 spaces indent)\n            [/^(\\t|[ ]{4})[^ ].*$/, TOKEN_BLOCK],\n            // code block (3 tilde)\n            [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: TOKEN_BLOCK, next: '@codeblock' }],\n            // github style code blocks (with backticks and language)\n            [/^\\s*```\\s*((?:\\w|[\\/\\-#])+)\\s*$/, { token: TOKEN_BLOCK, next: '@codeblockgh', nextEmbedded: '$1' }],\n            // github style code blocks (with backticks but no language)\n            [/^\\s*```\\s*$/, { token: TOKEN_BLOCK, next: '@codeblock' }],\n            // markup within lines\n            { include: '@linecontent' },\n        ],\n        codeblock: [\n            [/^\\s*~~~\\s*$/, { token: TOKEN_BLOCK, next: '@pop' }],\n            [/^\\s*```\\s*$/, { token: TOKEN_BLOCK, next: '@pop' }],\n            [/.*$/, TOKEN_BLOCK_CODE],\n        ],\n        // github style code blocks\n        codeblockgh: [\n            [/```\\s*$/, { token: TOKEN_BLOCK_CODE, next: '@pop', nextEmbedded: '@pop' }],\n            [/[^`]+/, TOKEN_BLOCK_CODE],\n        ],\n        linecontent: [\n            // escapes\n            [/&\\w+;/, 'string.escape'],\n            [/@escapes/, 'escape'],\n            // various markup\n            [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, 'strong'],\n            [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, 'strong'],\n            [/\\b_[^_]+_\\b/, 'emphasis'],\n            [/\\*([^\\\\*]|@escapes)+\\*/, 'emphasis'],\n            [/`([^\\\\`]|@escapes)+`/, 'variable'],\n            // links\n            [/\\{[^}]+\\}/, 'string.target'],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, ['string.link', '', 'string.link']],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, 'string.link'],\n            // or html\n            { include: 'html' },\n        ],\n        // Note: it is tempting to rather switch to the real HTML mode instead of building our own here\n        // but currently there is a limitation in Monarch that prevents us from doing it: The opening\n        // '<' would start the HTML mode, however there is no way to jump 1 character back to let the\n        // HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\n        // we cannot correctly tokenize it in that mode yet.\n        html: [\n            // html tags\n            [/<(\\w+)\\/>/, getTag('$1')],\n            [/<(\\w+)/, {\n                    cases: {\n                        '@empty': { token: getTag('$1'), next: '@tag.$1' },\n                        '@default': { token: getTag('$1'), next: '@tag.$1' }\n                    }\n                }],\n            [/<\\/(\\w+)\\s*>/, { token: getTag('$1') }],\n            [/<!--/, 'comment', '@comment']\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, 'comment', '@pop'],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        // Almost full HTML tag matching, complete with embedded scripts & styles\n        tag: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/(type)(\\s*=\\s*)(\")([^\"]+)(\")/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE,\n                    { token: ATTRIB_VALUE, switchTo: '@tag.$S2.$4' },\n                    ATTRIB_VALUE]],\n            [/(type)(\\s*=\\s*)(')([^']+)(')/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE,\n                    { token: ATTRIB_VALUE, switchTo: '@tag.$S2.$4' },\n                    ATTRIB_VALUE]],\n            [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [ATTRIB_NAME, DELIM_ASSIGN, ATTRIB_VALUE]],\n            [/\\w+/, ATTRIB_NAME],\n            [/\\/>/, getTag('$S2'), '@pop'],\n            [/>/, {\n                    cases: {\n                        '$S2==style': { token: getTag('$S2'), switchTo: 'embeddedStyle', nextEmbedded: 'text/css' },\n                        '$S2==script': {\n                            cases: {\n                                '$S3': { token: getTag('$S2'), switchTo: 'embeddedScript', nextEmbedded: '$S3' },\n                                '@default': { token: getTag('$S2'), switchTo: 'embeddedScript', nextEmbedded: 'text/javascript' }\n                            }\n                        },\n                        '@default': { token: getTag('$S2'), next: '@pop' }\n                    }\n                }],\n        ],\n        embeddedStyle: [\n            [/[^<]+/, ''],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n        embeddedScript: [\n            [/[^<]+/, ''],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [['[', ']'], ['(', ')'], ['{', '}']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.msdax',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '{', close: '}', token: 'delimiter.brackets' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        // Query keywords\n        'VAR',\n        'RETURN',\n        'NOT',\n        'EVALUATE',\n        'DATATABLE',\n        'ORDER',\n        'BY',\n        'START',\n        'AT',\n        'DEFINE',\n        'MEASURE',\n        'ASC',\n        'DESC',\n        'IN',\n        // Datatable types\n        'BOOLEAN',\n        'DOUBLE',\n        'INTEGER',\n        'DATETIME',\n        'CURRENCY',\n        'STRING'\n    ],\n    functions: [\n        // Relational\n        'CLOSINGBALANCEMONTH', 'CLOSINGBALANCEQUARTER', 'CLOSINGBALANCEYEAR', 'DATEADD', 'DATESBETWEEN',\n        'DATESINPERIOD', 'DATESMTD', 'DATESQTD', 'DATESYTD', 'ENDOFMONTH',\n        'ENDOFQUARTER', 'ENDOFYEAR', 'FIRSTDATE', 'FIRSTNONBLANK', 'LASTDATE',\n        'LASTNONBLANK', 'NEXTDAY', 'NEXTMONTH', 'NEXTQUARTER', 'NEXTYEAR',\n        'OPENINGBALANCEMONTH', 'OPENINGBALANCEQUARTER', 'OPENINGBALANCEYEAR', 'PARALLELPERIOD', 'PREVIOUSDAY',\n        'PREVIOUSMONTH', 'PREVIOUSQUARTER', 'PREVIOUSYEAR', 'SAMEPERIODLASTYEAR', 'STARTOFMONTH',\n        'STARTOFQUARTER', 'STARTOFYEAR', 'TOTALMTD', 'TOTALQTD', 'TOTALYTD',\n        'ADDCOLUMNS', 'ADDMISSINGITEMS', 'ALL', 'ALLEXCEPT', 'ALLNOBLANKROW',\n        'ALLSELECTED', 'CALCULATE', 'CALCULATETABLE', 'CALENDAR', 'CALENDARAUTO',\n        'CROSSFILTER', 'CROSSJOIN', 'CURRENTGROUP', 'DATATABLE', 'DETAILROWS',\n        'DISTINCT', 'EARLIER', 'EARLIEST', 'EXCEPT', 'FILTER',\n        'FILTERS', 'GENERATE', 'GENERATEALL', 'GROUPBY', 'IGNORE',\n        'INTERSECT', 'ISONORAFTER', 'KEEPFILTERS', 'LOOKUPVALUE', 'NATURALINNERJOIN',\n        'NATURALLEFTOUTERJOIN', 'RELATED', 'RELATEDTABLE', 'ROLLUP', 'ROLLUPADDISSUBTOTAL',\n        'ROLLUPGROUP', 'ROLLUPISSUBTOTAL', 'ROW', 'SAMPLE', 'SELECTCOLUMNS',\n        'SUBSTITUTEWITHINDEX', 'SUMMARIZE', 'SUMMARIZECOLUMNS', 'TOPN', 'TREATAS',\n        'UNION', 'USERELATIONSHIP', 'VALUES', 'SUM', 'SUMX',\n        'PATH', 'PATHCONTAINS', 'PATHITEM', 'PATHITEMREVERSE', 'PATHLENGTH',\n        'AVERAGE', 'AVERAGEA', 'AVERAGEX', 'COUNT', 'COUNTA',\n        'COUNTAX', 'COUNTBLANK', 'COUNTROWS', 'COUNTX', 'DISTINCTCOUNT',\n        'DIVIDE', 'GEOMEAN', 'GEOMEANX', 'MAX', 'MAXA',\n        'MAXX', 'MEDIAN', 'MEDIANX', 'MIN', 'MINA',\n        'MINX', 'PERCENTILE.EXC', 'PERCENTILE.INC', 'PERCENTILEX.EXC', 'PERCENTILEX.INC',\n        'PRODUCT', 'PRODUCTX', 'RANK.EQ', 'RANKX', 'STDEV.P',\n        'STDEV.S', 'STDEVX.P', 'STDEVX.S', 'VAR.P', 'VAR.S',\n        'VARX.P', 'VARX.S', 'XIRR', 'XNPV',\n        // Scalar\n        'DATE', 'DATEDIFF', 'DATEVALUE', 'DAY', 'EDATE',\n        'EOMONTH', 'HOUR', 'MINUTE', 'MONTH', 'NOW',\n        'SECOND', 'TIME', 'TIMEVALUE', 'TODAY', 'WEEKDAY',\n        'WEEKNUM', 'YEAR', 'YEARFRAC', 'CONTAINS', 'CONTAINSROW',\n        'CUSTOMDATA', 'ERROR', 'HASONEFILTER', 'HASONEVALUE', 'ISBLANK',\n        'ISCROSSFILTERED', 'ISEMPTY', 'ISERROR', 'ISEVEN', 'ISFILTERED',\n        'ISLOGICAL', 'ISNONTEXT', 'ISNUMBER', 'ISODD', 'ISSUBTOTAL',\n        'ISTEXT', 'USERNAME', 'USERPRINCIPALNAME', 'AND', 'FALSE',\n        'IF', 'IFERROR', 'NOT', 'OR', 'SWITCH',\n        'TRUE', 'ABS', 'ACOS', 'ACOSH', 'ACOT',\n        'ACOTH', 'ASIN', 'ASINH', 'ATAN', 'ATANH',\n        'BETA.DIST', 'BETA.INV', 'CEILING', 'CHISQ.DIST', 'CHISQ.DIST.RT',\n        'CHISQ.INV', 'CHISQ.INV.RT', 'COMBIN', 'COMBINA', 'CONFIDENCE.NORM',\n        'CONFIDENCE.T', 'COS', 'COSH', 'COT', 'COTH',\n        'CURRENCY', 'DEGREES', 'EVEN', 'EXP', 'EXPON.DIST',\n        'FACT', 'FLOOR', 'GCD', 'INT', 'ISO.CEILING',\n        'LCM', 'LN', 'LOG', 'LOG10', 'MOD',\n        'MROUND', 'ODD', 'PERMUT', 'PI', 'POISSON.DIST',\n        'POWER', 'QUOTIENT', 'RADIANS', 'RAND', 'RANDBETWEEN',\n        'ROUND', 'ROUNDDOWN', 'ROUNDUP', 'SIGN', 'SIN',\n        'SINH', 'SQRT', 'SQRTPI', 'TAN', 'TANH',\n        'TRUNC', 'BLANK', 'CONCATENATE', 'CONCATENATEX', 'EXACT',\n        'FIND', 'FIXED', 'FORMAT', 'LEFT', 'LEN',\n        'LOWER', 'MID', 'REPLACE', 'REPT', 'RIGHT',\n        'SEARCH', 'SUBSTITUTE', 'TRIM', 'UNICHAR', 'UNICODE',\n        'UPPER', 'VALUE'\n    ],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            [/[;,.]/, 'delimiter'],\n            [/[({})]/, '@brackets'],\n            [/[a-z_][a-zA-Z0-9_]*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@functions': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/\\/\\/+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/N\"/, { token: 'string', next: '@string' }],\n            [/\"/, { token: 'string', next: '@string' }]\n        ],\n        string: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string'],\n            [/\"/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\\[/, { token: 'identifier.quote', next: '@bracketedIdentifier' }],\n            [/'/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        bracketedIdentifier: [\n            [/[^\\]]+/, 'identifier'],\n            [/]]/, 'identifier'],\n            [/]/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        quotedIdentifier: [\n            [/[^']+/, 'identifier'],\n            [/''/, 'identifier'],\n            [/'/, { token: 'identifier.quote', next: '@pop' }]\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        \"ACCESSIBLE\", \"ACCOUNT\", \"ACTION\", \"ADD\", \"AFTER\", \"AGAINST\", \"AGGREGATE\", \"ALGORITHM\", \"ALL\", \"ALTER\", \"ALWAYS\", \"ANALYSE\", \"ANALYZE\",\n        \"AND\", \"ANY\", \"AS\", \"ASC\", \"ASCII\", \"ASENSITIVE\", \"AT\", \"AUTOEXTEND_SIZE\", \"AUTO_INCREMENT\", \"AVG\", \"AVG_ROW_LENGTH\", \"BACKUP\", \"BEFORE\",\n        \"BEGIN\", \"BETWEEN\", \"BIGINT\", \"BINARY\", \"BINLOG\", \"BIT\", \"BLOB\", \"BLOCK\", \"BOOL\", \"BOOLEAN\", \"BOTH\", \"BTREE\", \"BY\", \"BYTE\", \"CACHE\", \"CALL\",\n        \"CASCADE\", \"CASCADED\", \"CASE\", \"CATALOG_NAME\", \"CHAIN\", \"CHANGE\", \"CHANGED\", \"CHANNEL\", \"CHAR\", \"CHARACTER\", \"CHARSET\", \"CHECK\", \"CHECKSUM\",\n        \"CIPHER\", \"CLASS_ORIGIN\", \"CLIENT\", \"CLOSE\", \"COALESCE\", \"CODE\", \"COLLATE\", \"COLLATION\", \"COLUMN\", \"COLUMNS\", \"COLUMN_FORMAT\", \"COLUMN_NAME\",\n        \"COMMENT\", \"COMMIT\", \"COMMITTED\", \"COMPACT\", \"COMPLETION\", \"COMPRESSED\", \"COMPRESSION\", \"CONCURRENT\", \"CONDITION\", \"CONNECTION\", \"CONSISTENT\",\n        \"CONSTRAINT\", \"CONSTRAINT_CATALOG\", \"CONSTRAINT_NAME\", \"CONSTRAINT_SCHEMA\", \"CONTAINS\", \"CONTEXT\", \"CONTINUE\", \"CONVERT\", \"CPU\", \"CREATE\",\n        \"CROSS\", \"CUBE\", \"CURRENT\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\", \"CURSOR\", \"CURSOR_NAME\", \"DATA\", \"DATABASE\",\n        \"DATABASES\", \"DATAFILE\", \"DATE\", \"DATETIME\", \"DAY\", \"DAY_HOUR\", \"DAY_MICROSECOND\", \"DAY_MINUTE\", \"DAY_SECOND\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\",\n        \"DECLARE\", \"DEFAULT\", \"DEFAULT_AUTH\", \"DEFINER\", \"DELAYED\", \"DELAY_KEY_WRITE\", \"DELETE\", \"DESC\", \"DESCRIBE\", \"DES_KEY_FILE\", \"DETERMINISTIC\",\n        \"DIAGNOSTICS\", \"DIRECTORY\", \"DISABLE\", \"DISCARD\", \"DISK\", \"DISTINCT\", \"DISTINCTROW\", \"DIV\", \"DO\", \"DOUBLE\", \"DROP\", \"DUAL\", \"DUMPFILE\",\n        \"DUPLICATE\", \"DYNAMIC\", \"EACH\", \"ELSE\", \"ELSEIF\", \"ENABLE\", \"ENCLOSED\", \"ENCRYPTION\", \"END\", \"ENDS\", \"ENGINE\", \"ENGINES\", \"ENUM\", \"ERROR\",\n        \"ERRORS\", \"ESCAPE\", \"ESCAPED\", \"EVENT\", \"EVENTS\", \"EVERY\", \"EXCHANGE\", \"EXECUTE\", \"EXISTS\", \"EXIT\", \"EXPANSION\", \"EXPIRE\", \"EXPLAIN\", \"EXPORT\",\n        \"EXTENDED\", \"EXTENT_SIZE\", \"FALSE\", \"FAST\", \"FAULTS\", \"FETCH\", \"FIELDS\", \"FILE\", \"FILE_BLOCK_SIZE\", \"FILTER\", \"FIRST\", \"FIXED\", \"FLOAT\", \"FLOAT4\",\n        \"FLOAT8\", \"FLUSH\", \"FOLLOWS\", \"FOR\", \"FORCE\", \"FOREIGN\", \"FORMAT\", \"FOUND\", \"FROM\", \"FULL\", \"FULLTEXT\", \"FUNCTION\", \"GENERAL\", \"GENERATED\",\n        \"GEOMETRY\", \"GEOMETRYCOLLECTION\", \"GET\", \"GET_FORMAT\", \"GLOBAL\", \"GRANT\", \"GRANTS\", \"GROUP\", \"GROUP_REPLICATION\", \"HANDLER\", \"HASH\", \"HAVING\",\n        \"HELP\", \"HIGH_PRIORITY\", \"HOST\", \"HOSTS\", \"HOUR\", \"HOUR_MICROSECOND\", \"HOUR_MINUTE\", \"HOUR_SECOND\", \"IDENTIFIED\", \"IF\", \"IGNORE\", \"IGNORE_SERVER_IDS\",\n        \"IMPORT\", \"INDEX\", \"INDEXES\", \"INFILE\", \"INITIAL_SIZE\", \"INNER\", \"INOUT\", \"INSENSITIVE\", \"INSERT\", \"INSERT_METHOD\", \"INSTALL\", \"INSTANCE\",\n        \"INT\", \"INT1\", \"INT2\", \"INT3\", \"INT4\", \"INT8\", \"INTEGER\", \"INTERVAL\", \"INTO\", \"INVOKER\", \"IO\", \"IO_AFTER_GTIDS\", \"IO_BEFORE_GTIDS\", \"IO_THREAD\",\n        \"IPC\", \"ISOLATION\", \"ISSUER\", \"ITERATE\", \"JOIN\", \"JSON\", \"KEY\", \"KEYS\", \"KEY_BLOCK_SIZE\", \"KILL\", \"LANGUAGE\", \"LAST\", \"LEADING\", \"LEAVE\",\n        \"LEAVES\", \"LEFT\", \"LESS\", \"LEVEL\", \"LIKE\", \"LIMIT\", \"LINEAR\", \"LINES\", \"LINESTRING\", \"LIST\", \"LOAD\", \"LOCAL\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCK\",\n        \"LOCKS\", \"LOGFILE\", \"LOGS\", \"LONG\", \"LONGBLOB\", \"LONGTEXT\", \"LOOP\", \"LOW_PRIORITY\", \"MASTER\", \"MASTER_AUTO_POSITION\", \"MASTER_BIND\", \"MASTER_CONNECT_RETRY\",\n        \"MASTER_DELAY\", \"MASTER_HEARTBEAT_PERIOD\", \"MASTER_HOST\", \"MASTER_LOG_FILE\", \"MASTER_LOG_POS\", \"MASTER_PASSWORD\", \"MASTER_PORT\", \"MASTER_RETRY_COUNT\",\n        \"MASTER_SERVER_ID\", \"MASTER_SSL\", \"MASTER_SSL_CA\", \"MASTER_SSL_CAPATH\", \"MASTER_SSL_CERT\", \"MASTER_SSL_CIPHER\", \"MASTER_SSL_CRL\", \"MASTER_SSL_CRLPATH\",\n        \"MASTER_SSL_KEY\", \"MASTER_SSL_VERIFY_SERVER_CERT\", \"MASTER_TLS_VERSION\", \"MASTER_USER\", \"MATCH\", \"MAXVALUE\", \"MAX_CONNECTIONS_PER_HOUR\", \"MAX_QUERIES_PER_HOUR\",\n        \"MAX_ROWS\", \"MAX_SIZE\", \"MAX_STATEMENT_TIME\", \"MAX_UPDATES_PER_HOUR\", \"MAX_USER_CONNECTIONS\", \"MEDIUM\", \"MEDIUMBLOB\", \"MEDIUMINT\", \"MEDIUMTEXT\", \"MEMORY\",\n        \"MERGE\", \"MESSAGE_TEXT\", \"MICROSECOND\", \"MIDDLEINT\", \"MIGRATE\", \"MINUTE\", \"MINUTE_MICROSECOND\", \"MINUTE_SECOND\", \"MIN_ROWS\", \"MOD\", \"MODE\", \"MODIFIES\",\n        \"MODIFY\", \"MONTH\", \"MULTILINESTRING\", \"MULTIPOINT\", \"MULTIPOLYGON\", \"MUTEX\", \"MYSQL_ERRNO\", \"NAME\", \"NAMES\", \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NDB\",\n        \"NDBCLUSTER\", \"NEVER\", \"NEW\", \"NEXT\", \"NO\", \"NODEGROUP\", \"NONBLOCKING\", \"NONE\", \"NO_WAIT\", \"NO_WRITE_TO_BINLOG\", \"NUMBER\", \"NUMERIC\",\n        \"NVARCHAR\", \"OFFSET\", \"OLD_PASSWORD\", \"ON\", \"ONE\", \"ONLY\", \"OPEN\", \"OPTIMIZE\", \"OPTIMIZER_COSTS\", \"OPTION\", \"OPTIONALLY\", \"OPTIONS\", \"OR\", \"ORDER\",\n        \"OUT\", \"OUTER\", \"OUTFILE\", \"OWNER\", \"PACK_KEYS\", \"PAGE\", \"PARSER\", \"PARSE_GCOL_EXPR\", \"PARTIAL\", \"PARTITION\", \"PARTITIONING\", \"PARTITIONS\", \"PASSWORD\",\n        \"PHASE\", \"PLUGIN\", \"PLUGINS\", \"PLUGIN_DIR\", \"POINT\", \"POLYGON\", \"PORT\", \"PRECEDES\", \"PRECISION\", \"PREPARE\", \"PRESERVE\", \"PREV\", \"PRIMARY\", \"PRIVILEGES\",\n        \"PROCEDURE\", \"PROCESSLIST\", \"PROFILE\", \"PROFILES\", \"PROXY\", \"PURGE\", \"QUARTER\", \"QUERY\", \"QUICK\", \"RANGE\", \"READ\", \"READS\", \"READ_ONLY\", \"READ_WRITE\",\n        \"REAL\", \"REBUILD\", \"RECOVER\", \"REDOFILE\", \"REDO_BUFFER_SIZE\", \"REDUNDANT\", \"REFERENCES\", \"REGEXP\", \"RELAY\", \"RELAYLOG\", \"RELAY_LOG_FILE\", \"RELAY_LOG_POS\",\n        \"RELAY_THREAD\", \"RELEASE\", \"RELOAD\", \"REMOVE\", \"RENAME\", \"REORGANIZE\", \"REPAIR\", \"REPEAT\", \"REPEATABLE\", \"REPLACE\", \"REPLICATE_DO_DB\", \"REPLICATE_DO_TABLE\",\n        \"REPLICATE_IGNORE_DB\", \"REPLICATE_IGNORE_TABLE\", \"REPLICATE_REWRITE_DB\", \"REPLICATE_WILD_DO_TABLE\", \"REPLICATE_WILD_IGNORE_TABLE\", \"REPLICATION\", \"REQUIRE\",\n        \"RESET\", \"RESIGNAL\", \"RESTORE\", \"RESTRICT\", \"RESUME\", \"RETURN\", \"RETURNED_SQLSTATE\", \"RETURNS\", \"REVERSE\", \"REVOKE\", \"RIGHT\", \"RLIKE\", \"ROLLBACK\", \"ROLLUP\",\n        \"ROTATE\", \"ROUTINE\", \"ROW\", \"ROWS\", \"ROW_COUNT\", \"ROW_FORMAT\", \"RTREE\", \"SAVEPOINT\", \"SCHEDULE\", \"SCHEMA\", \"SCHEMAS\", \"SCHEMA_NAME\", \"SECOND\", \"SECOND_MICROSECOND\",\n        \"SECURITY\", \"SELECT\", \"SENSITIVE\", \"SEPARATOR\", \"SERIAL\", \"SERIALIZABLE\", \"SERVER\", \"SESSION\", \"SET\", \"SHARE\", \"SHOW\", \"SHUTDOWN\", \"SIGNAL\", \"SIGNED\", \"SIMPLE\",\n        \"SLAVE\", \"SLOW\", \"SMALLINT\", \"SNAPSHOT\", \"SOCKET\", \"SOME\", \"SONAME\", \"SOUNDS\", \"SOURCE\", \"SPATIAL\", \"SPECIFIC\", \"SQL\", \"SQLEXCEPTION\", \"SQLSTATE\", \"SQLWARNING\",\n        \"SQL_AFTER_GTIDS\", \"SQL_AFTER_MTS_GAPS\", \"SQL_BEFORE_GTIDS\", \"SQL_BIG_RESULT\", \"SQL_BUFFER_RESULT\", \"SQL_CACHE\", \"SQL_CALC_FOUND_ROWS\", \"SQL_NO_CACHE\",\n        \"SQL_SMALL_RESULT\", \"SQL_THREAD\", \"SQL_TSI_DAY\", \"SQL_TSI_HOUR\", \"SQL_TSI_MINUTE\", \"SQL_TSI_MONTH\", \"SQL_TSI_QUARTER\", \"SQL_TSI_SECOND\", \"SQL_TSI_WEEK\",\n        \"SQL_TSI_YEAR\", \"SSL\", \"STACKED\", \"START\", \"STARTING\", \"STARTS\", \"STATS_AUTO_RECALC\", \"STATS_PERSISTENT\", \"STATS_SAMPLE_PAGES\", \"STATUS\", \"STOP\", \"STORAGE\",\n        \"STORED\", \"STRAIGHT_JOIN\", \"STRING\", \"SUBCLASS_ORIGIN\", \"SUBJECT\", \"SUBPARTITION\", \"SUBPARTITIONS\", \"SUPER\", \"SUSPEND\", \"SWAPS\", \"SWITCHES\", \"TABLE\", \"TABLES\",\n        \"TABLESPACE\", \"TABLE_CHECKSUM\", \"TABLE_NAME\", \"TEMPORARY\", \"TEMPTABLE\", \"TERMINATED\", \"TEXT\", \"THAN\", \"THEN\", \"TIME\", \"TIMESTAMP\", \"TIMESTAMPADD\", \"TIMESTAMPDIFF\",\n        \"TINYBLOB\", \"TINYINT\", \"TINYTEXT\", \"TO\", \"TRAILING\", \"TRANSACTION\", \"TRIGGER\", \"TRIGGERS\", \"TRUE\", \"TRUNCATE\", \"TYPE\", \"TYPES\", \"UNCOMMITTED\", \"UNDEFINED\", \"UNDO\",\n        \"UNDOFILE\", \"UNDO_BUFFER_SIZE\", \"UNICODE\", \"UNINSTALL\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UNLOCK\", \"UNSIGNED\", \"UNTIL\", \"UPDATE\", \"UPGRADE\", \"USAGE\", \"USE\", \"USER\",\n        \"USER_RESOURCES\", \"USE_FRM\", \"USING\", \"UTC_DATE\", \"UTC_TIME\", \"UTC_TIMESTAMP\", \"VALIDATION\", \"VALUE\", \"VALUES\", \"VARBINARY\", \"VARCHAR\", \"VARCHARACTER\", \"VARIABLES\",\n        \"VARYING\", \"VIEW\", \"VIRTUAL\", \"WAIT\", \"WARNINGS\", \"WEEK\", \"WEIGHT_STRING\", \"WHEN\", \"WHERE\", \"WHILE\", \"WITH\", \"WITHOUT\", \"WORK\", \"WRAPPER\", \"WRITE\", \"X509\", \"XA\",\n        \"XID\", \"XML\", \"XOR\", \"YEAR\", \"YEAR_MONTH\", \"ZEROFILL\"\n    ],\n    operators: [\n        \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\n    ],\n    builtinFunctions: [\n        \"ABS\", \"ACOS\", \"ADDDATE\", \"ADDTIME\", \"AES_DECRYPT\", \"AES_ENCRYPT\", \"ANY_VALUE\", \"Area\", \"AsBinary\", \"AsWKB\", \"ASCII\", \"ASIN\",\n        \"AsText\", \"AsWKT\", \"ASYMMETRIC_DECRYPT\", \"ASYMMETRIC_DERIVE\", \"ASYMMETRIC_ENCRYPT\", \"ASYMMETRIC_SIGN\", \"ASYMMETRIC_VERIFY\",\n        \"ATAN\", \"ATAN2\", \"ATAN\", \"AVG\", \"BENCHMARK\", \"BIN\", \"BIT_AND\", \"BIT_COUNT\", \"BIT_LENGTH\", \"BIT_OR\", \"BIT_XOR\", \"Buffer\", \"CAST\",\n        \"CEIL\", \"CEILING\", \"Centroid\", \"CHAR\", \"CHAR_LENGTH\", \"CHARACTER_LENGTH\", \"CHARSET\", \"COALESCE\", \"COERCIBILITY\", \"COLLATION\",\n        \"COMPRESS\", \"CONCAT\", \"CONCAT_WS\", \"CONNECTION_ID\", \"Contains\", \"CONV\", \"CONVERT\", \"CONVERT_TZ\", \"ConvexHull\", \"COS\", \"COT\",\n        \"COUNT\", \"CRC32\", \"CREATE_ASYMMETRIC_PRIV_KEY\", \"CREATE_ASYMMETRIC_PUB_KEY\", \"CREATE_DH_PARAMETERS\", \"CREATE_DIGEST\", \"Crosses\",\n        \"CURDATE\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\", \"CURTIME\", \"DATABASE\", \"DATE\", \"DATE_ADD\",\n        \"DATE_FORMAT\", \"DATE_SUB\", \"DATEDIFF\", \"DAY\", \"DAYNAME\", \"DAYOFMONTH\", \"DAYOFWEEK\", \"DAYOFYEAR\", \"DECODE\", \"DEFAULT\", \"DEGREES\",\n        \"DES_DECRYPT\", \"DES_ENCRYPT\", \"Dimension\", \"Disjoint\", \"Distance\", \"ELT\", \"ENCODE\", \"ENCRYPT\", \"EndPoint\", \"Envelope\", \"Equals\",\n        \"EXP\", \"EXPORT_SET\", \"ExteriorRing\", \"EXTRACT\", \"ExtractValue\", \"FIELD\", \"FIND_IN_SET\", \"FLOOR\", \"FORMAT\", \"FOUND_ROWS\", \"FROM_BASE64\",\n        \"FROM_DAYS\", \"FROM_UNIXTIME\", \"GeomCollFromText\", \"GeometryCollectionFromText\", \"GeomCollFromWKB\", \"GeometryCollectionFromWKB\",\n        \"GeometryCollection\", \"GeometryN\", \"GeometryType\", \"GeomFromText\", \"GeometryFromText\", \"GeomFromWKB\", \"GeometryFromWKB\", \"GET_FORMAT\",\n        \"GET_LOCK\", \"GLength\", \"GREATEST\", \"GROUP_CONCAT\", \"GTID_SUBSET\", \"GTID_SUBTRACT\", \"HEX\", \"HOUR\", \"IF\", \"IFNULL\", \"INET_ATON\",\n        \"INET_NTOA\", \"INET6_ATON\", \"INET6_NTOA\", \"INSERT\", \"INSTR\", \"InteriorRingN\", \"Intersects\", \"INTERVAL\", \"IS_FREE_LOCK\", \"IS_IPV4\",\n        \"IS_IPV4_COMPAT\", \"IS_IPV4_MAPPED\", \"IS_IPV6\", \"IS_USED_LOCK\", \"IsClosed\", \"IsEmpty\", \"ISNULL\", \"IsSimple\", \"JSON_APPEND\", \"JSON_ARRAY\",\n        \"JSON_ARRAY_APPEND\", \"JSON_ARRAY_INSERT\", \"JSON_CONTAINS\", \"JSON_CONTAINS_PATH\", \"JSON_DEPTH\", \"JSON_EXTRACT\", \"JSON_INSERT\", \"JSON_KEYS\",\n        \"JSON_LENGTH\", \"JSON_MERGE\", \"JSON_MERGE_PRESERVE\", \"JSON_OBJECT\", \"JSON_QUOTE\", \"JSON_REMOVE\", \"JSON_REPLACE\", \"JSON_SEARCH\", \"JSON_SET\",\n        \"JSON_TYPE\", \"JSON_UNQUOTE\", \"JSON_VALID\", \"LAST_INSERT_ID\", \"LCASE\", \"LEAST\", \"LEFT\", \"LENGTH\", \"LineFromText\", \"LineStringFromText\",\n        \"LineFromWKB\", \"LineStringFromWKB\", \"LineString\", \"LN\", \"LOAD_FILE\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATE\", \"LOG\", \"LOG10\", \"LOG2\",\n        \"LOWER\", \"LPAD\", \"LTRIM\", \"MAKE_SET\", \"MAKEDATE\", \"MAKETIME\", \"MASTER_POS_WAIT\", \"MAX\", \"MBRContains\", \"MBRCoveredBy\", \"MBRCovers\",\n        \"MBRDisjoint\", \"MBREqual\", \"MBREquals\", \"MBRIntersects\", \"MBROverlaps\", \"MBRTouches\", \"MBRWithin\", \"MD5\", \"MICROSECOND\", \"MID\",\n        \"MIN\", \"MINUTE\", \"MLineFromText\", \"MultiLineStringFromText\", \"MLineFromWKB\", \"MultiLineStringFromWKB\", \"MOD\", \"MONTH\", \"MONTHNAME\",\n        \"MPointFromText\", \"MultiPointFromText\", \"MPointFromWKB\", \"MultiPointFromWKB\", \"MPolyFromText\", \"MultiPolygonFromText\", \"MPolyFromWKB\",\n        \"MultiPolygonFromWKB\", \"MultiLineString\", \"MultiPoint\", \"MultiPolygon\", \"NAME_CONST\", \"NOT IN\", \"NOW\", \"NULLIF\", \"NumGeometries\",\n        \"NumInteriorRings\", \"NumPoints\", \"OCT\", \"OCTET_LENGTH\", \"OLD_PASSWORD\", \"ORD\", \"Overlaps\", \"PASSWORD\", \"PERIOD_ADD\", \"PERIOD_DIFF\",\n        \"PI\", \"Point\", \"PointFromText\", \"PointFromWKB\", \"PointN\", \"PolyFromText\", \"PolygonFromText\", \"PolyFromWKB\", \"PolygonFromWKB\", \"Polygon\",\n        \"POSITION\", \"POW\", \"POWER\", \"PROCEDURE ANALYSE\", \"QUARTER\", \"QUOTE\", \"RADIANS\", \"RAND\", \"RANDOM_BYTES\", \"RELEASE_ALL_LOCKS\", \"RELEASE_LOCK\",\n        \"REPEAT\", \"REPLACE\", \"REVERSE\", \"RIGHT\", \"ROUND\", \"ROW_COUNT\", \"RPAD\", \"RTRIM\", \"SCHEMA\", \"SEC_TO_TIME\", \"SECOND\", \"SESSION_USER\", \"SHA1\",\n        \"SHA\", \"SHA2\", \"SIGN\", \"SIN\", \"SLEEP\", \"SOUNDEX\", \"SPACE\", \"SQRT\", \"SRID\", \"ST_Area\", \"ST_AsBinary\", \"ST_AsWKB\", \"ST_AsGeoJSON\", \"ST_AsText\",\n        \"ST_AsWKT\", \"ST_Buffer\", \"ST_Buffer_Strategy\", \"ST_Centroid\", \"ST_Contains\", \"ST_ConvexHull\", \"ST_Crosses\", \"ST_Difference\", \"ST_Dimension\",\n        \"ST_Disjoint\", \"ST_Distance\", \"ST_Distance_Sphere\", \"ST_EndPoint\", \"ST_Envelope\", \"ST_Equals\", \"ST_ExteriorRing\", \"ST_GeoHash\",\n        \"ST_GeomCollFromText\", \"ST_GeometryCollectionFromText\", \"ST_GeomCollFromTxt\", \"ST_GeomCollFromWKB\", \"ST_GeometryCollectionFromWKB\",\n        \"ST_GeometryN\", \"ST_GeometryType\", \"ST_GeomFromGeoJSON\", \"ST_GeomFromText\", \"ST_GeometryFromText\", \"ST_GeomFromWKB\", \"ST_GeometryFromWKB\",\n        \"ST_InteriorRingN\", \"ST_Intersection\", \"ST_Intersects\", \"ST_IsClosed\", \"ST_IsEmpty\", \"ST_IsSimple\", \"ST_IsValid\", \"ST_LatFromGeoHash\",\n        \"ST_Length\", \"ST_LineFromText\", \"ST_LineStringFromText\", \"ST_LineFromWKB\", \"ST_LineStringFromWKB\", \"ST_LongFromGeoHash\", \"ST_MakeEnvelope\",\n        \"ST_MLineFromText\", \"ST_MultiLineStringFromText\", \"ST_MLineFromWKB\", \"ST_MultiLineStringFromWKB\", \"ST_MPointFromText\", \"ST_MultiPointFromText\",\n        \"ST_MPointFromWKB\", \"ST_MultiPointFromWKB\", \"ST_MPolyFromText\", \"ST_MultiPolygonFromText\", \"ST_MPolyFromWKB\", \"ST_MultiPolygonFromWKB\",\n        \"ST_NumGeometries\", \"ST_NumInteriorRing\", \"ST_NumInteriorRings\", \"ST_NumPoints\", \"ST_Overlaps\", \"ST_PointFromGeoHash\", \"ST_PointFromText\",\n        \"ST_PointFromWKB\", \"ST_PointN\", \"ST_PolyFromText\", \"ST_PolygonFromText\", \"ST_PolyFromWKB\", \"ST_PolygonFromWKB\", \"ST_Simplify\", \"ST_SRID\",\n        \"ST_StartPoint\", \"ST_SymDifference\", \"ST_Touches\", \"ST_Union\", \"ST_Validate\", \"ST_Within\", \"ST_X\", \"ST_Y\", \"StartPoint\", \"STD\", \"STDDEV\",\n        \"STDDEV_POP\", \"STDDEV_SAMP\", \"STR_TO_DATE\", \"STRCMP\", \"SUBDATE\", \"SUBSTR\", \"SUBSTRING\", \"SUBSTRING_INDEX\", \"SUBTIME\", \"SUM\", \"SYSDATE\",\n        \"SYSTEM_USER\", \"TAN\", \"TIME\", \"TIME_FORMAT\", \"TIME_TO_SEC\", \"TIMEDIFF\", \"TIMESTAMP\", \"TIMESTAMPADD\", \"TIMESTAMPDIFF\", \"TO_BASE64\", \"TO_DAYS\",\n        \"TO_SECONDS\", \"Touches\", \"TRIM\", \"TRUNCATE\", \"UCASE\", \"UNCOMPRESS\", \"UNCOMPRESSED_LENGTH\", \"UNHEX\", \"UNIX_TIMESTAMP\", \"UpdateXML\", \"UPPER\",\n        \"USER\", \"UTC_DATE\", \"UTC_TIME\", \"UTC_TIMESTAMP\", \"UUID\", \"UUID_SHORT\", \"VALIDATE_PASSWORD_STRENGTH\", \"VALUES\", \"VAR_POP\", \"VAR_SAMP\", \"VARIANCE\",\n        \"VERSION\", \"WAIT_FOR_EXECUTED_GTID_SET\", \"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS\", \"WEEK\", \"WEEKDAY\", \"WEEKOFYEAR\", \"WEIGHT_STRING\", \"Within\",\n        \"X\", \"Y\", \"YEAR\", \"YEARWEEK\"\n    ],\n    builtinVariables: [\n    // NOT SUPPORTED\n    ],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/--+.*/, 'comment'],\n            [/#+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            // Not supporting nested comments, as nested comments seem to not be standard?\n            // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\n            // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/'/, { token: 'string', next: '@string' }],\n            [/\"/, { token: 'string.double', next: '@stringDouble' }]\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }],\n        ],\n        stringDouble: [\n            [/[^\"]+/, 'string.double'],\n            [/\"\"/, 'string.double'],\n            [/\"/, { token: 'string.double', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/`/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        quotedIdentifier: [\n            [/[^`]+/, 'identifier'],\n            [/``/, 'identifier'],\n            [/`/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        scopes: [\n        // NOT SUPPORTED\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.objective-c',\n    keywords: [\n        '#import',\n        '#include',\n        '#define',\n        '#else',\n        '#endif',\n        '#if',\n        '#ifdef',\n        '#ifndef',\n        '#ident',\n        '#undef',\n        '@class',\n        '@defs',\n        '@dynamic',\n        '@encode',\n        '@end',\n        '@implementation',\n        '@interface',\n        '@package',\n        '@private',\n        '@protected',\n        '@property',\n        '@protocol',\n        '@public',\n        '@selector',\n        '@synthesize',\n        '__declspec',\n        'assign',\n        'auto',\n        'BOOL',\n        'break',\n        'bycopy',\n        'byref',\n        'case',\n        'char',\n        'Class',\n        'const',\n        'copy',\n        'continue',\n        'default',\n        'do',\n        'double',\n        'else',\n        'enum',\n        'extern',\n        'FALSE',\n        'false',\n        'float',\n        'for',\n        'goto',\n        'if',\n        'in',\n        'int',\n        'id',\n        'inout',\n        'IMP',\n        'long',\n        'nil',\n        'nonatomic',\n        'NULL',\n        'oneway',\n        'out',\n        'private',\n        'public',\n        'protected',\n        'readwrite',\n        'readonly',\n        'register',\n        'return',\n        'SEL',\n        'self',\n        'short',\n        'signed',\n        'sizeof',\n        'static',\n        'struct',\n        'super',\n        'switch',\n        'typedef',\n        'TRUE',\n        'true',\n        'union',\n        'unsigned',\n        'volatile',\n        'void',\n        'while',\n    ],\n    decpart: /\\d(_?\\d)*/,\n    decimal: /0|@decpart/,\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            [/[,:;]/, 'delimiter'],\n            [/[{}\\[\\]()<>]/, '@brackets'],\n            [/[a-zA-Z@#]\\w*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,]|and\\\\b|or\\\\b|not\\\\b]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment',],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*(_?[0-9a-fA-F])*/, 'number.hex'],\n            [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)[fF]*/, {\n                    cases: {\n                        '(\\\\d)*': 'number',\n                        '$0': 'number.float'\n                    }\n                }]\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string.escape', '@popall'],\n            [/'/, 'string.escape', '@stringBody'],\n            [/\"$/, 'string.escape', '@popall'],\n            [/\"/, 'string.escape', '@dblStringBody']\n        ],\n        stringBody: [\n            [/\\\\./, 'string'],\n            [/'/, 'string.escape', '@popall'],\n            [/.(?=.*')/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/\\\\./, 'string'],\n            [/\"/, 'string.escape', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.perl',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n    ],\n    // https://learn.perl.org/docs/keywords.html\n    // Perl syntax\n    keywords: [\n        '__DATA__',\n        'else',\n        'lock',\n        'qw',\n        '__END__',\n        'elsif',\n        'lt',\n        'qx',\n        '__FILE__',\n        'eq',\n        'm',\n        's',\n        '__LINE__',\n        'exp',\n        'ne',\n        'sub',\n        '__PACKAGE__',\n        'for',\n        'no',\n        'tr',\n        'and',\n        'foreach',\n        'or',\n        'unless',\n        'cmp',\n        'ge',\n        'package',\n        'until',\n        'continue',\n        'gt',\n        'q',\n        'while',\n        'CORE',\n        'if',\n        'qq',\n        'xor',\n        'do',\n        'le',\n        'qr',\n        'y',\n        '__DIE__',\n        '__WARN__',\n    ],\n    // Perl functions\n    builtinFunctions: [\n        '-A',\n        'END',\n        'length',\n        'setpgrp',\n        '-B',\n        'endgrent',\n        'link',\n        'setpriority',\n        '-b',\n        'endhostent',\n        'listen',\n        'setprotoent',\n        '-C',\n        'endnetent',\n        'local',\n        'setpwent',\n        '-c',\n        'endprotoent',\n        'localtime',\n        'setservent',\n        '-d',\n        'endpwent',\n        'log',\n        'setsockopt',\n        '-e',\n        'endservent',\n        'lstat',\n        'shift',\n        '-f',\n        'eof',\n        'map',\n        'shmctl',\n        '-g',\n        'eval',\n        'mkdir',\n        'shmget',\n        '-k',\n        'exec',\n        'msgctl',\n        'shmread',\n        '-l',\n        'exists',\n        'msgget',\n        'shmwrite',\n        '-M',\n        'exit',\n        'msgrcv',\n        'shutdown',\n        '-O',\n        'fcntl',\n        'msgsnd',\n        'sin',\n        '-o',\n        'fileno',\n        'my',\n        'sleep',\n        '-p',\n        'flock',\n        'next',\n        'socket',\n        '-r',\n        'fork',\n        'not',\n        'socketpair',\n        '-R',\n        'format',\n        'oct',\n        'sort',\n        '-S',\n        'formline',\n        'open',\n        'splice',\n        '-s',\n        'getc',\n        'opendir',\n        'split',\n        '-T',\n        'getgrent',\n        'ord',\n        'sprintf',\n        '-t',\n        'getgrgid',\n        'our',\n        'sqrt',\n        '-u',\n        'getgrnam',\n        'pack',\n        'srand',\n        '-w',\n        'gethostbyaddr',\n        'pipe',\n        'stat',\n        '-W',\n        'gethostbyname',\n        'pop',\n        'state',\n        '-X',\n        'gethostent',\n        'pos',\n        'study',\n        '-x',\n        'getlogin',\n        'print',\n        'substr',\n        '-z',\n        'getnetbyaddr',\n        'printf',\n        'symlink',\n        'abs',\n        'getnetbyname',\n        'prototype',\n        'syscall',\n        'accept',\n        'getnetent',\n        'push',\n        'sysopen',\n        'alarm',\n        'getpeername',\n        'quotemeta',\n        'sysread',\n        'atan2',\n        'getpgrp',\n        'rand',\n        'sysseek',\n        'AUTOLOAD',\n        'getppid',\n        'read',\n        'system',\n        'BEGIN',\n        'getpriority',\n        'readdir',\n        'syswrite',\n        'bind',\n        'getprotobyname',\n        'readline',\n        'tell',\n        'binmode',\n        'getprotobynumber',\n        'readlink',\n        'telldir',\n        'bless',\n        'getprotoent',\n        'readpipe',\n        'tie',\n        'break',\n        'getpwent',\n        'recv',\n        'tied',\n        'caller',\n        'getpwnam',\n        'redo',\n        'time',\n        'chdir',\n        'getpwuid',\n        'ref',\n        'times',\n        'CHECK',\n        'getservbyname',\n        'rename',\n        'truncate',\n        'chmod',\n        'getservbyport',\n        'require',\n        'uc',\n        'chomp',\n        'getservent',\n        'reset',\n        'ucfirst',\n        'chop',\n        'getsockname',\n        'return',\n        'umask',\n        'chown',\n        'getsockopt',\n        'reverse',\n        'undef',\n        'chr',\n        'glob',\n        'rewinddir',\n        'UNITCHECK',\n        'chroot',\n        'gmtime',\n        'rindex',\n        'unlink',\n        'close',\n        'goto',\n        'rmdir',\n        'unpack',\n        'closedir',\n        'grep',\n        'say',\n        'unshift',\n        'connect',\n        'hex',\n        'scalar',\n        'untie',\n        'cos',\n        'index',\n        'seek',\n        'use',\n        'crypt',\n        'INIT',\n        'seekdir',\n        'utime',\n        'dbmclose',\n        'int',\n        'select',\n        'values',\n        'dbmopen',\n        'ioctl',\n        'semctl',\n        'vec',\n        'defined',\n        'join',\n        'semget',\n        'wait',\n        'delete',\n        'keys',\n        'semop',\n        'waitpid',\n        'DESTROY',\n        'kill',\n        'send',\n        'wantarray',\n        'die',\n        'last',\n        'setgrent',\n        'warn',\n        'dump',\n        'lc',\n        'sethostent',\n        'write',\n        'each',\n        'lcfirst',\n        'setnetent',\n    ],\n    // File handlers\n    builtinFileHandlers: ['ARGV', 'STDERR', 'STDOUT', 'ARGVOUT', 'STDIN', 'ENV'],\n    // Perl variables\n    builtinVariables: [\n        '$!',\n        '$^RE_TRIE_MAXBUF',\n        '$LAST_REGEXP_CODE_RESULT',\n        '$\"',\n        '$^S',\n        '$LIST_SEPARATOR',\n        '$#',\n        '$^T',\n        '$MATCH',\n        '$$',\n        '$^TAINT',\n        '$MULTILINE_MATCHING',\n        '$%',\n        '$^UNICODE',\n        '$NR',\n        '$&',\n        '$^UTF8LOCALE',\n        '$OFMT',\n        \"$'\",\n        '$^V',\n        '$OFS',\n        '$(',\n        '$^W',\n        '$ORS',\n        '$)',\n        '$^WARNING_BITS',\n        '$OS_ERROR',\n        '$*',\n        '$^WIDE_SYSTEM_CALLS',\n        '$OSNAME',\n        '$+',\n        '$^X',\n        '$OUTPUT_AUTO_FLUSH',\n        '$,',\n        '$_',\n        '$OUTPUT_FIELD_SEPARATOR',\n        '$-',\n        '$`',\n        '$OUTPUT_RECORD_SEPARATOR',\n        '$.',\n        '$a',\n        '$PERL_VERSION',\n        '$/',\n        '$ACCUMULATOR',\n        '$PERLDB',\n        '$0',\n        '$ARG',\n        '$PID',\n        '$:',\n        '$ARGV',\n        '$POSTMATCH',\n        '$;',\n        '$b',\n        '$PREMATCH',\n        '$<',\n        '$BASETIME',\n        '$PROCESS_ID',\n        '$=',\n        '$CHILD_ERROR',\n        '$PROGRAM_NAME',\n        '$>',\n        '$COMPILING',\n        '$REAL_GROUP_ID',\n        '$?',\n        '$DEBUGGING',\n        '$REAL_USER_ID',\n        '$@',\n        '$EFFECTIVE_GROUP_ID',\n        '$RS',\n        '$[',\n        '$EFFECTIVE_USER_ID',\n        '$SUBSCRIPT_SEPARATOR',\n        '$\\\\',\n        '$EGID',\n        '$SUBSEP',\n        '$]',\n        '$ERRNO',\n        '$SYSTEM_FD_MAX',\n        '$^',\n        '$EUID',\n        '$UID',\n        '$^A',\n        '$EVAL_ERROR',\n        '$WARNING',\n        '$^C',\n        '$EXCEPTIONS_BEING_CAUGHT',\n        '$|',\n        '$^CHILD_ERROR_NATIVE',\n        '$EXECUTABLE_NAME',\n        '$~',\n        '$^D',\n        '$EXTENDED_OS_ERROR',\n        '%!',\n        '$^E',\n        '$FORMAT_FORMFEED',\n        '%^H',\n        '$^ENCODING',\n        '$FORMAT_LINE_BREAK_CHARACTERS',\n        '%ENV',\n        '$^F',\n        '$FORMAT_LINES_LEFT',\n        '%INC',\n        '$^H',\n        '$FORMAT_LINES_PER_PAGE',\n        '%OVERLOAD',\n        '$^I',\n        '$FORMAT_NAME',\n        '%SIG',\n        '$^L',\n        '$FORMAT_PAGE_NUMBER',\n        '@+',\n        '$^M',\n        '$FORMAT_TOP_NAME',\n        '@-',\n        '$^N',\n        '$GID',\n        '@_',\n        '$^O',\n        '$INPLACE_EDIT',\n        '@ARGV',\n        '$^OPEN',\n        '$INPUT_LINE_NUMBER',\n        '@INC',\n        '$^P',\n        '$INPUT_RECORD_SEPARATOR',\n        '@LAST_MATCH_START',\n        '$^R',\n        '$LAST_MATCH_END',\n        '$^RE_DEBUG_FLAGS',\n        '$LAST_PAREN_MATCH',\n    ],\n    // operators\n    symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            [\n                /[a-zA-Z\\-_][\\w\\-_]+/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@builtinFunctions': 'type.identifier',\n                        '@builtinFileHandlers': 'variable.predefined',\n                        '@default': '',\n                    },\n                },\n            ],\n            // Perl variables\n            [\n                /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\n                {\n                    cases: {\n                        '@builtinVariables': 'variable.predefined',\n                        '@default': 'variable',\n                    },\n                },\n            ],\n            { include: '@strings' },\n            { include: '@dblStrings' },\n            // Perl Doc\n            { include: '@perldoc' },\n            // Here Doc\n            { include: '@heredoc' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            // RegExp\n            [\n                /[goseximacplud]*[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/,\n                'regexp',\n            ],\n            [/@symbols/, 'operators'],\n            { include: '@numbers' },\n            [/[,;]/, 'delimiter'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#!.*$)/, 'metatag'],\n            [/(^#.*$)/, 'comment'],\n        ],\n        numbers: [\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n        ],\n        // Single quote string\n        strings: [[/'/, 'string', '@stringBody']],\n        stringBody: [\n            [/'/, 'string', '@popall'],\n            [/\\\\'/, 'string.escape'],\n            [/./, 'string'],\n        ],\n        // Double quote string\n        dblStrings: [[/\"/, 'string', '@dblStringBody']],\n        dblStringBody: [\n            [/\"/, 'string', '@popall'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            { include: '@variables' },\n            [/./, 'string'],\n        ],\n        heredoc: [\n            [\n                /<<\\s*['\"`]?([\\w\\-]+)['\"`]?/,\n                { token: 'string.heredoc.delimiter', next: '@heredocBody.$1' },\n            ],\n        ],\n        heredocBody: [\n            [\n                /^([\\w\\-]+)$/,\n                {\n                    cases: {\n                        '$1==$S2': [{ token: 'string.heredoc.delimiter', next: '@popall' }],\n                        '@default': 'string.heredoc',\n                    },\n                },\n            ],\n            [/./, 'string.heredoc'],\n        ],\n        perldoc: [[/^=\\w/, 'comment.doc', '@perldocBody']],\n        perldocBody: [\n            [/^=cut\\b/, 'type.identifier', '@popall'],\n            [/./, 'comment.doc'],\n        ],\n        variables: [\n            [/\\$\\w+/, 'variable'],\n            [/@\\w+/, 'variable'],\n            [/%\\w+/, 'variable'],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        \"A\", \"ABORT\", \"ABS\", \"ABSENT\", \"ABSOLUTE\", \"ACCESS\", \"ACCORDING\", \"ACTION\", \"ADA\", \"ADD\", \"ADMIN\", \"AFTER\", \"AGGREGATE\", \"ALL\",\n        \"ALLOCATE\", \"ALSO\", \"ALTER\", \"ALWAYS\", \"ANALYSE\", \"ANALYZE\", \"AND\", \"ANY\", \"ARE\", \"ARRAY\", \"ARRAY_AGG\", \"ARRAY_MAX_CARDINALITY\",\n        \"AS\", \"ASC\", \"ASENSITIVE\", \"ASSERTION\", \"ASSIGNMENT\", \"ASYMMETRIC\", \"AT\", \"ATOMIC\", \"ATTRIBUTE\", \"ATTRIBUTES\", \"AUTHORIZATION\",\n        \"AVG\", \"BACKWARD\", \"BASE64\", \"BEFORE\", \"BEGIN\", \"BEGIN_FRAME\", \"BEGIN_PARTITION\", \"BERNOULLI\", \"BETWEEN\", \"BIGINT\", \"BINARY\",\n        \"BIT\", \"BIT_LENGTH\", \"BLOB\", \"BLOCKED\", \"BOM\", \"BOOLEAN\", \"BOTH\", \"BREADTH\", \"BY\", \"C\", \"CACHE\", \"CALL\", \"CALLED\", \"CARDINALITY\",\n        \"CASCADE\", \"CASCADED\", \"CASE\", \"CAST\", \"CATALOG\", \"CATALOG_NAME\", \"CEIL\", \"CEILING\", \"CHAIN\", \"CHAR\", \"CHARACTER\",\n        \"CHARACTERISTICS\", \"CHARACTERS\", \"CHARACTER_LENGTH\", \"CHARACTER_SET_CATALOG\", \"CHARACTER_SET_NAME\", \"CHARACTER_SET_SCHEMA\",\n        \"CHAR_LENGTH\", \"CHECK\", \"CHECKPOINT\", \"CLASS\", \"CLASS_ORIGIN\", \"CLOB\", \"CLOSE\", \"CLUSTER\", \"COALESCE\", \"COBOL\", \"COLLATE\",\n        \"COLLATION\", \"COLLATION_CATALOG\", \"COLLATION_NAME\", \"COLLATION_SCHEMA\", \"COLLECT\", \"COLUMN\", \"COLUMNS\", \"COLUMN_NAME\",\n        \"COMMAND_FUNCTION\", \"COMMAND_FUNCTION_CODE\", \"COMMENT\", \"COMMENTS\", \"COMMIT\", \"COMMITTED\", \"CONCURRENTLY\", \"CONDITION\",\n        \"CONDITION_NUMBER\", \"CONFIGURATION\", \"CONFLICT\", \"CONNECT\", \"CONNECTION\", \"CONNECTION_NAME\", \"CONSTRAINT\", \"CONSTRAINTS\",\n        \"CONSTRAINT_CATALOG\", \"CONSTRAINT_NAME\", \"CONSTRAINT_SCHEMA\", \"CONSTRUCTOR\", \"CONTAINS\", \"CONTENT\", \"CONTINUE\", \"CONTROL\",\n        \"CONVERSION\", \"CONVERT\", \"COPY\", \"CORR\", \"CORRESPONDING\", \"COST\", \"COUNT\", \"COVAR_POP\", \"COVAR_SAMP\", \"CREATE\", \"CROSS\", \"CSV\",\n        \"CUBE\", \"CUME_DIST\", \"CURRENT\", \"CURRENT_CATALOG\", \"CURRENT_DATE\", \"CURRENT_DEFAULT_TRANSFORM_GROUP\", \"CURRENT_PATH\",\n        \"CURRENT_ROLE\", \"CURRENT_ROW\", \"CURRENT_SCHEMA\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_TRANSFORM_GROUP_FOR_TYPE\",\n        \"CURRENT_USER\", \"CURSOR\", \"CURSOR_NAME\", \"CYCLE\", \"DATA\", \"DATABASE\", \"DATALINK\", \"DATE\", \"DATETIME_INTERVAL_CODE\",\n        \"DATETIME_INTERVAL_PRECISION\", \"DAY\", \"DB\", \"DEALLOCATE\", \"DEC\", \"DECIMAL\", \"DECLARE\", \"DEFAULT\", \"DEFAULTS\", \"DEFERRABLE\",\n        \"DEFERRED\", \"DEFINED\", \"DEFINER\", \"DEGREE\", \"DELETE\", \"DELIMITER\", \"DELIMITERS\", \"DENSE_RANK\", \"DEPENDS\", \"DEPTH\", \"DEREF\",\n        \"DERIVED\", \"DESC\", \"DESCRIBE\", \"DESCRIPTOR\", \"DETERMINISTIC\", \"DIAGNOSTICS\", \"DICTIONARY\", \"DISABLE\", \"DISCARD\", \"DISCONNECT\",\n        \"DISPATCH\", \"DISTINCT\", \"DLNEWCOPY\", \"DLPREVIOUSCOPY\", \"DLURLCOMPLETE\", \"DLURLCOMPLETEONLY\", \"DLURLCOMPLETEWRITE\", \"DLURLPATH\",\n        \"DLURLPATHONLY\", \"DLURLPATHWRITE\", \"DLURLSCHEME\", \"DLURLSERVER\", \"DLVALUE\", \"DO\", \"DOCUMENT\", \"DOMAIN\", \"DOUBLE\", \"DROP\",\n        \"DYNAMIC\", \"DYNAMIC_FUNCTION\", \"DYNAMIC_FUNCTION_CODE\", \"EACH\", \"ELEMENT\", \"ELSE\", \"EMPTY\", \"ENABLE\", \"ENCODING\", \"ENCRYPTED\",\n        \"END\", \"END-EXEC\", \"END_FRAME\", \"END_PARTITION\", \"ENFORCED\", \"ENUM\", \"EQUALS\", \"ESCAPE\", \"EVENT\", \"EVERY\", \"EXCEPT\", \"EXCEPTION\",\n        \"EXCLUDE\", \"EXCLUDING\", \"EXCLUSIVE\", \"EXEC\", \"EXECUTE\", \"EXISTS\", \"EXP\", \"EXPLAIN\", \"EXPRESSION\", \"EXTENSION\", \"EXTERNAL\",\n        \"EXTRACT\", \"FALSE\", \"FAMILY\", \"FETCH\", \"FILE\", \"FILTER\", \"FINAL\", \"FIRST\", \"FIRST_VALUE\", \"FLAG\", \"FLOAT\", \"FLOOR\", \"FOLLOWING\",\n        \"FOR\", \"FORCE\", \"FOREIGN\", \"FORTRAN\", \"FORWARD\", \"FOUND\", \"FRAME_ROW\", \"FREE\", \"FREEZE\", \"FROM\", \"FS\", \"FULL\", \"FUNCTION\",\n        \"FUNCTIONS\", \"FUSION\", \"G\", \"GENERAL\", \"GENERATED\", \"GET\", \"GLOBAL\", \"GO\", \"GOTO\", \"GRANT\", \"GRANTED\", \"GREATEST\", \"GROUP\",\n        \"GROUPING\", \"GROUPS\", \"HANDLER\", \"HAVING\", \"HEADER\", \"HEX\", \"HIERARCHY\", \"HOLD\", \"HOUR\", \"ID\", \"IDENTITY\", \"IF\", \"IGNORE\",\n        \"ILIKE\", \"IMMEDIATE\", \"IMMEDIATELY\", \"IMMUTABLE\", \"IMPLEMENTATION\", \"IMPLICIT\", \"IMPORT\", \"IN\", \"INCLUDING\", \"INCREMENT\",\n        \"INDENT\", \"INDEX\", \"INDEXES\", \"INDICATOR\", \"INHERIT\", \"INHERITS\", \"INITIALLY\", \"INLINE\", \"INNER\", \"INOUT\", \"INPUT\",\n        \"INSENSITIVE\", \"INSERT\", \"INSTANCE\", \"INSTANTIABLE\", \"INSTEAD\", \"INT\", \"INTEGER\", \"INTEGRITY\", \"INTERSECT\", \"INTERSECTION\",\n        \"INTERVAL\", \"INTO\", \"INVOKER\", \"IS\", \"ISNULL\", \"ISOLATION\", \"JOIN\", \"K\", \"KEY\", \"KEY_MEMBER\", \"KEY_TYPE\", \"LABEL\", \"LAG\",\n        \"LANGUAGE\", \"LARGE\", \"LAST\", \"LAST_VALUE\", \"LATERAL\", \"LEAD\", \"LEADING\", \"LEAKPROOF\", \"LEAST\", \"LEFT\", \"LENGTH\", \"LEVEL\",\n        \"LIBRARY\", \"LIKE\", \"LIKE_REGEX\", \"LIMIT\", \"LINK\", \"LISTEN\", \"LN\", \"LOAD\", \"LOCAL\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"LOCATION\",\n        \"LOCATOR\", \"LOCK\", \"LOCKED\", \"LOGGED\", \"LOWER\", \"M\", \"MAP\", \"MAPPING\", \"MATCH\", \"MATCHED\", \"MATERIALIZED\", \"MAX\", \"MAXVALUE\",\n        \"MAX_CARDINALITY\", \"MEMBER\", \"MERGE\", \"MESSAGE_LENGTH\", \"MESSAGE_OCTET_LENGTH\", \"MESSAGE_TEXT\", \"METHOD\", \"MIN\", \"MINUTE\",\n        \"MINVALUE\", \"MOD\", \"MODE\", \"MODIFIES\", \"MODULE\", \"MONTH\", \"MORE\", \"MOVE\", \"MULTISET\", \"MUMPS\", \"NAME\", \"NAMES\", \"NAMESPACE\",\n        \"NATIONAL\", \"NATURAL\", \"NCHAR\", \"NCLOB\", \"NESTING\", \"NEW\", \"NEXT\", \"NFC\", \"NFD\", \"NFKC\", \"NFKD\", \"NIL\", \"NO\", \"NONE\",\n        \"NORMALIZE\", \"NORMALIZED\", \"NOT\", \"NOTHING\", \"NOTIFY\", \"NOTNULL\", \"NOWAIT\", \"NTH_VALUE\", \"NTILE\", \"NULL\", \"NULLABLE\", \"NULLIF\",\n        \"NULLS\", \"NUMBER\", \"NUMERIC\", \"OBJECT\", \"OCCURRENCES_REGEX\", \"OCTETS\", \"OCTET_LENGTH\", \"OF\", \"OFF\", \"OFFSET\", \"OIDS\", \"OLD\",\n        \"ON\", \"ONLY\", \"OPEN\", \"OPERATOR\", \"OPTION\", \"OPTIONS\", \"OR\", \"ORDER\", \"ORDERING\", \"ORDINALITY\", \"OTHERS\", \"OUT\", \"OUTER\",\n        \"OUTPUT\", \"OVER\", \"OVERLAPS\", \"OVERLAY\", \"OVERRIDING\", \"OWNED\", \"OWNER\", \"P\", \"PAD\", \"PARALLEL\", \"PARAMETER\", \"PARAMETER_MODE\",\n        \"PARAMETER_NAME\", \"PARAMETER_ORDINAL_POSITION\", \"PARAMETER_SPECIFIC_CATALOG\", \"PARAMETER_SPECIFIC_NAME\",\n        \"PARAMETER_SPECIFIC_SCHEMA\", \"PARSER\", \"PARTIAL\", \"PARTITION\", \"PASCAL\", \"PASSING\", \"PASSTHROUGH\", \"PASSWORD\", \"PATH\",\n        \"PERCENT\", \"PERCENTILE_CONT\", \"PERCENTILE_DISC\", \"PERCENT_RANK\", \"PERIOD\", \"PERMISSION\", \"PLACING\", \"PLANS\", \"PLI\", \"POLICY\",\n        \"PORTION\", \"POSITION\", \"POSITION_REGEX\", \"POWER\", \"PRECEDES\", \"PRECEDING\", \"PRECISION\", \"PREPARE\", \"PREPARED\", \"PRESERVE\",\n        \"PRIMARY\", \"PRIOR\", \"PRIVILEGES\", \"PROCEDURAL\", \"PROCEDURE\", \"PROGRAM\", \"PUBLIC\", \"QUOTE\", \"RANGE\", \"RANK\", \"READ\", \"READS\",\n        \"REAL\", \"REASSIGN\", \"RECHECK\", \"RECOVERY\", \"RECURSIVE\", \"REF\", \"REFERENCES\", \"REFERENCING\", \"REFRESH\", \"REGR_AVGX\", \"REGR_AVGY\",\n        \"REGR_COUNT\", \"REGR_INTERCEPT\", \"REGR_R2\", \"REGR_SLOPE\", \"REGR_SXX\", \"REGR_SXY\", \"REGR_SYY\", \"REINDEX\", \"RELATIVE\", \"RELEASE\",\n        \"RENAME\", \"REPEATABLE\", \"REPLACE\", \"REPLICA\", \"REQUIRING\", \"RESET\", \"RESPECT\", \"RESTART\", \"RESTORE\", \"RESTRICT\", \"RESULT\",\n        \"RETURN\", \"RETURNED_CARDINALITY\", \"RETURNED_LENGTH\", \"RETURNED_OCTET_LENGTH\", \"RETURNED_SQLSTATE\", \"RETURNING\", \"RETURNS\",\n        \"REVOKE\", \"RIGHT\", \"ROLE\", \"ROLLBACK\", \"ROLLUP\", \"ROUTINE\", \"ROUTINE_CATALOG\", \"ROUTINE_NAME\", \"ROUTINE_SCHEMA\", \"ROW\", \"ROWS\",\n        \"ROW_COUNT\", \"ROW_NUMBER\", \"RULE\", \"SAVEPOINT\", \"SCALE\", \"SCHEMA\", \"SCHEMA_NAME\", \"SCOPE\", \"SCOPE_CATALOG\", \"SCOPE_NAME\",\n        \"SCOPE_SCHEMA\", \"SCROLL\", \"SEARCH\", \"SECOND\", \"SECTION\", \"SECURITY\", \"SELECT\", \"SELECTIVE\", \"SELF\", \"SENSITIVE\", \"SEQUENCE\",\n        \"SEQUENCES\", \"SERIALIZABLE\", \"SERVER\", \"SERVER_NAME\", \"SESSION\", \"SESSION_USER\", \"SET\", \"SETOF\", \"SETS\", \"SHARE\", \"SHOW\",\n        \"SIMILAR\", \"SIMPLE\", \"SIZE\", \"SKIP\", \"SMALLINT\", \"SNAPSHOT\", \"SOME\", \"SOURCE\", \"SPACE\", \"SPECIFIC\", \"SPECIFICTYPE\",\n        \"SPECIFIC_NAME\", \"SQL\", \"SQLCODE\", \"SQLERROR\", \"SQLEXCEPTION\", \"SQLSTATE\", \"SQLWARNING\", \"SQRT\", \"STABLE\", \"STANDALONE\",\n        \"START\", \"STATE\", \"STATEMENT\", \"STATIC\", \"STATISTICS\", \"STDDEV_POP\", \"STDDEV_SAMP\", \"STDIN\", \"STDOUT\", \"STORAGE\", \"STRICT\",\n        \"STRIP\", \"STRUCTURE\", \"STYLE\", \"SUBCLASS_ORIGIN\", \"SUBMULTISET\", \"SUBSTRING\", \"SUBSTRING_REGEX\", \"SUCCEEDS\", \"SUM\", \"SYMMETRIC\",\n        \"SYSID\", \"SYSTEM\", \"SYSTEM_TIME\", \"SYSTEM_USER\", \"T\", \"TABLE\", \"TABLES\", \"TABLESAMPLE\", \"TABLESPACE\", \"TABLE_NAME\", \"TEMP\",\n        \"TEMPLATE\", \"TEMPORARY\", \"TEXT\", \"THEN\", \"TIES\", \"TIME\", \"TIMESTAMP\", \"TIMEZONE_HOUR\", \"TIMEZONE_MINUTE\", \"TO\", \"TOKEN\",\n        \"TOP_LEVEL_COUNT\", \"TRAILING\", \"TRANSACTION\", \"TRANSACTIONS_COMMITTED\", \"TRANSACTIONS_ROLLED_BACK\", \"TRANSACTION_ACTIVE\",\n        \"TRANSFORM\", \"TRANSFORMS\", \"TRANSLATE\", \"TRANSLATE_REGEX\", \"TRANSLATION\", \"TREAT\", \"TRIGGER\", \"TRIGGER_CATALOG\", \"TRIGGER_NAME\",\n        \"TRIGGER_SCHEMA\", \"TRIM\", \"TRIM_ARRAY\", \"TRUE\", \"TRUNCATE\", \"TRUSTED\", \"TYPE\", \"TYPES\", \"UESCAPE\", \"UNBOUNDED\", \"UNCOMMITTED\",\n        \"UNDER\", \"UNENCRYPTED\", \"UNION\", \"UNIQUE\", \"UNKNOWN\", \"UNLINK\", \"UNLISTEN\", \"UNLOGGED\", \"UNNAMED\", \"UNNEST\", \"UNTIL\", \"UNTYPED\",\n        \"UPDATE\", \"UPPER\", \"URI\", \"USAGE\", \"USER\", \"USER_DEFINED_TYPE_CATALOG\", \"USER_DEFINED_TYPE_CODE\", \"USER_DEFINED_TYPE_NAME\",\n        \"USER_DEFINED_TYPE_SCHEMA\", \"USING\", \"VACUUM\", \"VALID\", \"VALIDATE\", \"VALIDATOR\", \"VALUE\", \"VALUES\", \"VALUE_OF\", \"VARBINARY\",\n        \"VARCHAR\", \"VARIADIC\", \"VARYING\", \"VAR_POP\", \"VAR_SAMP\", \"VERBOSE\", \"VERSION\", \"VERSIONING\", \"VIEW\", \"VIEWS\", \"VOLATILE\",\n        \"WHEN\", \"WHENEVER\", \"WHERE\", \"WHITESPACE\", \"WIDTH_BUCKET\", \"WINDOW\", \"WITH\", \"WITHIN\", \"WITHOUT\", \"WORK\", \"WRAPPER\", \"WRITE\",\n        \"XML\", \"XMLAGG\", \"XMLATTRIBUTES\", \"XMLBINARY\", \"XMLCAST\", \"XMLCOMMENT\", \"XMLCONCAT\", \"XMLDECLARATION\", \"XMLDOCUMENT\",\n        \"XMLELEMENT\", \"XMLEXISTS\", \"XMLFOREST\", \"XMLITERATE\", \"XMLNAMESPACES\", \"XMLPARSE\", \"XMLPI\", \"XMLQUERY\", \"XMLROOT\", \"XMLSCHEMA\",\n        \"XMLSERIALIZE\", \"XMLTABLE\", \"XMLTEXT\", \"XMLVALIDATE\", \"YEAR\", \"YES\", \"ZONE\"\n    ],\n    operators: [\n        \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\n    ],\n    builtinFunctions: [\n        \"abbrev\", \"abs\", \"acos\", \"acosd\", \"age\", \"any\", \"area\", \"array_agg\", \"array_append\", \"array_cat\", \"array_dims\", \"array_fill\",\n        \"array_length\", \"array_lower\", \"array_ndims\", \"array_position\", \"array_positions\", \"array_prepend\", \"array_remove\", \"array_replace\",\n        \"array_to_json\", \"array_to_string\", \"array_to_tsvector\", \"array_upper\", \"ascii\", \"asin\", \"asind\", \"atan\", \"atan2\", \"atan2d\", \"atand\",\n        \"avg\", \"bit\", \"bit_and\", \"bit_length\", \"bit_or\", \"bool_and\", \"bool_or\", \"bound_box\", \"box\", \"brin_summarize_new_values\", \"broadcast\",\n        \"btrim\", \"cardinality\", \"cbrt\", \"ceil\", \"ceiling\", \"center\", \"char_length\", \"character_length\", \"chr\", \"circle\", \"clock_timestamp\",\n        \"coalesce\", \"col_description\", \"concat\", \"concat_ws\", \"convert\", \"convert_from\", \"convert_to\", \"corr\", \"cos\", \"cosd\", \"cot\", \"cotd\",\n        \"count\", \"covar_pop\", \"covar_samp\", \"cume_dist\", \"current_catalog\", \"current_database\", \"current_date\", \"current_query\", \"current_role\",\n        \"current_schema\", \"current_schemas\", \"current_setting\", \"current_time\", \"current_timestamp\", \"current_user\", \"currval\", \"cursor_to_xml\",\n        \"date_part\", \"date_trunc\", \"decode\", \"degrees\", \"dense_rank\", \"diameter\", \"div\", \"encode\", \"enum_first\", \"enum_last\", \"enum_range\", \"every\",\n        \"exp\", \"extract\", \"family\", \"first_value\", \"floor\", \"format\", \"format_type\", \"generate_series\", \"generate_subscripts\", \"get_bit\", \"get_byte\",\n        \"get_current_ts_config\", \"gin_clean_pending_list\", \"greatest\", \"grouping\", \"has_any_column_privilege\", \"has_column_privilege\",\n        \"has_database_privilege\", \"has_foreign_data_wrapper_privilege\", \"has_function_privilege\", \"has_language_privilege\", \"has_schema_privilege\",\n        \"has_sequence_privilege\", \"has_server_privilege\", \"has_table_privilege\", \"has_tablespace_privilege\", \"has_type_privilege\", \"height\", \"host\",\n        \"hostmask\", \"inet_client_addr\", \"inet_client_port\", \"inet_merge\", \"inet_same_family\", \"inet_server_addr\", \"inet_server_port\", \"initcap\",\n        \"isclosed\", \"isempty\", \"isfinite\", \"isopen\", \"json_agg\", \"json_object\", \"json_object_agg\", \"json_populate_record\", \"json_populate_recordset\",\n        \"json_to_record\", \"json_to_recordset\", \"jsonb_agg\", \"jsonb_object_agg\", \"justify_days\", \"justify_hours\", \"justify_interval\", \"lag\",\n        \"last_value\", \"lastval\", \"lead\", \"least\", \"left\", \"length\", \"line\", \"ln\", \"localtime\", \"localtimestamp\", \"log\", \"lower\", \"lower_inc\",\n        \"lower_inf\", \"lpad\", \"lseg\", \"ltrim\", \"make_date\", \"make_interval\", \"make_time\", \"make_timestamp\", \"make_timestamptz\", \"masklen\", \"max\",\n        \"md5\", \"min\", \"mod\", \"mode\", \"netmask\", \"network\", \"nextval\", \"now\", \"npoints\", \"nth_value\", \"ntile\", \"nullif\", \"num_nonnulls\", \"num_nulls\",\n        \"numnode\", \"obj_description\", \"octet_length\", \"overlay\", \"parse_ident\", \"path\", \"pclose\", \"percent_rank\", \"percentile_cont\", \"percentile_disc\",\n        \"pg_advisory_lock\", \"pg_advisory_lock_shared\", \"pg_advisory_unlock\", \"pg_advisory_unlock_all\", \"pg_advisory_unlock_shared\", \"pg_advisory_xact_lock\",\n        \"pg_advisory_xact_lock_shared\", \"pg_backend_pid\", \"pg_backup_start_time\", \"pg_blocking_pids\", \"pg_cancel_backend\", \"pg_client_encoding\",\n        \"pg_collation_is_visible\", \"pg_column_size\", \"pg_conf_load_time\", \"pg_control_checkpoint\", \"pg_control_init\", \"pg_control_recovery\",\n        \"pg_control_system\", \"pg_conversion_is_visible\", \"pg_create_logical_replication_slot\", \"pg_create_physical_replication_slot\", \"pg_create_restore_point\",\n        \"pg_current_xlog_flush_location\", \"pg_current_xlog_insert_location\", \"pg_current_xlog_location\", \"pg_database_size\", \"pg_describe_object\",\n        \"pg_drop_replication_slot\", \"pg_export_snapshot\", \"pg_filenode_relation\", \"pg_function_is_visible\", \"pg_get_constraintdef\", \"pg_get_expr\",\n        \"pg_get_function_arguments\", \"pg_get_function_identity_arguments\", \"pg_get_function_result\", \"pg_get_functiondef\", \"pg_get_indexdef\", \"pg_get_keywords\",\n        \"pg_get_object_address\", \"pg_get_owned_sequence\", \"pg_get_ruledef\", \"pg_get_serial_sequence\", \"pg_get_triggerdef\", \"pg_get_userbyid\", \"pg_get_viewdef\",\n        \"pg_has_role\", \"pg_identify_object\", \"pg_identify_object_as_address\", \"pg_index_column_has_property\", \"pg_index_has_property\", \"pg_indexam_has_property\",\n        \"pg_indexes_size\", \"pg_is_in_backup\", \"pg_is_in_recovery\", \"pg_is_other_temp_schema\", \"pg_is_xlog_replay_paused\", \"pg_last_committed_xact\",\n        \"pg_last_xact_replay_timestamp\", \"pg_last_xlog_receive_location\", \"pg_last_xlog_replay_location\", \"pg_listening_channels\", \"pg_logical_emit_message\",\n        \"pg_logical_slot_get_binary_changes\", \"pg_logical_slot_get_changes\", \"pg_logical_slot_peek_binary_changes\", \"pg_logical_slot_peek_changes\", \"pg_ls_dir\",\n        \"pg_my_temp_schema\", \"pg_notification_queue_usage\", \"pg_opclass_is_visible\", \"pg_operator_is_visible\", \"pg_opfamily_is_visible\", \"pg_options_to_table\",\n        \"pg_postmaster_start_time\", \"pg_read_binary_file\", \"pg_read_file\", \"pg_relation_filenode\", \"pg_relation_filepath\", \"pg_relation_size\", \"pg_reload_conf\",\n        \"pg_replication_origin_create\", \"pg_replication_origin_drop\", \"pg_replication_origin_oid\", \"pg_replication_origin_progress\", \"pg_replication_origin_session_is_setup\",\n        \"pg_replication_origin_session_progress\", \"pg_replication_origin_session_reset\", \"pg_replication_origin_session_setup\", \"pg_replication_origin_xact_reset\",\n        \"pg_replication_origin_xact_setup\", \"pg_rotate_logfile\", \"pg_size_bytes\", \"pg_size_pretty\", \"pg_sleep\", \"pg_sleep_for\", \"pg_sleep_until\", \"pg_start_backup\",\n        \"pg_stat_file\", \"pg_stop_backup\", \"pg_switch_xlog\", \"pg_table_is_visible\", \"pg_table_size\", \"pg_tablespace_databases\", \"pg_tablespace_location\",\n        \"pg_tablespace_size\", \"pg_terminate_backend\", \"pg_total_relation_size\", \"pg_trigger_depth\", \"pg_try_advisory_lock\", \"pg_try_advisory_lock_shared\",\n        \"pg_try_advisory_xact_lock\", \"pg_try_advisory_xact_lock_shared\", \"pg_ts_config_is_visible\", \"pg_ts_dict_is_visible\", \"pg_ts_parser_is_visible\",\n        \"pg_ts_template_is_visible\", \"pg_type_is_visible\", \"pg_typeof\", \"pg_xact_commit_timestamp\", \"pg_xlog_location_diff\", \"pg_xlog_replay_pause\",\n        \"pg_xlog_replay_resume\", \"pg_xlogfile_name\", \"pg_xlogfile_name_offset\", \"phraseto_tsquery\", \"pi\", \"plainto_tsquery\", \"point\", \"polygon\", \"popen\", \"position\",\n        \"power\", \"pqserverversion\", \"query_to_xml\", \"querytree\", \"quote_ident\", \"quote_literal\", \"quote_nullable\", \"radians\", \"radius\", \"random\", \"range_merge\",\n        \"rank\", \"regexp_matches\", \"regexp_replace\", \"regexp_split_to_array\", \"regexp_split_to_table\", \"regr_avgx\", \"regr_avgy\", \"regr_count\", \"regr_intercept\",\n        \"regr_r2\", \"regr_slope\", \"regr_sxx\", \"regr_sxy\", \"regr_syy\", \"repeat\", \"replace\", \"reverse\", \"right\", \"round\", \"row_number\", \"row_security_active\",\n        \"row_to_json\", \"rpad\", \"rtrim\", \"scale\", \"session_user\", \"set_bit\", \"set_byte\", \"set_config\", \"set_masklen\", \"setseed\", \"setval\", \"setweight\",\n        \"shobj_description\", \"sign\", \"sin\", \"sind\", \"split_part\", \"sprintf\", \"sqrt\", \"statement_timestamp\", \"stddev\", \"stddev_pop\", \"stddev_samp\", \"string_agg\",\n        \"string_to_array\", \"strip\", \"strpos\", \"substr\", \"substring\", \"sum\", \"table_to_xml\", \"table_to_xml_and_xmlschema\", \"tan\", \"tand\", \"text\", \"timeofday\",\n        \"timezone\", \"to_ascii\", \"to_char\", \"to_date\", \"to_hex\", \"to_json\", \"to_number\", \"to_regclass\", \"to_regnamespace\", \"to_regoper\", \"to_regoperator\", \"to_regproc\",\n        \"to_regprocedure\", \"to_regrole\", \"to_regtype\", \"to_timestamp\", \"to_tsquery\", \"to_tsvector\", \"transaction_timestamp\", \"translate\", \"trim\", \"trunc\", \"ts_debug\",\n        \"ts_delete\", \"ts_filter\", \"ts_headline\", \"ts_lexize\", \"ts_parse\", \"ts_rank\", \"ts_rank_cd\", \"ts_rewrite\", \"ts_stat\", \"ts_token_type\", \"tsquery_phrase\",\n        \"tsvector_to_array\", \"tsvector_update_trigger\", \"tsvector_update_trigger_column\", \"txid_current\", \"txid_current_snapshot\", \"txid_snapshot_xip\", \"txid_snapshot_xmax\",\n        \"txid_snapshot_xmin\", \"txid_visible_in_snapshot\", \"unnest\", \"upper\", \"upper_inc\", \"upper_inf\", \"user\", \"var_pop\", \"var_samp\", \"variance\", \"version\", \"width\",\n        \"width_bucket\", \"xml_is_well_formed\", \"xml_is_well_formed_content\", \"xml_is_well_formed_document\", \"xmlagg\", \"xmlcomment\", \"xmlconcat\", \"xmlelement\", \"xmlexists\",\n        \"xmlforest\", \"xmlparse\", \"xmlpi\", \"xmlroot\", \"xmlserialize\", \"xpath\", \"xpath_exists\"\n    ],\n    builtinVariables: [\n    // NOT SUPPORTED\n    ],\n    pseudoColumns: [\n    // NOT SUPPORTED\n    ],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@pseudoColumns' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@#$]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/--+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            // Not supporting nested comments, as nested comments seem to not be standard?\n            // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\n            // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        pseudoColumns: [\n            [/[$][A-Za-z_][\\w@#$]*/, {\n                    cases: {\n                        '@pseudoColumns': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/'/, { token: 'string', next: '@string' }],\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        quotedIdentifier: [\n            [/[^\"]+/, 'identifier'],\n            [/\"\"/, 'identifier'],\n            [/\"/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        scopes: [\n        // NOT SUPPORTED\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string'] },\n        { open: '[', close: ']', notIn: ['string'] },\n        { open: '(', close: ')', notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*(#|\\/\\/)region\\\\b\"),\n            end: new RegExp(\"^\\\\s*(#|\\/\\/)endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '',\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.root' }],\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\n            [/<!--/, 'comment.html', '@comment'],\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/</, 'delimiter.html'],\n            [/[^<]+/] // text\n        ],\n        doctype: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\n            [/[^>]+/, 'metatag.content.html'],\n            [/>/, 'metatag.html', '@pop'],\n        ],\n        comment: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.comment' }],\n            [/-->/, 'comment.html', '@pop'],\n            [/[^-]+/, 'comment.content.html'],\n            [/./, 'comment.content.html']\n        ],\n        otherTag: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.otherTag' }],\n            [/\\/?>/, 'delimiter.html', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.script' }],\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterType' }],\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.scriptWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.style' }],\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterType' }],\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInSimpleState.styleWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/<\\?((php)|=)?/, { token: '@rematch', switchTo: '@phpInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <style> tags handling\n        phpInSimpleState: [\n            [/<\\?((php)|=)?/, 'metatag.php'],\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3' }],\n            { include: 'phpRoot' }\n        ],\n        phpInEmbeddedState: [\n            [/<\\?((php)|=)?/, 'metatag.php'],\n            [/\\?>/, { token: 'metatag.php', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\n            { include: 'phpRoot' }\n        ],\n        phpRoot: [\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@phpKeywords': { token: 'keyword.php' },\n                        '@phpCompileTimeConstants': { token: 'constant.php' },\n                        '@default': 'identifier.php'\n                    }\n                }],\n            [/[$a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@phpPreDefinedVariables': { token: 'variable.predefined.php' },\n                        '@default': 'variable.php'\n                    }\n                }],\n            // brackets\n            [/[{}]/, 'delimiter.bracket.php'],\n            [/[\\[\\]]/, 'delimiter.array.php'],\n            [/[()]/, 'delimiter.parenthesis.php'],\n            // whitespace\n            [/[ \\t\\r\\n]+/],\n            // comments\n            [/#/, 'comment.php', '@phpLineComment'],\n            [/\\/\\//, 'comment.php', '@phpLineComment'],\n            // block comments\n            [/\\/\\*/, 'comment.php', '@phpComment'],\n            // strings\n            [/\"/, 'string.php', '@phpDoubleQuoteString'],\n            [/'/, 'string.php', '@phpSingleQuoteString'],\n            // delimiters\n            [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, 'delimiter.php'],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.php'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.php'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.php'],\n            [/0[0-7']*[0-7]/, 'number.octal.php'],\n            [/0[bB][0-1']*[0-1]/, 'number.binary.php'],\n            [/\\d[\\d']*/, 'number.php'],\n            [/\\d/, 'number.php'],\n        ],\n        phpComment: [\n            [/\\*\\//, 'comment.php', '@pop'],\n            [/[^*]+/, 'comment.php'],\n            [/./, 'comment.php']\n        ],\n        phpLineComment: [\n            [/\\?>/, { token: '@rematch', next: '@pop' }],\n            [/.$/, 'comment.php', '@pop'],\n            [/[^?]+$/, 'comment.php', '@pop'],\n            [/[^?]+/, 'comment.php'],\n            [/./, 'comment.php']\n        ],\n        phpDoubleQuoteString: [\n            [/[^\\\\\"]+/, 'string.php'],\n            [/@escapes/, 'string.escape.php'],\n            [/\\\\./, 'string.escape.invalid.php'],\n            [/\"/, 'string.php', '@pop']\n        ],\n        phpSingleQuoteString: [\n            [/[^\\\\']+/, 'string.php'],\n            [/@escapes/, 'string.escape.php'],\n            [/\\\\./, 'string.escape.invalid.php'],\n            [/'/, 'string.php', '@pop']\n        ],\n    },\n    phpKeywords: [\n        'abstract', 'and', 'array', 'as', 'break',\n        'callable', 'case', 'catch', 'cfunction', 'class', 'clone',\n        'const', 'continue', 'declare', 'default', 'do',\n        'else', 'elseif', 'enddeclare', 'endfor', 'endforeach',\n        'endif', 'endswitch', 'endwhile', 'extends', 'false', 'final',\n        'for', 'foreach', 'function', 'global', 'goto',\n        'if', 'implements', 'interface', 'instanceof', 'insteadof',\n        'namespace', 'new', 'null', 'object', 'old_function', 'or', 'private',\n        'protected', 'public', 'resource', 'static', 'switch', 'throw', 'trait',\n        'try', 'true', 'use', 'var', 'while', 'xor',\n        'die', 'echo', 'empty', 'exit', 'eval',\n        'include', 'include_once', 'isset', 'list', 'require',\n        'require_once', 'return', 'print', 'unset', 'yield',\n        '__construct'\n    ],\n    phpCompileTimeConstants: [\n        '__CLASS__',\n        '__DIR__',\n        '__FILE__',\n        '__LINE__',\n        '__NAMESPACE__',\n        '__METHOD__',\n        '__FUNCTION__',\n        '__TRAIT__'\n    ],\n    phpPreDefinedVariables: [\n        '$GLOBALS',\n        '$_SERVER',\n        '$_GET',\n        '$_POST',\n        '$_FILES',\n        '$_REQUEST',\n        '$_SESSION',\n        '$_ENV',\n        '$_COOKIE',\n        '$php_errormsg',\n        '$HTTP_RAW_POST_DATA',\n        '$http_response_header',\n        '$argc',\n        '$argv'\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Artyom Shalkhakov. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *\n *  Based on the ATS/Postiats lexer by Hongwei Xi.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    tokenPostfix: '.pats',\n    // TODO: staload and dynload are followed by a special kind of string literals\n    // with {$IDENTIFER} variables, and it also may make sense to highlight\n    // the punctuation (. and / and \\) differently.\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    defaultToken: 'invalid',\n    // keyword reference: https://github.com/githwxi/ATS-Postiats/blob/master/src/pats_lexing_token.dats\n    keywords: [\n        //\n        \"abstype\",\n        \"abst0ype\",\n        \"absprop\",\n        \"absview\",\n        \"absvtype\",\n        \"absviewtype\",\n        \"absvt0ype\",\n        \"absviewt0ype\",\n        //\n        \"as\",\n        //\n        \"and\",\n        //\n        \"assume\",\n        //\n        \"begin\",\n        //\n        /*\n                \"case\", // CASE\n        */\n        //\n        \"classdec\",\n        //\n        \"datasort\",\n        //\n        \"datatype\",\n        \"dataprop\",\n        \"dataview\",\n        \"datavtype\",\n        \"dataviewtype\",\n        //\n        \"do\",\n        //\n        \"end\",\n        //\n        \"extern\",\n        \"extype\",\n        \"extvar\",\n        //\n        \"exception\",\n        //\n        \"fn\",\n        \"fnx\",\n        \"fun\",\n        //\n        \"prfn\",\n        \"prfun\",\n        //\n        \"praxi\",\n        \"castfn\",\n        //\n        \"if\",\n        \"then\",\n        \"else\",\n        //\n        \"ifcase\",\n        //\n        \"in\",\n        //\n        \"infix\",\n        \"infixl\",\n        \"infixr\",\n        \"prefix\",\n        \"postfix\",\n        //\n        \"implmnt\",\n        \"implement\",\n        //\n        \"primplmnt\",\n        \"primplement\",\n        //\n        \"import\",\n        //\n        /*\n                \"lam\", // LAM\n                \"llam\", // LLAM\n                \"fix\", // FIX\n        */\n        //\n        \"let\",\n        //\n        \"local\",\n        //\n        \"macdef\",\n        \"macrodef\",\n        //\n        \"nonfix\",\n        //\n        \"symelim\",\n        \"symintr\",\n        \"overload\",\n        //\n        \"of\",\n        \"op\",\n        //\n        \"rec\",\n        //\n        \"sif\",\n        \"scase\",\n        //\n        \"sortdef\",\n        /*\n        // HX: [sta] is now deprecated\n        */\n        \"sta\",\n        \"stacst\",\n        \"stadef\",\n        \"static\",\n        /*\n                \"stavar\", // T_STAVAR\n        */\n        //\n        \"staload\",\n        \"dynload\",\n        //\n        \"try\",\n        //\n        \"tkindef\",\n        //\n        /*\n                \"type\", // TYPE\n        */\n        \"typedef\",\n        \"propdef\",\n        \"viewdef\",\n        \"vtypedef\",\n        \"viewtypedef\",\n        //\n        /*\n                \"val\", // VAL\n        */\n        \"prval\",\n        //\n        \"var\",\n        \"prvar\",\n        //\n        \"when\",\n        \"where\",\n        //\n        /*\n                \"for\", // T_FOR\n                \"while\", // T_WHILE\n        */\n        //\n        \"with\",\n        //\n        \"withtype\",\n        \"withprop\",\n        \"withview\",\n        \"withvtype\",\n        \"withviewtype\",\n    ],\n    keywords_dlr: [\n        \"$delay\",\n        \"$ldelay\",\n        //\n        \"$arrpsz\",\n        \"$arrptrsize\",\n        //\n        \"$d2ctype\",\n        //\n        \"$effmask\",\n        \"$effmask_ntm\",\n        \"$effmask_exn\",\n        \"$effmask_ref\",\n        \"$effmask_wrt\",\n        \"$effmask_all\",\n        //\n        \"$extern\",\n        \"$extkind\",\n        \"$extype\",\n        \"$extype_struct\",\n        //\n        \"$extval\",\n        \"$extfcall\",\n        \"$extmcall\",\n        //\n        \"$literal\",\n        //\n        \"$myfilename\",\n        \"$mylocation\",\n        \"$myfunction\",\n        //\n        \"$lst\",\n        \"$lst_t\",\n        \"$lst_vt\",\n        \"$list\",\n        \"$list_t\",\n        \"$list_vt\",\n        //\n        \"$rec\",\n        \"$rec_t\",\n        \"$rec_vt\",\n        \"$record\",\n        \"$record_t\",\n        \"$record_vt\",\n        //\n        \"$tup\",\n        \"$tup_t\",\n        \"$tup_vt\",\n        \"$tuple\",\n        \"$tuple_t\",\n        \"$tuple_vt\",\n        //\n        \"$break\",\n        \"$continue\",\n        //\n        \"$raise\",\n        //\n        \"$showtype\",\n        //\n        \"$vcopyenv_v\",\n        \"$vcopyenv_vt\",\n        //\n        \"$tempenver\",\n        //\n        \"$solver_assert\",\n        \"$solver_verify\",\n    ],\n    keywords_srp: [\n        //\n        \"#if\",\n        \"#ifdef\",\n        \"#ifndef\",\n        //\n        \"#then\",\n        //\n        \"#elif\",\n        \"#elifdef\",\n        \"#elifndef\",\n        //\n        \"#else\",\n        \"#endif\",\n        //\n        \"#error\",\n        //\n        \"#prerr\",\n        \"#print\",\n        //\n        \"#assert\",\n        //\n        \"#undef\",\n        \"#define\",\n        //\n        \"#include\",\n        \"#require\",\n        //\n        \"#pragma\",\n        \"#codegen2\",\n        \"#codegen3\",\n    ],\n    irregular_keyword_list: [\n        \"val+\",\n        \"val-\",\n        \"val\",\n        \"case+\",\n        \"case-\",\n        \"case\",\n        \"addr@\",\n        \"addr\",\n        \"fold@\",\n        \"free@\",\n        \"fix@\",\n        \"fix\",\n        \"lam@\",\n        \"lam\",\n        \"llam@\",\n        \"llam\",\n        \"viewt@ype+\",\n        \"viewt@ype-\",\n        \"viewt@ype\",\n        \"viewtype+\",\n        \"viewtype-\",\n        \"viewtype\",\n        \"view+\",\n        \"view-\",\n        \"view@\",\n        \"view\",\n        \"type+\",\n        \"type-\",\n        \"type\",\n        \"vtype+\",\n        \"vtype-\",\n        \"vtype\",\n        \"vt@ype+\",\n        \"vt@ype-\",\n        \"vt@ype\",\n        \"viewt@ype+\",\n        \"viewt@ype-\",\n        \"viewt@ype\",\n        \"viewtype+\",\n        \"viewtype-\",\n        \"viewtype\",\n        \"prop+\",\n        \"prop-\",\n        \"prop\",\n        \"type+\",\n        \"type-\",\n        \"type\",\n        \"t@ype\",\n        \"t@ype+\",\n        \"t@ype-\",\n        \"abst@ype\",\n        \"abstype\",\n        \"absviewt@ype\",\n        \"absvt@ype\",\n        \"for*\",\n        \"for\",\n        \"while*\",\n        \"while\"\n    ],\n    keywords_types: [\n        'bool',\n        'double',\n        'byte',\n        'int',\n        'short',\n        'char',\n        'void',\n        'unit',\n        'long',\n        'float',\n        'string',\n        'strptr'\n    ],\n    // TODO: reference for this?\n    keywords_effects: [\n        \"0\",\n        \"fun\",\n        \"clo\",\n        \"prf\",\n        \"funclo\",\n        \"cloptr\",\n        \"cloref\",\n        \"ref\",\n        \"ntm\",\n        \"1\" // all effects\n    ],\n    operators: [\n        \"@\",\n        \"!\",\n        \"|\",\n        \"`\",\n        \":\",\n        \"$\",\n        \".\",\n        \"=\",\n        \"#\",\n        \"~\",\n        //\n        \"..\",\n        \"...\",\n        //\n        \"=>\",\n        // \"=<\", // T_EQLT\n        \"=<>\",\n        \"=/=>\",\n        \"=>>\",\n        \"=/=>>\",\n        //\n        \"<\",\n        \">\",\n        //\n        \"><\",\n        //\n        \".<\",\n        \">.\",\n        //\n        \".<>.\",\n        //\n        \"->\",\n        //\"-<\", // T_MINUSLT\n        \"-<>\",\n    ],\n    brackets: [\n        { open: ',(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '`(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '%(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '\\'(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '\\'{', close: '}', token: 'delimiter.parenthesis' },\n        { open: '@(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '@{', close: '}', token: 'delimiter.brace' },\n        { open: '@[', close: ']', token: 'delimiter.square' },\n        { open: '#[', close: ']', token: 'delimiter.square' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    IDENTFST: /[a-zA-Z_]/,\n    IDENTRST: /[a-zA-Z0-9_'$]/,\n    symbolic: /[%&+-./:=@~`^|*!$#?<>]/,\n    digit: /[0-9]/,\n    digitseq0: /@digit*/,\n    xdigit: /[0-9A-Za-z]/,\n    xdigitseq0: /@xdigit*/,\n    INTSP: /[lLuU]/,\n    FLOATSP: /[fFlL]/,\n    fexponent: /[eE][+-]?[0-9]+/,\n    fexponent_bin: /[pP][+-]?[0-9]+/,\n    deciexp: /\\.[0-9]*@fexponent?/,\n    hexiexp: /\\.[0-9a-zA-Z]*@fexponent_bin?/,\n    irregular_keywords: /val[+-]?|case[+-]?|addr\\@?|fold\\@|free\\@|fix\\@?|lam\\@?|llam\\@?|prop[+-]?|type[+-]?|view[+-@]?|viewt@?ype[+-]?|t@?ype[+-]?|v(iew)?t@?ype[+-]?|abst@?ype|absv(iew)?t@?ype|for\\*?|while\\*?/,\n    ESCHAR: /[ntvbrfa\\\\\\?'\"\\(\\[\\{]/,\n    start: 'root',\n    // The main tokenizer for ATS/Postiats\n    // reference: https://github.com/githwxi/ATS-Postiats/blob/master/src/pats_lexing.dats\n    tokenizer: {\n        root: [\n            // lexing_blankseq0\n            { regex: /[ \\t\\r\\n]+/, action: { token: '' } },\n            // NOTE: (*) is an invalid ML-like comment!\n            { regex: /\\(\\*\\)/, action: { token: 'invalid' } },\n            { regex: /\\(\\*/, action: { token: 'comment', next: 'lexing_COMMENT_block_ml' } },\n            { regex: /\\(/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /\\)/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /\\[/, action: '@brackets' /*{ token: 'delimiter.bracket' }*/ },\n            { regex: /\\]/, action: '@brackets' /*{ token: 'delimiter.bracket' }*/ },\n            { regex: /\\{/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            { regex: /\\}/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            // lexing_COMMA\n            { regex: /,\\(/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /,/, action: { token: 'delimiter.comma' } },\n            { regex: /;/, action: { token: 'delimiter.semicolon' } },\n            // lexing_AT\n            { regex: /@\\(/, action: '@brackets' /* { token: 'delimiter.parenthesis' }*/ },\n            { regex: /@\\[/, action: '@brackets' /* { token: 'delimiter.bracket' }*/ },\n            { regex: /@\\{/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            // lexing_COLON\n            { regex: /:</, action: { token: 'keyword', next: '@lexing_EFFECT_commaseq0' } },\n            /*\n            lexing_DOT:\n\n            . // SYMBOLIC => lexing_IDENT_sym\n            . FLOATDOT => lexing_FLOAT_deciexp\n            . DIGIT => T_DOTINT\n            */\n            { regex: /\\.@symbolic+/, action: { token: 'identifier.sym' } },\n            // FLOATDOT case\n            { regex: /\\.@digit*@fexponent@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /\\.@digit+/, action: { token: 'number.float' } },\n            // lexing_DOLLAR:\n            // '$' IDENTFST IDENTRST* => lexing_IDENT_dlr, _ => lexing_IDENT_sym\n            {\n                regex: /\\$@IDENTFST@IDENTRST*/,\n                action: {\n                    cases: {\n                        '@keywords_dlr': { token: 'keyword.dlr' },\n                        '@default': { token: 'namespace' },\n                    }\n                }\n            },\n            // lexing_SHARP:\n            // '#' IDENTFST IDENTRST* => lexing_ident_srp, _ => lexing_IDENT_sym\n            {\n                regex: /\\#@IDENTFST@IDENTRST*/,\n                action: {\n                    cases: {\n                        '@keywords_srp': { token: 'keyword.srp' },\n                        '@default': { token: 'identifier' },\n                    }\n                }\n            },\n            // lexing_PERCENT:\n            { regex: /%\\(/, action: { token: 'delimiter.parenthesis' } },\n            { regex: /^%{(#|\\^|\\$)?/, action: { token: 'keyword', next: '@lexing_EXTCODE', nextEmbedded: 'text/javascript' } },\n            { regex: /^%}/, action: { token: 'keyword' } },\n            // lexing_QUOTE\n            { regex: /'\\(/, action: { token: 'delimiter.parenthesis' } },\n            { regex: /'\\[/, action: { token: 'delimiter.bracket' } },\n            { regex: /'\\{/, action: { token: 'delimiter.brace' } },\n            [/(')(\\\\@ESCHAR|\\\\[xX]@xdigit+|\\\\@digit+)(')/, ['string', 'string.escape', 'string']],\n            [/'[^\\\\']'/, 'string'],\n            // lexing_DQUOTE\n            [/\"/, 'string.quote', '@lexing_DQUOTE'],\n            // lexing_BQUOTE\n            { regex: /`\\(/, action: '@brackets' /* { token: 'delimiter.parenthesis' }*/ },\n            // TODO: otherwise, try lexing_IDENT_sym\n            { regex: /\\\\/, action: { token: 'punctuation' } },\n            // lexing_IDENT_alp:\n            // NOTE: (?!regex) is syntax for \"not-followed-by\" regex\n            // to resolve ambiguity such as foreach$fwork being incorrectly lexed as [for] [each$fwork]!\n            { regex: /@irregular_keywords(?!@IDENTRST)/, action: { token: 'keyword' } },\n            {\n                regex: /@IDENTFST@IDENTRST*[<!\\[]?/,\n                action: {\n                    cases: {\n                        // TODO: dynload and staload should be specially parsed\n                        // dynload whitespace+ \"special_string\"\n                        // this special string is really:\n                        //  '/' '\\\\' '.' => punctuation\n                        // ({\\$)([a-zA-Z_][a-zA-Z_0-9]*)(}) => punctuation,keyword,punctuation\n                        // [^\"] => identifier/literal\n                        '@keywords': { token: 'keyword' },\n                        '@keywords_types': { token: 'type' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            },\n            // lexing_IDENT_sym:\n            { regex: /\\/\\/\\/\\//, action: { token: 'comment', next: '@lexing_COMMENT_rest' } },\n            { regex: /\\/\\/.*$/, action: { token: 'comment' } },\n            { regex: /\\/\\*/, action: { token: 'comment', next: '@lexing_COMMENT_block_c' } },\n            // AS-20160627: specifically for effect annotations\n            { regex: /-<|=</, action: { token: 'keyword', next: '@lexing_EFFECT_commaseq0' } },\n            {\n                regex: /@symbolic+/,\n                action: {\n                    cases: {\n                        '@operators': 'keyword',\n                        '@default': 'operator'\n                    }\n                }\n            },\n            // lexing_ZERO:\n            // FIXME: this one is quite messy/unfinished yet\n            // TODO: lexing_INT_hex\n            // - testing_hexiexp => lexing_FLOAT_hexiexp\n            // - testing_fexponent_bin => lexing_FLOAT_hexiexp\n            // - testing_intspseq0 => T_INT_hex\n            // lexing_INT_hex:\n            { regex: /0[xX]@xdigit+(@hexiexp|@fexponent_bin)@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /0[xX]@xdigit+@INTSP*/, action: { token: 'number.hex' } },\n            { regex: /0[0-7]+(?![0-9])@INTSP*/, action: { token: 'number.octal' } },\n            //{regex: /0/, action: { token: 'number' } }, // INTZERO\n            // lexing_INT_dec:\n            // - testing_deciexp => lexing_FLOAT_deciexp\n            // - testing_fexponent => lexing_FLOAT_deciexp\n            // - otherwise => intspseq0 ([0-9]*[lLuU]?)\n            { regex: /@digit+(@fexponent|@deciexp)@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /@digit@digitseq0@INTSP*/, action: { token: 'number.decimal' } },\n            // DIGIT, if followed by digitseq0, is lexing_INT_dec\n            { regex: /@digit+@INTSP*/, action: { token: 'number' } },\n        ],\n        lexing_COMMENT_block_ml: [\n            [/[^\\(\\*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            [/\\(\\*/, 'comment.invalid'],\n            [/\\*\\)/, 'comment', '@pop'],\n            [/\\*/, 'comment']\n        ],\n        lexing_COMMENT_block_c: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested C-style block comments not allowed\n            // [/\\/\\*/,    'comment.invalid' ],\t// NOTE: this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        lexing_COMMENT_rest: [\n            [/$/, 'comment', '@pop'],\n            [/.*/, 'comment']\n        ],\n        // NOTE: added by AS, specifically for highlighting\n        lexing_EFFECT_commaseq0: [\n            {\n                regex: /@IDENTFST@IDENTRST+|@digit+/,\n                action: {\n                    cases: {\n                        '@keywords_effects': { token: 'type.effect' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            },\n            { regex: /,/, action: { token: 'punctuation' } },\n            { regex: />/, action: { token: '@rematch', next: '@pop' } },\n        ],\n        lexing_EXTCODE: [\n            { regex: /^%}/, action: { token: '@rematch', next: '@pop', nextEmbedded: '@pop' } },\n            { regex: /[^%]+/, action: '' },\n        ],\n        lexing_DQUOTE: [\n            { regex: /\"/, action: { token: 'string.quote', next: '@pop' } },\n            // AS-20160628: additional hi-lighting for variables in staload/dynload strings\n            { regex: /(\\{\\$)(@IDENTFST@IDENTRST*)(\\})/, action: [{ token: 'string.escape' }, { token: 'identifier' }, { token: 'string.escape' }] },\n            { regex: /\\\\$/, action: { token: 'string.escape' } },\n            { regex: /\\\\(@ESCHAR|[xX]@xdigit+|@digit+)/, action: { token: 'string.escape' } },\n            { regex: /[^\\\\\"]+/, action: { token: 'string' } }\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [['[', ']'], ['(', ')'], ['{', '}']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment', 'identifier'] },\n        { open: '[', close: ']', notIn: ['string', 'comment', 'identifier'] },\n        { open: '(', close: ')', notIn: ['string', 'comment', 'identifier'] },\n        { open: '{', close: '}', notIn: ['string', 'comment', 'identifier'] },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.pq',\n    ignoreCase: false,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '{', close: '}', token: 'delimiter.brackets' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    operatorKeywords: [\n        \"and\",\n        \"not\",\n        \"or\"\n    ],\n    keywords: [\n        \"as\",\n        \"each\",\n        \"else\",\n        \"error\",\n        \"false\",\n        \"if\",\n        \"in\",\n        \"is\",\n        \"let\",\n        \"meta\",\n        \"otherwise\",\n        \"section\",\n        \"shared\",\n        \"then\",\n        \"true\",\n        \"try\",\n        \"type\"\n    ],\n    constructors: [\n        \"#binary\",\n        \"#date\",\n        \"#datetime\",\n        \"#datetimezone\",\n        \"#duration\",\n        \"#table\",\n        \"#time\"\n    ],\n    constants: [\n        \"#infinity\",\n        \"#nan\",\n        \"#sections\",\n        \"#shared\"\n    ],\n    typeKeywords: [\n        \"action\",\n        \"any\",\n        \"anynonnull\",\n        \"none\",\n        \"null\",\n        \"logical\",\n        \"number\",\n        \"time\",\n        \"date\",\n        \"datetime\",\n        \"datetimezone\",\n        \"duration\",\n        \"text\",\n        \"binary\",\n        \"list\",\n        \"record\",\n        \"table\",\n        \"function\"\n    ],\n    builtinFunctions: [\n        \"Access.Database\",\n        \"Action.Return\",\n        \"Action.Sequence\",\n        \"Action.Try\",\n        \"ActiveDirectory.Domains\",\n        \"AdoDotNet.DataSource\",\n        \"AdoDotNet.Query\",\n        \"AdobeAnalytics.Cubes\",\n        \"AnalysisServices.Database\",\n        \"AnalysisServices.Databases\",\n        \"AzureStorage.BlobContents\",\n        \"AzureStorage.Blobs\",\n        \"AzureStorage.Tables\",\n        \"Binary.Buffer\",\n        \"Binary.Combine\",\n        \"Binary.Compress\",\n        \"Binary.Decompress\",\n        \"Binary.End\",\n        \"Binary.From\",\n        \"Binary.FromList\",\n        \"Binary.FromText\",\n        \"Binary.InferContentType\",\n        \"Binary.Length\",\n        \"Binary.ToList\",\n        \"Binary.ToText\",\n        \"BinaryFormat.7BitEncodedSignedInteger\",\n        \"BinaryFormat.7BitEncodedUnsignedInteger\",\n        \"BinaryFormat.Binary\",\n        \"BinaryFormat.Byte\",\n        \"BinaryFormat.ByteOrder\",\n        \"BinaryFormat.Choice\",\n        \"BinaryFormat.Decimal\",\n        \"BinaryFormat.Double\",\n        \"BinaryFormat.Group\",\n        \"BinaryFormat.Length\",\n        \"BinaryFormat.List\",\n        \"BinaryFormat.Null\",\n        \"BinaryFormat.Record\",\n        \"BinaryFormat.SignedInteger16\",\n        \"BinaryFormat.SignedInteger32\",\n        \"BinaryFormat.SignedInteger64\",\n        \"BinaryFormat.Single\",\n        \"BinaryFormat.Text\",\n        \"BinaryFormat.Transform\",\n        \"BinaryFormat.UnsignedInteger16\",\n        \"BinaryFormat.UnsignedInteger32\",\n        \"BinaryFormat.UnsignedInteger64\",\n        \"Byte.From\",\n        \"Character.FromNumber\",\n        \"Character.ToNumber\",\n        \"Combiner.CombineTextByDelimiter\",\n        \"Combiner.CombineTextByEachDelimiter\",\n        \"Combiner.CombineTextByLengths\",\n        \"Combiner.CombineTextByPositions\",\n        \"Combiner.CombineTextByRanges\",\n        \"Comparer.Equals\",\n        \"Comparer.FromCulture\",\n        \"Comparer.Ordinal\",\n        \"Comparer.OrdinalIgnoreCase\",\n        \"Csv.Document\",\n        \"Cube.AddAndExpandDimensionColumn\",\n        \"Cube.AddMeasureColumn\",\n        \"Cube.ApplyParameter\",\n        \"Cube.AttributeMemberId\",\n        \"Cube.AttributeMemberProperty\",\n        \"Cube.CollapseAndRemoveColumns\",\n        \"Cube.Dimensions\",\n        \"Cube.DisplayFolders\",\n        \"Cube.Measures\",\n        \"Cube.Parameters\",\n        \"Cube.Properties\",\n        \"Cube.PropertyKey\",\n        \"Cube.ReplaceDimensions\",\n        \"Cube.Transform\",\n        \"Currency.From\",\n        \"DB2.Database\",\n        \"Date.AddDays\",\n        \"Date.AddMonths\",\n        \"Date.AddQuarters\",\n        \"Date.AddWeeks\",\n        \"Date.AddYears\",\n        \"Date.Day\",\n        \"Date.DayOfWeek\",\n        \"Date.DayOfWeekName\",\n        \"Date.DayOfYear\",\n        \"Date.DaysInMonth\",\n        \"Date.EndOfDay\",\n        \"Date.EndOfMonth\",\n        \"Date.EndOfQuarter\",\n        \"Date.EndOfWeek\",\n        \"Date.EndOfYear\",\n        \"Date.From\",\n        \"Date.FromText\",\n        \"Date.IsInCurrentDay\",\n        \"Date.IsInCurrentMonth\",\n        \"Date.IsInCurrentQuarter\",\n        \"Date.IsInCurrentWeek\",\n        \"Date.IsInCurrentYear\",\n        \"Date.IsInNextDay\",\n        \"Date.IsInNextMonth\",\n        \"Date.IsInNextNDays\",\n        \"Date.IsInNextNMonths\",\n        \"Date.IsInNextNQuarters\",\n        \"Date.IsInNextNWeeks\",\n        \"Date.IsInNextNYears\",\n        \"Date.IsInNextQuarter\",\n        \"Date.IsInNextWeek\",\n        \"Date.IsInNextYear\",\n        \"Date.IsInPreviousDay\",\n        \"Date.IsInPreviousMonth\",\n        \"Date.IsInPreviousNDays\",\n        \"Date.IsInPreviousNMonths\",\n        \"Date.IsInPreviousNQuarters\",\n        \"Date.IsInPreviousNWeeks\",\n        \"Date.IsInPreviousNYears\",\n        \"Date.IsInPreviousQuarter\",\n        \"Date.IsInPreviousWeek\",\n        \"Date.IsInPreviousYear\",\n        \"Date.IsInYearToDate\",\n        \"Date.IsLeapYear\",\n        \"Date.Month\",\n        \"Date.MonthName\",\n        \"Date.QuarterOfYear\",\n        \"Date.StartOfDay\",\n        \"Date.StartOfMonth\",\n        \"Date.StartOfQuarter\",\n        \"Date.StartOfWeek\",\n        \"Date.StartOfYear\",\n        \"Date.ToRecord\",\n        \"Date.ToText\",\n        \"Date.WeekOfMonth\",\n        \"Date.WeekOfYear\",\n        \"Date.Year\",\n        \"DateTime.AddZone\",\n        \"DateTime.Date\",\n        \"DateTime.FixedLocalNow\",\n        \"DateTime.From\",\n        \"DateTime.FromFileTime\",\n        \"DateTime.FromText\",\n        \"DateTime.IsInCurrentHour\",\n        \"DateTime.IsInCurrentMinute\",\n        \"DateTime.IsInCurrentSecond\",\n        \"DateTime.IsInNextHour\",\n        \"DateTime.IsInNextMinute\",\n        \"DateTime.IsInNextNHours\",\n        \"DateTime.IsInNextNMinutes\",\n        \"DateTime.IsInNextNSeconds\",\n        \"DateTime.IsInNextSecond\",\n        \"DateTime.IsInPreviousHour\",\n        \"DateTime.IsInPreviousMinute\",\n        \"DateTime.IsInPreviousNHours\",\n        \"DateTime.IsInPreviousNMinutes\",\n        \"DateTime.IsInPreviousNSeconds\",\n        \"DateTime.IsInPreviousSecond\",\n        \"DateTime.LocalNow\",\n        \"DateTime.Time\",\n        \"DateTime.ToRecord\",\n        \"DateTime.ToText\",\n        \"DateTimeZone.FixedLocalNow\",\n        \"DateTimeZone.FixedUtcNow\",\n        \"DateTimeZone.From\",\n        \"DateTimeZone.FromFileTime\",\n        \"DateTimeZone.FromText\",\n        \"DateTimeZone.LocalNow\",\n        \"DateTimeZone.RemoveZone\",\n        \"DateTimeZone.SwitchZone\",\n        \"DateTimeZone.ToLocal\",\n        \"DateTimeZone.ToRecord\",\n        \"DateTimeZone.ToText\",\n        \"DateTimeZone.ToUtc\",\n        \"DateTimeZone.UtcNow\",\n        \"DateTimeZone.ZoneHours\",\n        \"DateTimeZone.ZoneMinutes\",\n        \"Decimal.From\",\n        \"Diagnostics.ActivityId\",\n        \"Diagnostics.Trace\",\n        \"DirectQueryCapabilities.From\",\n        \"Double.From\",\n        \"Duration.Days\",\n        \"Duration.From\",\n        \"Duration.FromText\",\n        \"Duration.Hours\",\n        \"Duration.Minutes\",\n        \"Duration.Seconds\",\n        \"Duration.ToRecord\",\n        \"Duration.ToText\",\n        \"Duration.TotalDays\",\n        \"Duration.TotalHours\",\n        \"Duration.TotalMinutes\",\n        \"Duration.TotalSeconds\",\n        \"Embedded.Value\",\n        \"Error.Record\",\n        \"Excel.CurrentWorkbook\",\n        \"Excel.Workbook\",\n        \"Exchange.Contents\",\n        \"Expression.Constant\",\n        \"Expression.Evaluate\",\n        \"Expression.Identifier\",\n        \"Facebook.Graph\",\n        \"File.Contents\",\n        \"Folder.Contents\",\n        \"Folder.Files\",\n        \"Function.From\",\n        \"Function.Invoke\",\n        \"Function.InvokeAfter\",\n        \"Function.IsDataSource\",\n        \"GoogleAnalytics.Accounts\",\n        \"Guid.From\",\n        \"HdInsight.Containers\",\n        \"HdInsight.Contents\",\n        \"HdInsight.Files\",\n        \"Hdfs.Contents\",\n        \"Hdfs.Files\",\n        \"Informix.Database\",\n        \"Int16.From\",\n        \"Int32.From\",\n        \"Int64.From\",\n        \"Int8.From\",\n        \"ItemExpression.From\",\n        \"Json.Document\",\n        \"Json.FromValue\",\n        \"Lines.FromBinary\",\n        \"Lines.FromText\",\n        \"Lines.ToBinary\",\n        \"Lines.ToText\",\n        \"List.Accumulate\",\n        \"List.AllTrue\",\n        \"List.Alternate\",\n        \"List.AnyTrue\",\n        \"List.Average\",\n        \"List.Buffer\",\n        \"List.Combine\",\n        \"List.Contains\",\n        \"List.ContainsAll\",\n        \"List.ContainsAny\",\n        \"List.Count\",\n        \"List.Covariance\",\n        \"List.DateTimeZones\",\n        \"List.DateTimes\",\n        \"List.Dates\",\n        \"List.Difference\",\n        \"List.Distinct\",\n        \"List.Durations\",\n        \"List.FindText\",\n        \"List.First\",\n        \"List.FirstN\",\n        \"List.Generate\",\n        \"List.InsertRange\",\n        \"List.Intersect\",\n        \"List.IsDistinct\",\n        \"List.IsEmpty\",\n        \"List.Last\",\n        \"List.LastN\",\n        \"List.MatchesAll\",\n        \"List.MatchesAny\",\n        \"List.Max\",\n        \"List.MaxN\",\n        \"List.Median\",\n        \"List.Min\",\n        \"List.MinN\",\n        \"List.Mode\",\n        \"List.Modes\",\n        \"List.NonNullCount\",\n        \"List.Numbers\",\n        \"List.PositionOf\",\n        \"List.PositionOfAny\",\n        \"List.Positions\",\n        \"List.Product\",\n        \"List.Random\",\n        \"List.Range\",\n        \"List.RemoveFirstN\",\n        \"List.RemoveItems\",\n        \"List.RemoveLastN\",\n        \"List.RemoveMatchingItems\",\n        \"List.RemoveNulls\",\n        \"List.RemoveRange\",\n        \"List.Repeat\",\n        \"List.ReplaceMatchingItems\",\n        \"List.ReplaceRange\",\n        \"List.ReplaceValue\",\n        \"List.Reverse\",\n        \"List.Select\",\n        \"List.Single\",\n        \"List.SingleOrDefault\",\n        \"List.Skip\",\n        \"List.Sort\",\n        \"List.StandardDeviation\",\n        \"List.Sum\",\n        \"List.Times\",\n        \"List.Transform\",\n        \"List.TransformMany\",\n        \"List.Union\",\n        \"List.Zip\",\n        \"Logical.From\",\n        \"Logical.FromText\",\n        \"Logical.ToText\",\n        \"MQ.Queue\",\n        \"MySQL.Database\",\n        \"Number.Abs\",\n        \"Number.Acos\",\n        \"Number.Asin\",\n        \"Number.Atan\",\n        \"Number.Atan2\",\n        \"Number.BitwiseAnd\",\n        \"Number.BitwiseNot\",\n        \"Number.BitwiseOr\",\n        \"Number.BitwiseShiftLeft\",\n        \"Number.BitwiseShiftRight\",\n        \"Number.BitwiseXor\",\n        \"Number.Combinations\",\n        \"Number.Cos\",\n        \"Number.Cosh\",\n        \"Number.Exp\",\n        \"Number.Factorial\",\n        \"Number.From\",\n        \"Number.FromText\",\n        \"Number.IntegerDivide\",\n        \"Number.IsEven\",\n        \"Number.IsNaN\",\n        \"Number.IsOdd\",\n        \"Number.Ln\",\n        \"Number.Log\",\n        \"Number.Log10\",\n        \"Number.Mod\",\n        \"Number.Permutations\",\n        \"Number.Power\",\n        \"Number.Random\",\n        \"Number.RandomBetween\",\n        \"Number.Round\",\n        \"Number.RoundAwayFromZero\",\n        \"Number.RoundDown\",\n        \"Number.RoundTowardZero\",\n        \"Number.RoundUp\",\n        \"Number.Sign\",\n        \"Number.Sin\",\n        \"Number.Sinh\",\n        \"Number.Sqrt\",\n        \"Number.Tan\",\n        \"Number.Tanh\",\n        \"Number.ToText\",\n        \"OData.Feed\",\n        \"Odbc.DataSource\",\n        \"Odbc.Query\",\n        \"OleDb.DataSource\",\n        \"OleDb.Query\",\n        \"Oracle.Database\",\n        \"Percentage.From\",\n        \"PostgreSQL.Database\",\n        \"RData.FromBinary\",\n        \"Record.AddField\",\n        \"Record.Combine\",\n        \"Record.Field\",\n        \"Record.FieldCount\",\n        \"Record.FieldNames\",\n        \"Record.FieldOrDefault\",\n        \"Record.FieldValues\",\n        \"Record.FromList\",\n        \"Record.FromTable\",\n        \"Record.HasFields\",\n        \"Record.RemoveFields\",\n        \"Record.RenameFields\",\n        \"Record.ReorderFields\",\n        \"Record.SelectFields\",\n        \"Record.ToList\",\n        \"Record.ToTable\",\n        \"Record.TransformFields\",\n        \"Replacer.ReplaceText\",\n        \"Replacer.ReplaceValue\",\n        \"RowExpression.Column\",\n        \"RowExpression.From\",\n        \"Salesforce.Data\",\n        \"Salesforce.Reports\",\n        \"SapBusinessWarehouse.Cubes\",\n        \"SapHana.Database\",\n        \"SharePoint.Contents\",\n        \"SharePoint.Files\",\n        \"SharePoint.Tables\",\n        \"Single.From\",\n        \"Soda.Feed\",\n        \"Splitter.SplitByNothing\",\n        \"Splitter.SplitTextByAnyDelimiter\",\n        \"Splitter.SplitTextByDelimiter\",\n        \"Splitter.SplitTextByEachDelimiter\",\n        \"Splitter.SplitTextByLengths\",\n        \"Splitter.SplitTextByPositions\",\n        \"Splitter.SplitTextByRanges\",\n        \"Splitter.SplitTextByRepeatedLengths\",\n        \"Splitter.SplitTextByWhitespace\",\n        \"Sql.Database\",\n        \"Sql.Databases\",\n        \"SqlExpression.SchemaFrom\",\n        \"SqlExpression.ToExpression\",\n        \"Sybase.Database\",\n        \"Table.AddColumn\",\n        \"Table.AddIndexColumn\",\n        \"Table.AddJoinColumn\",\n        \"Table.AddKey\",\n        \"Table.AggregateTableColumn\",\n        \"Table.AlternateRows\",\n        \"Table.Buffer\",\n        \"Table.Column\",\n        \"Table.ColumnCount\",\n        \"Table.ColumnNames\",\n        \"Table.ColumnsOfType\",\n        \"Table.Combine\",\n        \"Table.CombineColumns\",\n        \"Table.Contains\",\n        \"Table.ContainsAll\",\n        \"Table.ContainsAny\",\n        \"Table.DemoteHeaders\",\n        \"Table.Distinct\",\n        \"Table.DuplicateColumn\",\n        \"Table.ExpandListColumn\",\n        \"Table.ExpandRecordColumn\",\n        \"Table.ExpandTableColumn\",\n        \"Table.FillDown\",\n        \"Table.FillUp\",\n        \"Table.FilterWithDataTable\",\n        \"Table.FindText\",\n        \"Table.First\",\n        \"Table.FirstN\",\n        \"Table.FirstValue\",\n        \"Table.FromColumns\",\n        \"Table.FromList\",\n        \"Table.FromPartitions\",\n        \"Table.FromRecords\",\n        \"Table.FromRows\",\n        \"Table.FromValue\",\n        \"Table.Group\",\n        \"Table.HasColumns\",\n        \"Table.InsertRows\",\n        \"Table.IsDistinct\",\n        \"Table.IsEmpty\",\n        \"Table.Join\",\n        \"Table.Keys\",\n        \"Table.Last\",\n        \"Table.LastN\",\n        \"Table.MatchesAllRows\",\n        \"Table.MatchesAnyRows\",\n        \"Table.Max\",\n        \"Table.MaxN\",\n        \"Table.Min\",\n        \"Table.MinN\",\n        \"Table.NestedJoin\",\n        \"Table.Partition\",\n        \"Table.PartitionValues\",\n        \"Table.Pivot\",\n        \"Table.PositionOf\",\n        \"Table.PositionOfAny\",\n        \"Table.PrefixColumns\",\n        \"Table.Profile\",\n        \"Table.PromoteHeaders\",\n        \"Table.Range\",\n        \"Table.RemoveColumns\",\n        \"Table.RemoveFirstN\",\n        \"Table.RemoveLastN\",\n        \"Table.RemoveMatchingRows\",\n        \"Table.RemoveRows\",\n        \"Table.RemoveRowsWithErrors\",\n        \"Table.RenameColumns\",\n        \"Table.ReorderColumns\",\n        \"Table.Repeat\",\n        \"Table.ReplaceErrorValues\",\n        \"Table.ReplaceKeys\",\n        \"Table.ReplaceMatchingRows\",\n        \"Table.ReplaceRelationshipIdentity\",\n        \"Table.ReplaceRows\",\n        \"Table.ReplaceValue\",\n        \"Table.ReverseRows\",\n        \"Table.RowCount\",\n        \"Table.Schema\",\n        \"Table.SelectColumns\",\n        \"Table.SelectRows\",\n        \"Table.SelectRowsWithErrors\",\n        \"Table.SingleRow\",\n        \"Table.Skip\",\n        \"Table.Sort\",\n        \"Table.SplitColumn\",\n        \"Table.ToColumns\",\n        \"Table.ToList\",\n        \"Table.ToRecords\",\n        \"Table.ToRows\",\n        \"Table.TransformColumnNames\",\n        \"Table.TransformColumnTypes\",\n        \"Table.TransformColumns\",\n        \"Table.TransformRows\",\n        \"Table.Transpose\",\n        \"Table.Unpivot\",\n        \"Table.UnpivotOtherColumns\",\n        \"Table.View\",\n        \"Table.ViewFunction\",\n        \"TableAction.DeleteRows\",\n        \"TableAction.InsertRows\",\n        \"TableAction.UpdateRows\",\n        \"Tables.GetRelationships\",\n        \"Teradata.Database\",\n        \"Text.AfterDelimiter\",\n        \"Text.At\",\n        \"Text.BeforeDelimiter\",\n        \"Text.BetweenDelimiters\",\n        \"Text.Clean\",\n        \"Text.Combine\",\n        \"Text.Contains\",\n        \"Text.End\",\n        \"Text.EndsWith\",\n        \"Text.Format\",\n        \"Text.From\",\n        \"Text.FromBinary\",\n        \"Text.Insert\",\n        \"Text.Length\",\n        \"Text.Lower\",\n        \"Text.Middle\",\n        \"Text.NewGuid\",\n        \"Text.PadEnd\",\n        \"Text.PadStart\",\n        \"Text.PositionOf\",\n        \"Text.PositionOfAny\",\n        \"Text.Proper\",\n        \"Text.Range\",\n        \"Text.Remove\",\n        \"Text.RemoveRange\",\n        \"Text.Repeat\",\n        \"Text.Replace\",\n        \"Text.ReplaceRange\",\n        \"Text.Select\",\n        \"Text.Split\",\n        \"Text.SplitAny\",\n        \"Text.Start\",\n        \"Text.StartsWith\",\n        \"Text.ToBinary\",\n        \"Text.ToList\",\n        \"Text.Trim\",\n        \"Text.TrimEnd\",\n        \"Text.TrimStart\",\n        \"Text.Upper\",\n        \"Time.EndOfHour\",\n        \"Time.From\",\n        \"Time.FromText\",\n        \"Time.Hour\",\n        \"Time.Minute\",\n        \"Time.Second\",\n        \"Time.StartOfHour\",\n        \"Time.ToRecord\",\n        \"Time.ToText\",\n        \"Type.AddTableKey\",\n        \"Type.ClosedRecord\",\n        \"Type.Facets\",\n        \"Type.ForFunction\",\n        \"Type.ForRecord\",\n        \"Type.FunctionParameters\",\n        \"Type.FunctionRequiredParameters\",\n        \"Type.FunctionReturn\",\n        \"Type.Is\",\n        \"Type.IsNullable\",\n        \"Type.IsOpenRecord\",\n        \"Type.ListItem\",\n        \"Type.NonNullable\",\n        \"Type.OpenRecord\",\n        \"Type.RecordFields\",\n        \"Type.ReplaceFacets\",\n        \"Type.ReplaceTableKeys\",\n        \"Type.TableColumn\",\n        \"Type.TableKeys\",\n        \"Type.TableRow\",\n        \"Type.TableSchema\",\n        \"Type.Union\",\n        \"Uri.BuildQueryString\",\n        \"Uri.Combine\",\n        \"Uri.EscapeDataString\",\n        \"Uri.Parts\",\n        \"Value.Add\",\n        \"Value.As\",\n        \"Value.Compare\",\n        \"Value.Divide\",\n        \"Value.Equals\",\n        \"Value.Firewall\",\n        \"Value.FromText\",\n        \"Value.Is\",\n        \"Value.Metadata\",\n        \"Value.Multiply\",\n        \"Value.NativeQuery\",\n        \"Value.NullableEquals\",\n        \"Value.RemoveMetadata\",\n        \"Value.ReplaceMetadata\",\n        \"Value.ReplaceType\",\n        \"Value.Subtract\",\n        \"Value.Type\",\n        \"ValueAction.NativeStatement\",\n        \"ValueAction.Replace\",\n        \"Variable.Value\",\n        \"Web.Contents\",\n        \"Web.Page\",\n        \"WebAction.Request\",\n        \"Xml.Document\",\n        \"Xml.Tables\"\n    ],\n    builtinConstants: [\n        \"BinaryEncoding.Base64\",\n        \"BinaryEncoding.Hex\",\n        \"BinaryOccurrence.Optional\",\n        \"BinaryOccurrence.Repeating\",\n        \"BinaryOccurrence.Required\",\n        \"ByteOrder.BigEndian\",\n        \"ByteOrder.LittleEndian\",\n        \"Compression.Deflate\",\n        \"Compression.GZip\",\n        \"CsvStyle.QuoteAfterDelimiter\",\n        \"CsvStyle.QuoteAlways\",\n        \"Culture.Current\",\n        \"Day.Friday\",\n        \"Day.Monday\",\n        \"Day.Saturday\",\n        \"Day.Sunday\",\n        \"Day.Thursday\",\n        \"Day.Tuesday\",\n        \"Day.Wednesday\",\n        \"ExtraValues.Error\",\n        \"ExtraValues.Ignore\",\n        \"ExtraValues.List\",\n        \"GroupKind.Global\",\n        \"GroupKind.Local\",\n        \"JoinAlgorithm.Dynamic\",\n        \"JoinAlgorithm.LeftHash\",\n        \"JoinAlgorithm.LeftIndex\",\n        \"JoinAlgorithm.PairwiseHash\",\n        \"JoinAlgorithm.RightHash\",\n        \"JoinAlgorithm.RightIndex\",\n        \"JoinAlgorithm.SortMerge\",\n        \"JoinKind.FullOuter\",\n        \"JoinKind.Inner\",\n        \"JoinKind.LeftAnti\",\n        \"JoinKind.LeftOuter\",\n        \"JoinKind.RightAnti\",\n        \"JoinKind.RightOuter\",\n        \"JoinSide.Left\",\n        \"JoinSide.Right\",\n        \"MissingField.Error\",\n        \"MissingField.Ignore\",\n        \"MissingField.UseNull\",\n        \"Number.E\",\n        \"Number.Epsilon\",\n        \"Number.NaN\",\n        \"Number.NegativeInfinity\",\n        \"Number.PI\",\n        \"Number.PositiveInfinity\",\n        \"Occurrence.All\",\n        \"Occurrence.First\",\n        \"Occurrence.Last\",\n        \"Occurrence.Optional\",\n        \"Occurrence.Repeating\",\n        \"Occurrence.Required\",\n        \"Order.Ascending\",\n        \"Order.Descending\",\n        \"Precision.Decimal\",\n        \"Precision.Double\",\n        \"QuoteStyle.Csv\",\n        \"QuoteStyle.None\",\n        \"RelativePosition.FromEnd\",\n        \"RelativePosition.FromStart\",\n        \"RoundingMode.AwayFromZero\",\n        \"RoundingMode.Down\",\n        \"RoundingMode.ToEven\",\n        \"RoundingMode.TowardZero\",\n        \"RoundingMode.Up\",\n        \"SapHanaDistribution.All\",\n        \"SapHanaDistribution.Connection\",\n        \"SapHanaDistribution.Off\",\n        \"SapHanaDistribution.Statement\",\n        \"SapHanaRangeOperator.Equals\",\n        \"SapHanaRangeOperator.GreaterThan\",\n        \"SapHanaRangeOperator.GreaterThanOrEquals\",\n        \"SapHanaRangeOperator.LessThan\",\n        \"SapHanaRangeOperator.LessThanOrEquals\",\n        \"SapHanaRangeOperator.NotEquals\",\n        \"TextEncoding.Ascii\",\n        \"TextEncoding.BigEndianUnicode\",\n        \"TextEncoding.Unicode\",\n        \"TextEncoding.Utf16\",\n        \"TextEncoding.Utf8\",\n        \"TextEncoding.Windows\",\n        \"TraceLevel.Critical\",\n        \"TraceLevel.Error\",\n        \"TraceLevel.Information\",\n        \"TraceLevel.Verbose\",\n        \"TraceLevel.Warning\",\n        \"WebMethod.Delete\",\n        \"WebMethod.Get\",\n        \"WebMethod.Head\",\n        \"WebMethod.Patch\",\n        \"WebMethod.Post\",\n        \"WebMethod.Put\"\n    ],\n    builtinTypes: [\n        \"Action.Type\",\n        \"Any.Type\",\n        \"Binary.Type\",\n        \"BinaryEncoding.Type\",\n        \"BinaryOccurrence.Type\",\n        \"Byte.Type\",\n        \"ByteOrder.Type\",\n        \"Character.Type\",\n        \"Compression.Type\",\n        \"CsvStyle.Type\",\n        \"Currency.Type\",\n        \"Date.Type\",\n        \"DateTime.Type\",\n        \"DateTimeZone.Type\",\n        \"Day.Type\",\n        \"Decimal.Type\",\n        \"Double.Type\",\n        \"Duration.Type\",\n        \"ExtraValues.Type\",\n        \"Function.Type\",\n        \"GroupKind.Type\",\n        \"Guid.Type\",\n        \"Int16.Type\",\n        \"Int32.Type\",\n        \"Int64.Type\",\n        \"Int8.Type\",\n        \"JoinAlgorithm.Type\",\n        \"JoinKind.Type\",\n        \"JoinSide.Type\",\n        \"List.Type\",\n        \"Logical.Type\",\n        \"MissingField.Type\",\n        \"None.Type\",\n        \"Null.Type\",\n        \"Number.Type\",\n        \"Occurrence.Type\",\n        \"Order.Type\",\n        \"Password.Type\",\n        \"Percentage.Type\",\n        \"Precision.Type\",\n        \"QuoteStyle.Type\",\n        \"Record.Type\",\n        \"RelativePosition.Type\",\n        \"RoundingMode.Type\",\n        \"SapHanaDistribution.Type\",\n        \"SapHanaRangeOperator.Type\",\n        \"Single.Type\",\n        \"Table.Type\",\n        \"Text.Type\",\n        \"TextEncoding.Type\",\n        \"Time.Type\",\n        \"TraceLevel.Type\",\n        \"Type.Type\",\n        \"Uri.Type\",\n        \"WebMethod.Type\"\n    ],\n    tokenizer: {\n        root: [\n            // quoted identifier\n            [/#\"[\\w \\.]+\"/, \"identifier.quote\"],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n            [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n            [/\\d+([eE][\\-+]?\\d+)?/, \"number\"],\n            // keywords\n            [/(#?[a-z]+)\\b/,\n                {\n                    cases: {\n                        \"@typeKeywords\": \"type\",\n                        \"@keywords\": \"keyword\",\n                        \"@constants\": \"constant\",\n                        \"@constructors\": \"constructor\",\n                        \"@operatorKeywords\": \"operators\",\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ],\n            // built-in types\n            [/\\b([A-Z][a-zA-Z0-9]+\\.Type)\\b/,\n                {\n                    cases: {\n                        \"@builtinTypes\": \"type\",\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ],\n            // other built-ins\n            [/\\b([A-Z][a-zA-Z0-9]+\\.[A-Z][a-zA-Z0-9]+)\\b/,\n                {\n                    cases: {\n                        \"@builtinFunctions\": \"keyword.function\",\n                        \"@builtinConstants\": \"constant\",\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ],\n            // other identifiers\n            [/\\b([a-zA-Z_][\\w\\.]*)\\b/, \"identifier\"],\n            { include: \"@whitespace\" },\n            { include: \"@comments\" },\n            { include: \"@strings\" },\n            [/[{}()\\[\\]]/, \"@brackets\"],\n            [/([=\\+<>\\-\\*&@\\?\\/!])|([<>]=)|(<>)|(=>)|(\\.\\.\\.)|(\\.\\.)/, \"operators\"],\n            [/[,;]/, \"delimiter\"],\n        ],\n        whitespace: [\n            [/\\s+/, \"white\"]\n        ],\n        comments: [\n            [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n            [\"\\\\/\\\\/+.*\", \"comment\"]\n        ],\n        comment: [\n            [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n            [\".\", \"comment\"]\n        ],\n        strings: [\n            [\"\\\"\", \"string\", \"@string\"]\n        ],\n        string: [\n            [\"\\\"\\\"\", \"string.escape\"],\n            [\"\\\"\", \"string\", \"@pop\"],\n            [\".\", \"string\"]\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `$-`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '#',\n        blockComment: ['<#', '#>'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.ps1',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: [\n        'begin', 'break', 'catch', 'class', 'continue', 'data',\n        'define', 'do', 'dynamicparam', 'else', 'elseif', 'end',\n        'exit', 'filter', 'finally', 'for', 'foreach', 'from',\n        'function', 'if', 'in', 'param', 'process', 'return',\n        'switch', 'throw', 'trap', 'try', 'until', 'using',\n        'var', 'while', 'workflow', 'parallel', 'sequence', 'inlinescript', 'configuration'\n    ],\n    helpKeywords: /SYNOPSIS|DESCRIPTION|PARAMETER|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|ROLE|FUNCTIONALITY|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP/,\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^;\\.,]+/,\n    escapes: /`(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // commands and keywords\n            [/[a-zA-Z_][\\w-]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // labels\n            [/^:\\w*/, 'metatag'],\n            // variables\n            [/\\$(\\{((global|local|private|script|using):)?[\\w]+\\}|((global|local|private|script|using):)?[\\w]+)/, 'variable'],\n            // Comments\n            [/<#/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // delimiters\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings:\n            [/\\@\"/, 'string', '@herestring.\"'],\n            [/\\@'/, 'string', '@herestring.\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\$`]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }],\n            [/`./, {\n                    cases: {\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\n                        '@default': 'string.escape.invalid'\n                    }\n                }],\n            [/\\$[\\w]+$/, {\n                    cases: {\n                        '$S2==\"': { token: 'variable', next: '@popall' },\n                        '@default': { token: 'string', next: '@popall' }\n                    }\n                }],\n            [/\\$[\\w]+/, {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': {\n                            cases: {\n                                '@eos': { token: 'string', next: '@popall' },\n                                '@default': 'string'\n                            }\n                        }\n                    }\n                }],\n        ],\n        herestring: [\n            [/^\\s*([\"'])@/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^\\$`]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/`./, 'string.escape.invalid'],\n            [/\\$[\\w]+/, {\n                    cases: {\n                        '$S2==\"': 'variable',\n                        '@default': 'string'\n                    }\n                }],\n        ],\n        comment: [\n            [/[^#\\.]+/, 'comment'],\n            [/#>/, 'comment', '@pop'],\n            [/(\\.)(@helpKeywords)(?!\\w)/, { token: 'comment.keyword.$2' }],\n            [/[\\.#]/, 'comment']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//'\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n    ],\n    folding: {\n        offSide: true\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.pug',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: ['append', 'block', 'case', 'default', 'doctype', 'each', 'else', 'extends',\n        'for', 'if', 'in', 'include', 'mixin', 'typeof', 'unless', 'var', 'when'],\n    tags: [\n        'a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio',\n        'b', 'base', 'basefont', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button',\n        'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command',\n        'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt',\n        'em', 'embed',\n        'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset',\n        'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html',\n        'i', 'iframe', 'img', 'input', 'ins',\n        'keygen', 'kbd',\n        'label', 'li', 'link',\n        'map', 'mark', 'menu', 'meta', 'meter',\n        'nav', 'noframes', 'noscript',\n        'object', 'ol', 'optgroup', 'option', 'output',\n        'p', 'param', 'pre', 'progress',\n        'q',\n        'rp', 'rt', 'ruby',\n        's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup',\n        'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'tracks', 'tt',\n        'u', 'ul',\n        'video',\n        'wbr'\n    ],\n    // we include these common regular expressions\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            // Tag or a keyword at start\n            [/^(\\s*)([a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '$2@tags': {\n                            cases: {\n                                '@eos': ['', 'tag'],\n                                '@default': ['', { token: 'tag', next: '@tag.$1' },]\n                            }\n                        },\n                        '$2@keywords': ['', { token: 'keyword.$2' },],\n                        '@default': ['', '',]\n                    }\n                }\n            ],\n            // id\n            [/^(\\s*)(#[a-zA-Z_-][\\w-]*)/, {\n                    cases: {\n                        '@eos': ['', 'tag.id'],\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\n                    }\n                }],\n            // class\n            [/^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/, {\n                    cases: {\n                        '@eos': ['', 'tag.class'],\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\n                    }\n                }],\n            // plain text with pipe\n            [/^(\\s*)(\\|.*)$/, ''],\n            { include: '@whitespace' },\n            // keywords\n            [/[a-zA-Z_$][\\w$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+/, 'number'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        tag: [\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\n            [/\\s+/, { token: '', next: '@simpleText' }],\n            // id\n            [/#[a-zA-Z_-][\\w-]*/, {\n                    cases: {\n                        '@eos': { token: 'tag.id', next: '@pop' },\n                        '@default': 'tag.id'\n                    }\n                }],\n            // class\n            [/\\.[a-zA-Z_-][\\w-]*/, {\n                    cases: {\n                        '@eos': { token: 'tag.class', next: '@pop' },\n                        '@default': 'tag.class'\n                    }\n                }],\n            // attributes\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }],\n        ],\n        simpleText: [\n            [/[^#]+$/, { token: '', next: '@popall' }],\n            [/[^#]+/, { token: '' }],\n            // interpolation\n            [/(#{)([^}]*)(})/, {\n                    cases: {\n                        '@eos': ['interpolation.delimiter', 'interpolation', { token: 'interpolation.delimiter', next: '@popall' }],\n                        '@default': ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\n                    }\n                }],\n            [/#$/, { token: '', next: '@popall' }],\n            [/#/, '']\n        ],\n        attributeList: [\n            [/\\s+/, ''],\n            [/(\\w+)(\\s*=\\s*)(\"|')/, ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]],\n            [/\\w+/, 'attribute.name'],\n            [/,/, {\n                    cases: {\n                        '@eos': { token: 'attribute.delimiter', next: '@popall' },\n                        '@default': 'attribute.delimiter'\n                    }\n                }],\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }],\n        ],\n        whitespace: [\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }],\n        ],\n        blockText: [\n            [/^\\s+.*$/, {\n                    cases: {\n                        '($S2\\\\s+.*$)': { token: '$S3' },\n                        '@default': { token: '@rematch', next: '@popall' }\n                    }\n                }],\n            [/./, { token: '@rematch', next: '@popall' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        string: [\n            [/[^\\\\\"'#]+/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/@escapes/, {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }],\n            [/\\\\./, {\n                    cases: {\n                        '@eos': { token: 'string.escape.invalid', next: '@popall' },\n                        '@default': 'string.escape.invalid'\n                    }\n                }],\n            // interpolation\n            [/(#{)([^}]*)(})/, ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']],\n            [/#/, 'string'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': { token: 'string' }\n                    }\n                }],\n        ],\n        // Almost identical to above, except for escapes and the output token\n        value: [\n            [/[^\\\\\"']+/, {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }],\n            [/\\\\./, {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\n                        '@default': { token: 'attribute.value' }\n                    }\n                }],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nexport var conf = {\n    comments: {\n        lineComment: '#',\n        blockComment: ['\\'\\'\\'', '\\'\\'\\''],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"^\\\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\\\s*$\"),\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\n        }\n    ],\n    folding: {\n        offSide: true,\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.python',\n    keywords: [\n        'and',\n        'as',\n        'assert',\n        'break',\n        'class',\n        'continue',\n        'def',\n        'del',\n        'elif',\n        'else',\n        'except',\n        'exec',\n        'finally',\n        'for',\n        'from',\n        'global',\n        'if',\n        'import',\n        'in',\n        'is',\n        'lambda',\n        'None',\n        'not',\n        'or',\n        'pass',\n        'print',\n        'raise',\n        'return',\n        'self',\n        'try',\n        'while',\n        'with',\n        'yield',\n        'int',\n        'float',\n        'long',\n        'complex',\n        'hex',\n        'abs',\n        'all',\n        'any',\n        'apply',\n        'basestring',\n        'bin',\n        'bool',\n        'buffer',\n        'bytearray',\n        'callable',\n        'chr',\n        'classmethod',\n        'cmp',\n        'coerce',\n        'compile',\n        'complex',\n        'delattr',\n        'dict',\n        'dir',\n        'divmod',\n        'enumerate',\n        'eval',\n        'execfile',\n        'file',\n        'filter',\n        'format',\n        'frozenset',\n        'getattr',\n        'globals',\n        'hasattr',\n        'hash',\n        'help',\n        'id',\n        'input',\n        'intern',\n        'isinstance',\n        'issubclass',\n        'iter',\n        'len',\n        'locals',\n        'list',\n        'map',\n        'max',\n        'memoryview',\n        'min',\n        'next',\n        'object',\n        'oct',\n        'open',\n        'ord',\n        'pow',\n        'print',\n        'property',\n        'reversed',\n        'range',\n        'raw_input',\n        'reduce',\n        'reload',\n        'repr',\n        'reversed',\n        'round',\n        'set',\n        'setattr',\n        'slice',\n        'sorted',\n        'staticmethod',\n        'str',\n        'sum',\n        'super',\n        'tuple',\n        'type',\n        'unichr',\n        'unicode',\n        'vars',\n        'xrange',\n        'zip',\n        'True',\n        'False',\n        '__dict__',\n        '__methods__',\n        '__members__',\n        '__class__',\n        '__bases__',\n        '__name__',\n        '__mro__',\n        '__subclasses__',\n        '__init__',\n        '__import__'\n    ],\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            [/[,:;]/, 'delimiter'],\n            [/[{}\\[\\]()]/, '@brackets'],\n            [/@[a-zA-Z]\\w*/, 'tag'],\n            [/[a-zA-Z]\\w*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'identifier'\n                    }\n                }]\n        ],\n        // Deal with white space, including single and multi-line comments\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#.*$)/, 'comment'],\n            [/('''.*''')|(\"\"\".*\"\"\")/, 'string'],\n            [/'''.*$/, 'string', '@endDocString'],\n            [/\"\"\".*$/, 'string', '@endDblDocString']\n        ],\n        endDocString: [\n            [/\\\\'/, 'string'],\n            [/.*'''/, 'string', '@popall'],\n            [/.*$/, 'string']\n        ],\n        endDblDocString: [\n            [/\\\\\"/, 'string'],\n            [/.*\"\"\"/, 'string', '@popall'],\n            [/.*$/, 'string']\n        ],\n        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation\n        numbers: [\n            [/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, 'number.hex'],\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, 'number']\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string.escape', '@popall'],\n            [/'/, 'string.escape', '@stringBody'],\n            [/\"$/, 'string.escape', '@popall'],\n            [/\"/, 'string.escape', '@dblStringBody']\n        ],\n        stringBody: [\n            [/\\\\./, 'string'],\n            [/'/, 'string.escape', '@popall'],\n            [/.(?=.*')/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/\\\\./, 'string'],\n            [/\"/, 'string.escape', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.r',\n    roxygen: [\n        '@param',\n        '@return',\n        '@name',\n        '@rdname',\n        '@examples',\n        '@include',\n        '@docType',\n        '@S3method',\n        '@TODO',\n        '@aliases',\n        '@alias',\n        '@assignee',\n        '@author',\n        '@callGraphDepth',\n        '@callGraph',\n        '@callGraphPrimitives',\n        '@concept',\n        '@exportClass',\n        '@exportMethod',\n        '@exportPattern',\n        '@export',\n        '@formals',\n        '@format',\n        '@importClassesFrom',\n        '@importFrom',\n        '@importMethodsFrom',\n        '@import',\n        '@keywords',\n        '@method',\n        '@nord',\n        '@note',\n        '@references',\n        '@seealso',\n        '@setClass',\n        '@slot',\n        '@source',\n        '@title',\n        '@usage'\n    ],\n    constants: [\n        'NULL',\n        'FALSE',\n        'TRUE',\n        'NA',\n        'Inf',\n        'NaN ',\n        'NA_integer_',\n        'NA_real_',\n        'NA_complex_',\n        'NA_character_ ',\n        'T',\n        'F',\n        'LETTERS',\n        'letters',\n        'month.abb',\n        'month.name',\n        'pi',\n        'R.version.string'\n    ],\n    keywords: [\n        'break',\n        'next',\n        'return',\n        'if',\n        'else',\n        'for',\n        'in',\n        'repeat',\n        'while',\n        'array',\n        'category',\n        'character',\n        'complex',\n        'double',\n        'function',\n        'integer',\n        'list',\n        'logical',\n        'matrix',\n        'numeric',\n        'vector',\n        'data.frame',\n        'factor',\n        'library',\n        'require',\n        'attach',\n        'detach',\n        'source'\n    ],\n    special: [\n        '\\\\n',\n        '\\\\r',\n        '\\\\t',\n        '\\\\b',\n        '\\\\a',\n        '\\\\f',\n        '\\\\v',\n        '\\\\\\'',\n        '\\\\\"',\n        '\\\\\\\\'\n    ],\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@numbers' },\n            { include: '@strings' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            { include: '@operators' },\n            [/#'/, 'comment.doc', '@roxygen'],\n            [/(^#.*$)/, 'comment'],\n            [/\\s+/, 'white'],\n            [/[,:;]/, 'delimiter'],\n            [/@[a-zA-Z]\\w*/, 'tag'],\n            [/[a-zA-Z]\\w*/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@constants': 'constant',\n                        '@default': 'identifier'\n                    }\n                }]\n        ],\n        // Recognize Roxygen comments\n        roxygen: [\n            [/@\\w+/, {\n                    cases: {\n                        '@roxygen': 'tag',\n                        '@eos': { token: 'comment.doc', next: '@pop' },\n                        '@default': 'comment.doc'\n                    }\n                }],\n            [/\\s+/, {\n                    cases: {\n                        '@eos': { token: 'comment.doc', next: '@pop' },\n                        '@default': 'comment.doc'\n                    }\n                }],\n            [/.*/, { token: 'comment.doc', next: '@pop' }]\n        ],\n        // Recognize positives, negatives, decimals, imaginaries, and scientific notation\n        numbers: [\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']\n        ],\n        // Recognize operators\n        operators: [\n            [/<{1,2}-/, 'operator'],\n            [/->{1,2}/, 'operator'],\n            [/%[^%\\s]+%/, 'operator'],\n            [/\\*\\*/, 'operator'],\n            [/%%/, 'operator'],\n            [/&&/, 'operator'],\n            [/\\|\\|/, 'operator'],\n            [/<</, 'operator'],\n            [/>>/, 'operator'],\n            [/[-+=&|!<>^~*/:$]/, 'operator']\n        ],\n        // Recognize strings, including those broken across lines\n        strings: [\n            [/'/, 'string.escape', '@stringBody'],\n            [/\"/, 'string.escape', '@dblStringBody']\n        ],\n        stringBody: [\n            [/\\\\./, {\n                    cases: {\n                        '@special': 'string',\n                        '@default': 'error-token'\n                    }\n                }],\n            [/'/, 'string.escape', '@popall'],\n            [/./, 'string'],\n        ],\n        dblStringBody: [\n            [/\\\\./, {\n                    cases: {\n                        '@special': 'string',\n                        '@default': 'error-token'\n                    }\n                }],\n            [/\"/, 'string.escape', '@popall'],\n            [/./, 'string'],\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n// Allow for running under nodejs/requirejs in tests\nvar _monaco = (typeof monaco === 'undefined' ? self.monaco : monaco);\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: ['<!--', '-->']\n    },\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' }\n    ],\n    surroundingPairs: [\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '<', close: '>' }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n            action: { indentAction: _monaco.languages.IndentAction.IndentOutdent }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: _monaco.languages.IndentAction.Indent }\n        }\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '',\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/@@/],\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.root' }],\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\n            [/<!--/, 'comment.html', '@comment'],\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/(<\\/)(\\w+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\n            [/</, 'delimiter.html'],\n            [/[ \\t\\r\\n]+/],\n            [/[^<@]+/],\n        ],\n        doctype: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.comment' }],\n            [/[^>]+/, 'metatag.content.html'],\n            [/>/, 'metatag.html', '@pop'],\n        ],\n        comment: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.comment' }],\n            [/-->/, 'comment.html', '@pop'],\n            [/[^-]+/, 'comment.content.html'],\n            [/./, 'comment.content.html']\n        ],\n        otherTag: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.otherTag' }],\n            [/\\/?>/, 'delimiter.html', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.script' }],\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptAfterType' }],\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@scriptWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.text/javascript', nextEmbedded: 'text/javascript' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.scriptWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@scriptEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInEmbeddedState.scriptEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.style' }],\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleAfterType' }],\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleAfterTypeEquals' }],\n            [/\"([^\"]*)\"/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/'([^']*)'/, { token: 'attribute.value', switchTo: '@styleWithCustomType.$1' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.text/css', nextEmbedded: 'text/css' }],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInSimpleState.styleWithCustomType.$S2' }],\n            [/>/, { token: 'delimiter.html', next: '@styleEmbedded.$S2', nextEmbedded: '$S2' }],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/@[^@]/, { token: '@rematch', switchTo: '@razorInEmbeddedState.styleEmbedded.$S2', nextEmbedded: '@pop' }],\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }]\n        ],\n        // -- END <style> tags handling\n        razorInSimpleState: [\n            [/@\\*/, 'comment.cs', '@razorBlockCommentTopLevel'],\n            [/@[{(]/, 'metatag.cs', '@razorRootTopLevel'],\n            [/(@)(\\s*[\\w]+)/, ['metatag.cs', { token: 'identifier.cs', switchTo: '@$S2.$S3' }]],\n            [/[})]/, { token: 'metatag.cs', switchTo: '@$S2.$S3' }],\n            [/\\*@/, { token: 'comment.cs', switchTo: '@$S2.$S3' }],\n        ],\n        razorInEmbeddedState: [\n            [/@\\*/, 'comment.cs', '@razorBlockCommentTopLevel'],\n            [/@[{(]/, 'metatag.cs', '@razorRootTopLevel'],\n            [/(@)(\\s*[\\w]+)/, ['metatag.cs', { token: 'identifier.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }]],\n            [/[})]/, { token: 'metatag.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\n            [/\\*@/, { token: 'comment.cs', switchTo: '@$S2.$S3', nextEmbedded: '$S3' }],\n        ],\n        razorBlockCommentTopLevel: [\n            [/\\*@/, '@rematch', '@pop'],\n            [/[^*]+/, 'comment.cs'],\n            [/./, 'comment.cs']\n        ],\n        razorBlockComment: [\n            [/\\*@/, 'comment.cs', '@pop'],\n            [/[^*]+/, 'comment.cs'],\n            [/./, 'comment.cs']\n        ],\n        razorRootTopLevel: [\n            [/\\{/, 'delimiter.bracket.cs', '@razorRoot'],\n            [/\\(/, 'delimiter.parenthesis.cs', '@razorRoot'],\n            [/[})]/, '@rematch', '@pop'],\n            { include: 'razorCommon' }\n        ],\n        razorRoot: [\n            [/\\{/, 'delimiter.bracket.cs', '@razorRoot'],\n            [/\\(/, 'delimiter.parenthesis.cs', '@razorRoot'],\n            [/\\}/, 'delimiter.bracket.cs', '@pop'],\n            [/\\)/, 'delimiter.parenthesis.cs', '@pop'],\n            { include: 'razorCommon' }\n        ],\n        razorCommon: [\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@razorKeywords': { token: 'keyword.cs' },\n                        '@default': 'identifier.cs'\n                    }\n                }],\n            // brackets\n            [/[\\[\\]]/, 'delimiter.array.cs'],\n            // whitespace\n            [/[ \\t\\r\\n]+/],\n            // comments\n            [/\\/\\/.*$/, 'comment.cs'],\n            [/@\\*/, 'comment.cs', '@razorBlockComment'],\n            // strings\n            [/\"([^\"]*)\"/, 'string.cs'],\n            [/'([^']*)'/, 'string.cs'],\n            // simple html\n            [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<)(\\w+)(>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            [/(<\\/)(\\w+)(>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\n            // delimiters\n            [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,]/, 'delimiter.cs'],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?/, 'number.float.cs'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float.cs'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, 'number.hex.cs'],\n            [/0[0-7']*[0-7]/, 'number.octal.cs'],\n            [/0[bB][0-1']*[0-1]/, 'number.binary.cs'],\n            [/\\d[\\d']*/, 'number.cs'],\n            [/\\d/, 'number.cs'],\n        ]\n    },\n    razorKeywords: [\n        'abstract', 'as', 'async', 'await', 'base', 'bool',\n        'break', 'by', 'byte', 'case',\n        'catch', 'char', 'checked', 'class',\n        'const', 'continue', 'decimal', 'default',\n        'delegate', 'do', 'double', 'descending',\n        'explicit', 'event', 'extern', 'else',\n        'enum', 'false', 'finally', 'fixed',\n        'float', 'for', 'foreach', 'from',\n        'goto', 'group', 'if', 'implicit',\n        'in', 'int', 'interface', 'internal',\n        'into', 'is', 'lock', 'long', 'nameof',\n        'new', 'null', 'namespace', 'object',\n        'operator', 'out', 'override', 'orderby',\n        'params', 'private', 'protected', 'public',\n        'readonly', 'ref', 'return', 'switch',\n        'struct', 'sbyte', 'sealed', 'short',\n        'sizeof', 'stackalloc', 'static', 'string',\n        'select', 'this', 'throw', 'true',\n        'try', 'typeof', 'uint', 'ulong',\n        'unchecked', 'unsafe', 'ushort', 'using',\n        'var', 'virtual', 'volatile', 'void', 'when',\n        'while', 'where', 'yield',\n        'model', 'inject' // Razor specific\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.redis',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        \"APPEND\", \"AUTH\", \"BGREWRITEAOF\", \"BGSAVE\", \"BITCOUNT\", \"BITFIELD\", \"BITOP\", \"BITPOS\", \"BLPOP\", \"BRPOP\", \"BRPOPLPUSH\",\n        \"CLIENT\", \"KILL\", \"LIST\", \"GETNAME\", \"PAUSE\", \"REPLY\", \"SETNAME\", \"CLUSTER\", \"ADDSLOTS\", \"COUNT-FAILURE-REPORTS\",\n        \"COUNTKEYSINSLOT\", \"DELSLOTS\", \"FAILOVER\", \"FORGET\", \"GETKEYSINSLOT\", \"INFO\", \"KEYSLOT\", \"MEET\", \"NODES\", \"REPLICATE\",\n        \"RESET\", \"SAVECONFIG\", \"SET-CONFIG-EPOCH\", \"SETSLOT\", \"SLAVES\", \"SLOTS\", \"COMMAND\", \"COUNT\", \"GETKEYS\", \"CONFIG\", \"GET\",\n        \"REWRITE\", \"SET\", \"RESETSTAT\", \"DBSIZE\", \"DEBUG\", \"OBJECT\", \"SEGFAULT\", \"DECR\", \"DECRBY\", \"DEL\", \"DISCARD\", \"DUMP\", \"ECHO\",\n        \"EVAL\", \"EVALSHA\", \"EXEC\", \"EXISTS\", \"EXPIRE\", \"EXPIREAT\", \"FLUSHALL\", \"FLUSHDB\", \"GEOADD\", \"GEOHASH\", \"GEOPOS\", \"GEODIST\",\n        \"GEORADIUS\", \"GEORADIUSBYMEMBER\", \"GETBIT\", \"GETRANGE\", \"GETSET\", \"HDEL\", \"HEXISTS\", \"HGET\", \"HGETALL\", \"HINCRBY\", \"HINCRBYFLOAT\",\n        \"HKEYS\", \"HLEN\", \"HMGET\", \"HMSET\", \"HSET\", \"HSETNX\", \"HSTRLEN\", \"HVALS\", \"INCR\", \"INCRBY\", \"INCRBYFLOAT\", \"KEYS\", \"LASTSAVE\",\n        \"LINDEX\", \"LINSERT\", \"LLEN\", \"LPOP\", \"LPUSH\", \"LPUSHX\", \"LRANGE\", \"LREM\", \"LSET\", \"LTRIM\", \"MGET\", \"MIGRATE\", \"MONITOR\",\n        \"MOVE\", \"MSET\", \"MSETNX\", \"MULTI\", \"PERSIST\", \"PEXPIRE\", \"PEXPIREAT\", \"PFADD\", \"PFCOUNT\", \"PFMERGE\", \"PING\", \"PSETEX\",\n        \"PSUBSCRIBE\", \"PUBSUB\", \"PTTL\", \"PUBLISH\", \"PUNSUBSCRIBE\", \"QUIT\", \"RANDOMKEY\", \"READONLY\", \"READWRITE\", \"RENAME\", \"RENAMENX\",\n        \"RESTORE\", \"ROLE\", \"RPOP\", \"RPOPLPUSH\", \"RPUSH\", \"RPUSHX\", \"SADD\", \"SAVE\", \"SCARD\", \"SCRIPT\", \"FLUSH\", \"LOAD\", \"SDIFF\",\n        \"SDIFFSTORE\", \"SELECT\", \"SETBIT\", \"SETEX\", \"SETNX\", \"SETRANGE\", \"SHUTDOWN\", \"SINTER\", \"SINTERSTORE\", \"SISMEMBER\", \"SLAVEOF\",\n        \"SLOWLOG\", \"SMEMBERS\", \"SMOVE\", \"SORT\", \"SPOP\", \"SRANDMEMBER\", \"SREM\", \"STRLEN\", \"SUBSCRIBE\", \"SUNION\", \"SUNIONSTORE\", \"SWAPDB\",\n        \"SYNC\", \"TIME\", \"TOUCH\", \"TTL\", \"TYPE\", \"UNSUBSCRIBE\", \"UNLINK\", \"UNWATCH\", \"WAIT\", \"WATCH\", \"ZADD\", \"ZCARD\", \"ZCOUNT\", \"ZINCRBY\",\n        \"ZINTERSTORE\", \"ZLEXCOUNT\", \"ZRANGE\", \"ZRANGEBYLEX\", \"ZREVRANGEBYLEX\", \"ZRANGEBYSCORE\", \"ZRANK\", \"ZREM\", \"ZREMRANGEBYLEX\",\n        \"ZREMRANGEBYRANK\", \"ZREMRANGEBYSCORE\", \"ZREVRANGE\", \"ZREVRANGEBYSCORE\", \"ZREVRANK\", \"ZSCORE\", \"ZUNIONSTORE\", \"SCAN\", \"SSCAN\",\n        \"HSCAN\", \"ZSCAN\"\n    ],\n    operators: [\n    // NOT SUPPORTED\n    ],\n    builtinFunctions: [\n    // NOT SUPPORTED\n    ],\n    builtinVariables: [\n    // NOT SUPPORTED\n    ],\n    pseudoColumns: [\n    // NOT SUPPORTED\n    ],\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@pseudoColumns' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@#$]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        pseudoColumns: [\n            [/[$][A-Za-z_][\\w@#$]*/, {\n                    cases: {\n                        '@pseudoColumns': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/'/, { token: 'string', next: '@string' }],\n            [/\"/, { token: 'string.double', next: '@stringDouble' }]\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }],\n        ],\n        stringDouble: [\n            [/[^\"]+/, 'string.double'],\n            [/\"\"/, 'string.double'],\n            [/\"/, { token: 'string.double', next: '@pop' }]\n        ],\n        scopes: [\n        // NOT SUPPORTED\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        \"AES128\", \"AES256\", \"ALL\", \"ALLOWOVERWRITE\", \"ANALYSE\", \"ANALYZE\", \"AND\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"AUTHORIZATION\",\n        \"BACKUP\", \"BETWEEN\", \"BINARY\", \"BLANKSASNULL\", \"BOTH\", \"BYTEDICT\", \"BZIP2\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\",\n        \"CONSTRAINT\", \"CREATE\", \"CREDENTIALS\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\",\n        \"CURRENT_USER_ID\", \"DEFAULT\", \"DEFERRABLE\", \"DEFLATE\", \"DEFRAG\", \"DELTA\", \"DELTA32K\", \"DESC\", \"DISABLE\", \"DISTINCT\", \"DO\",\n        \"ELSE\", \"EMPTYASNULL\", \"ENABLE\", \"ENCODE\", \"ENCRYPT\", \"ENCRYPTION\", \"END\", \"EXCEPT\", \"EXPLICIT\", \"FALSE\", \"FOR\", \"FOREIGN\",\n        \"FREEZE\", \"FROM\", \"FULL\", \"GLOBALDICT256\", \"GLOBALDICT64K\", \"GRANT\", \"GROUP\", \"GZIP\", \"HAVING\", \"IDENTITY\", \"IGNORE\", \"ILIKE\",\n        \"IN\", \"INITIALLY\", \"INNER\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"LEADING\", \"LEFT\", \"LIKE\", \"LIMIT\", \"LOCALTIME\",\n        \"LOCALTIMESTAMP\", \"LUN\", \"LUNS\", \"LZO\", \"LZOP\", \"MINUS\", \"MOSTLY13\", \"MOSTLY32\", \"MOSTLY8\", \"NATURAL\", \"NEW\", \"NOT\", \"NOTNULL\",\n        \"NULL\", \"NULLS\", \"OFF\", \"OFFLINE\", \"OFFSET\", \"OID\", \"OLD\", \"ON\", \"ONLY\", \"OPEN\", \"OR\", \"ORDER\", \"OUTER\", \"OVERLAPS\", \"PARALLEL\",\n        \"PARTITION\", \"PERCENT\", \"PERMISSIONS\", \"PLACING\", \"PRIMARY\", \"RAW\", \"READRATIO\", \"RECOVER\", \"REFERENCES\", \"RESPECT\", \"REJECTLOG\",\n        \"RESORT\", \"RESTORE\", \"RIGHT\", \"SELECT\", \"SESSION_USER\", \"SIMILAR\", \"SNAPSHOT\", \"SOME\", \"SYSDATE\", \"SYSTEM\", \"TABLE\", \"TAG\",\n        \"TDES\", \"TEXT255\", \"TEXT32K\", \"THEN\", \"TIMESTAMP\", \"TO\", \"TOP\", \"TRAILING\", \"TRUE\", \"TRUNCATECOLUMNS\", \"UNION\", \"UNIQUE\", \"USER\",\n        \"USING\", \"VERBOSE\", \"WALLET\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\"\n    ],\n    operators: [\n        \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\n    ],\n    builtinFunctions: [\n        \"current_schema\", \"current_schemas\", \"has_database_privilege\", \"has_schema_privilege\", \"has_table_privilege\", \"age\",\n        \"current_time\", \"current_timestamp\", \"localtime\", \"isfinite\", \"now\", \"ascii\", \"get_bit\", \"get_byte\", \"set_bit\", \"set_byte\",\n        \"to_ascii\", \"approximate percentile_disc\", \"avg\", \"count\", \"listagg\", \"max\", \"median\", \"min\", \"percentile_cont\", \"stddev_samp\",\n        \"stddev_pop\", \"sum\", \"var_samp\", \"var_pop\", \"bit_and\", \"bit_or\", \"bool_and\", \"bool_or\", \"cume_dist\", \"first_value\", \"lag\",\n        \"last_value\", \"lead\", \"nth_value\", \"ratio_to_report\", \"dense_rank\", \"ntile\", \"percent_rank\", \"rank\", \"row_number\", \"case\",\n        \"coalesce\", \"decode\", \"greatest\", \"least\", \"nvl\", \"nvl2\", \"nullif\", \"add_months\", \"at time zone\", \"convert_timezone\",\n        \"current_date\", \"date_cmp\", \"date_cmp_timestamp\", \"date_cmp_timestamptz\", \"date_part_year\", \"dateadd\", \"datediff\",\n        \"date_part\", \"date_trunc\", \"extract\", \"getdate\", \"interval_cmp\", \"last_day\", \"months_between\", \"next_day\", \"sysdate\",\n        \"timeofday\", \"timestamp_cmp\", \"timestamp_cmp_date\", \"timestamp_cmp_timestamptz\", \"timestamptz_cmp\", \"timestamptz_cmp_date\",\n        \"timestamptz_cmp_timestamp\", \"timezone\", \"to_timestamp\", \"trunc\", \"abs\", \"acos\", \"asin\", \"atan\", \"atan2\", \"cbrt\", \"ceil\",\n        \"ceiling\", \"checksum\", \"cos\", \"cot\", \"degrees\", \"dexp\", \"dlog1\", \"dlog10\", \"exp\", \"floor\", \"ln\", \"log\", \"mod\", \"pi\", \"power\",\n        \"radians\", \"random\", \"round\", \"sin\", \"sign\", \"sqrt\", \"tan\", \"to_hex\", \"bpcharcmp\", \"btrim\", \"bttext_pattern_cmp\", \"char_length\",\n        \"character_length\", \"charindex\", \"chr\", \"concat\", \"crc32\", \"func_sha1\", \"initcap\", \"left and rights\", \"len\", \"length\", \"lower\",\n        \"lpad and rpads\", \"ltrim\", \"md5\", \"octet_length\", \"position\", \"quote_ident\", \"quote_literal\", \"regexp_count\", \"regexp_instr\",\n        \"regexp_replace\", \"regexp_substr\", \"repeat\", \"replace\", \"replicate\", \"reverse\", \"rtrim\", \"split_part\", \"strpos\", \"strtol\",\n        \"substring\", \"textlen\", \"translate\", \"trim\", \"upper\", \"cast\", \"convert\", \"to_char\", \"to_date\", \"to_number\", \"json_array_length\",\n        \"json_extract_array_element_text\", \"json_extract_path_text\", \"current_setting\", \"pg_cancel_backend\", \"pg_terminate_backend\",\n        \"set_config\", \"current_database\", \"current_user\", \"current_user_id\", \"pg_backend_pid\", \"pg_last_copy_count\", \"pg_last_copy_id\",\n        \"pg_last_query_id\", \"pg_last_unload_count\", \"session_user\", \"slice_num\", \"user\", \"version\", \"abbrev\", \"acosd\", \"any\", \"area\",\n        \"array_agg\", \"array_append\", \"array_cat\", \"array_dims\", \"array_fill\", \"array_length\", \"array_lower\", \"array_ndims\",\n        \"array_position\", \"array_positions\", \"array_prepend\", \"array_remove\", \"array_replace\", \"array_to_json\", \"array_to_string\",\n        \"array_to_tsvector\", \"array_upper\", \"asind\", \"atan2d\", \"atand\", \"bit\", \"bit_length\", \"bound_box\", \"box\",\n        \"brin_summarize_new_values\", \"broadcast\", \"cardinality\", \"center\", \"circle\", \"clock_timestamp\", \"col_description\", \"concat_ws\",\n        \"convert_from\", \"convert_to\", \"corr\", \"cosd\", \"cotd\", \"covar_pop\", \"covar_samp\", \"current_catalog\", \"current_query\",\n        \"current_role\", \"currval\", \"cursor_to_xml\", \"diameter\", \"div\", \"encode\", \"enum_first\", \"enum_last\", \"enum_range\", \"every\",\n        \"family\", \"format\", \"format_type\", \"generate_series\", \"generate_subscripts\", \"get_current_ts_config\", \"gin_clean_pending_list\",\n        \"grouping\", \"has_any_column_privilege\", \"has_column_privilege\", \"has_foreign_data_wrapper_privilege\", \"has_function_privilege\",\n        \"has_language_privilege\", \"has_sequence_privilege\", \"has_server_privilege\", \"has_tablespace_privilege\", \"has_type_privilege\",\n        \"height\", \"host\", \"hostmask\", \"inet_client_addr\", \"inet_client_port\", \"inet_merge\", \"inet_same_family\", \"inet_server_addr\",\n        \"inet_server_port\", \"isclosed\", \"isempty\", \"isopen\", \"json_agg\", \"json_object\", \"json_object_agg\", \"json_populate_record\",\n        \"json_populate_recordset\", \"json_to_record\", \"json_to_recordset\", \"jsonb_agg\", \"jsonb_object_agg\", \"justify_days\", \"justify_hours\",\n        \"justify_interval\", \"lastval\", \"left\", \"line\", \"localtimestamp\", \"lower_inc\", \"lower_inf\", \"lpad\", \"lseg\", \"make_date\",\n        \"make_interval\", \"make_time\", \"make_timestamp\", \"make_timestamptz\", \"masklen\", \"mode\", \"netmask\", \"network\", \"nextval\", \"npoints\",\n        \"num_nonnulls\", \"num_nulls\", \"numnode\", \"obj_description\", \"overlay\", \"parse_ident\", \"path\", \"pclose\", \"percentile_disc\",\n        \"pg_advisory_lock\", \"pg_advisory_lock_shared\", \"pg_advisory_unlock\", \"pg_advisory_unlock_all\", \"pg_advisory_unlock_shared\",\n        \"pg_advisory_xact_lock\", \"pg_advisory_xact_lock_shared\", \"pg_backup_start_time\", \"pg_blocking_pids\", \"pg_client_encoding\",\n        \"pg_collation_is_visible\", \"pg_column_size\", \"pg_conf_load_time\", \"pg_control_checkpoint\", \"pg_control_init\", \"pg_control_recovery\",\n        \"pg_control_system\", \"pg_conversion_is_visible\", \"pg_create_logical_replication_slot\", \"pg_create_physical_replication_slot\",\n        \"pg_create_restore_point\", \"pg_current_xlog_flush_location\", \"pg_current_xlog_insert_location\", \"pg_current_xlog_location\",\n        \"pg_database_size\", \"pg_describe_object\", \"pg_drop_replication_slot\", \"pg_export_snapshot\", \"pg_filenode_relation\",\n        \"pg_function_is_visible\", \"pg_get_constraintdef\", \"pg_get_expr\", \"pg_get_function_arguments\", \"pg_get_function_identity_arguments\",\n        \"pg_get_function_result\", \"pg_get_functiondef\", \"pg_get_indexdef\", \"pg_get_keywords\", \"pg_get_object_address\",\n        \"pg_get_owned_sequence\", \"pg_get_ruledef\", \"pg_get_serial_sequence\", \"pg_get_triggerdef\", \"pg_get_userbyid\", \"pg_get_viewdef\",\n        \"pg_has_role\", \"pg_identify_object\", \"pg_identify_object_as_address\", \"pg_index_column_has_property\", \"pg_index_has_property\",\n        \"pg_indexam_has_property\", \"pg_indexes_size\", \"pg_is_in_backup\", \"pg_is_in_recovery\", \"pg_is_other_temp_schema\",\n        \"pg_is_xlog_replay_paused\", \"pg_last_committed_xact\", \"pg_last_xact_replay_timestamp\", \"pg_last_xlog_receive_location\",\n        \"pg_last_xlog_replay_location\", \"pg_listening_channels\", \"pg_logical_emit_message\", \"pg_logical_slot_get_binary_changes\",\n        \"pg_logical_slot_get_changes\", \"pg_logical_slot_peek_binary_changes\", \"pg_logical_slot_peek_changes\", \"pg_ls_dir\",\n        \"pg_my_temp_schema\", \"pg_notification_queue_usage\", \"pg_opclass_is_visible\", \"pg_operator_is_visible\", \"pg_opfamily_is_visible\",\n        \"pg_options_to_table\", \"pg_postmaster_start_time\", \"pg_read_binary_file\", \"pg_read_file\", \"pg_relation_filenode\",\n        \"pg_relation_filepath\", \"pg_relation_size\", \"pg_reload_conf\", \"pg_replication_origin_create\", \"pg_replication_origin_drop\",\n        \"pg_replication_origin_oid\", \"pg_replication_origin_progress\", \"pg_replication_origin_session_is_setup\",\n        \"pg_replication_origin_session_progress\", \"pg_replication_origin_session_reset\", \"pg_replication_origin_session_setup\",\n        \"pg_replication_origin_xact_reset\", \"pg_replication_origin_xact_setup\", \"pg_rotate_logfile\", \"pg_size_bytes\", \"pg_size_pretty\",\n        \"pg_sleep\", \"pg_sleep_for\", \"pg_sleep_until\", \"pg_start_backup\", \"pg_stat_file\", \"pg_stop_backup\", \"pg_switch_xlog\",\n        \"pg_table_is_visible\", \"pg_table_size\", \"pg_tablespace_databases\", \"pg_tablespace_location\", \"pg_tablespace_size\",\n        \"pg_total_relation_size\", \"pg_trigger_depth\", \"pg_try_advisory_lock\", \"pg_try_advisory_lock_shared\", \"pg_try_advisory_xact_lock\",\n        \"pg_try_advisory_xact_lock_shared\", \"pg_ts_config_is_visible\", \"pg_ts_dict_is_visible\", \"pg_ts_parser_is_visible\",\n        \"pg_ts_template_is_visible\", \"pg_type_is_visible\", \"pg_typeof\", \"pg_xact_commit_timestamp\", \"pg_xlog_location_diff\",\n        \"pg_xlog_replay_pause\", \"pg_xlog_replay_resume\", \"pg_xlogfile_name\", \"pg_xlogfile_name_offset\", \"phraseto_tsquery\",\n        \"plainto_tsquery\", \"point\", \"polygon\", \"popen\", \"pqserverversion\", \"query_to_xml\", \"querytree\", \"quote_nullable\", \"radius\",\n        \"range_merge\", \"regexp_matches\", \"regexp_split_to_array\", \"regexp_split_to_table\", \"regr_avgx\", \"regr_avgy\", \"regr_count\",\n        \"regr_intercept\", \"regr_r2\", \"regr_slope\", \"regr_sxx\", \"regr_sxy\", \"regr_syy\", \"right\", \"row_security_active\", \"row_to_json\",\n        \"rpad\", \"scale\", \"set_masklen\", \"setseed\", \"setval\", \"setweight\", \"shobj_description\", \"sind\", \"sprintf\", \"statement_timestamp\",\n        \"stddev\", \"string_agg\", \"string_to_array\", \"strip\", \"substr\", \"table_to_xml\", \"table_to_xml_and_xmlschema\", \"tand\", \"text\",\n        \"to_json\", \"to_regclass\", \"to_regnamespace\", \"to_regoper\", \"to_regoperator\", \"to_regproc\", \"to_regprocedure\", \"to_regrole\",\n        \"to_regtype\", \"to_tsquery\", \"to_tsvector\", \"transaction_timestamp\", \"ts_debug\", \"ts_delete\", \"ts_filter\", \"ts_headline\",\n        \"ts_lexize\", \"ts_parse\", \"ts_rank\", \"ts_rank_cd\", \"ts_rewrite\", \"ts_stat\", \"ts_token_type\", \"tsquery_phrase\", \"tsvector_to_array\",\n        \"tsvector_update_trigger\", \"tsvector_update_trigger_column\", \"txid_current\", \"txid_current_snapshot\", \"txid_snapshot_xip\",\n        \"txid_snapshot_xmax\", \"txid_snapshot_xmin\", \"txid_visible_in_snapshot\", \"unnest\", \"upper_inc\", \"upper_inf\", \"variance\", \"width\",\n        \"width_bucket\", \"xml_is_well_formed\", \"xml_is_well_formed_content\", \"xml_is_well_formed_document\", \"xmlagg\", \"xmlcomment\",\n        \"xmlconcat\", \"xmlelement\", \"xmlexists\", \"xmlforest\", \"xmlparse\", \"xmlpi\", \"xmlroot\", \"xmlserialize\", \"xpath\", \"xpath_exists\"\n    ],\n    builtinVariables: [\n    // NOT SUPPORTED\n    ],\n    pseudoColumns: [\n    // NOT SUPPORTED\n    ],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@pseudoColumns' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@#$]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/--+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            // Not supporting nested comments, as nested comments seem to not be standard?\n            // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\n            // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        pseudoColumns: [\n            [/[$][A-Za-z_][\\w@#$]*/, {\n                    cases: {\n                        '@pseudoColumns': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/'/, { token: 'string', next: '@string' }],\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        quotedIdentifier: [\n            [/[^\"]+/, 'identifier'],\n            [/\"\"/, 'identifier'],\n            [/\"/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        scopes: [\n        // NOT SUPPORTED\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n        blockComment: ['=begin', '=end'],\n    },\n    brackets: [\n        ['(', ')'],\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\n/*\n * Ruby language definition\n *\n * Quite a complex language due to elaborate escape sequences\n * and quoting of literate strings/regular expressions, and\n * an 'end' keyword that does not always apply to modifiers like until and while,\n * and a 'do' keyword that sometimes starts a block, but sometimes is part of\n * another statement (like 'while').\n *\n * (1) end blocks:\n * 'end' may end declarations like if or until, but sometimes 'if' or 'until'\n * are modifiers where there is no 'end'. Also, 'do' sometimes starts a block\n * that is ended by 'end', but sometimes it is part of a 'while', 'for', or 'until'\n * To do proper brace matching we do some elaborate state manipulation.\n * some examples:\n *\n *   until bla do\n *     work until tired\n *     list.each do\n *       something if test\n *     end\n *   end\n *\n * or\n *\n * if test\n *  something (if test then x end)\n *  bar if bla\n * end\n *\n * or, how about using class as a property..\n *\n * class Test\n *   def endpoint\n *     self.class.endpoint || routes\n *   end\n * end\n *\n * (2) quoting:\n * there are many kinds of strings and escape sequences. But also, one can\n * start many string-like things as '%qx' where q specifies the kind of string\n * (like a command, escape expanded, regular expression, symbol etc.), and x is\n * some character and only another 'x' ends the sequence. Except for brackets\n * where the closing bracket ends the sequence.. and except for a nested bracket\n * inside the string like entity. Also, such strings can contain interpolated\n * ruby expressions again (and span multiple lines). Moreover, expanded\n * regular expression can also contain comments.\n */\nexport var language = {\n    tokenPostfix: '.ruby',\n    keywords: [\n        '__LINE__', '__ENCODING__', '__FILE__', 'BEGIN', 'END', 'alias', 'and', 'begin',\n        'break', 'case', 'class', 'def', 'defined?', 'do', 'else', 'elsif', 'end',\n        'ensure', 'for', 'false', 'if', 'in', 'module', 'next', 'nil', 'not', 'or', 'redo',\n        'rescue', 'retry', 'return', 'self', 'super', 'then', 'true', 'undef', 'unless',\n        'until', 'when', 'while', 'yield',\n    ],\n    keywordops: [\n        '::', '..', '...', '?', ':', '=>'\n    ],\n    builtins: [\n        'require', 'public', 'private', 'include', 'extend', 'attr_reader',\n        'protected', 'private_class_method', 'protected_class_method', 'new'\n    ],\n    // these are closed by 'end' (if, while and until are handled separately)\n    declarations: [\n        'module', 'class', 'def', 'case', 'do', 'begin', 'for', 'if', 'while', 'until', 'unless'\n    ],\n    linedecls: [\n        'def', 'case', 'do', 'begin', 'for', 'if', 'while', 'until', 'unless'\n    ],\n    operators: [\n        '^', '&', '|', '<=>', '==', '===', '!~', '=~', '>', '>=', '<', '<=', '<<', '>>', '+',\n        '-', '*', '/', '%', '**', '~', '+@', '-@', '[]', '[]=', '`',\n        '+=', '-=', '*=', '**=', '/=', '^=', '%=', '<<=', '>>=', '&=', '&&=', '||=', '|='\n    ],\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' }\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%\\.]+/,\n    // escape sequences\n    escape: /(?:[abefnrstv\\\\\"'\\n\\r]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2}|u[0-9A-Fa-f]{4})/,\n    escapes: /\\\\(?:C\\-(@escape|.)|c(@escape|.)|@escape)/,\n    decpart: /\\d(_?\\d)*/,\n    decimal: /0|@decpart/,\n    delim: /[^a-zA-Z0-9\\s\\n\\r]/,\n    heredelim: /(?:\\w+|'[^']*'|\"[^\"]*\"|`[^`]*`)/,\n    regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n    regexpesc: /\\\\(?:[AzZbBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        // Main entry.\n        // root.<decl> where decl is the current opening declaration (like 'class')\n        root: [\n            // identifiers and keywords\n            // most complexity here is due to matching 'end' correctly with declarations.\n            // We distinguish a declaration that comes first on a line, versus declarations further on a line (which are most likey modifiers)\n            [/^(\\s*)([a-z_]\\w*[!?=]?)/, ['white',\n                    {\n                        cases: {\n                            'for|until|while': { token: 'keyword.$2', next: '@dodecl.$2' },\n                            '@declarations': { token: 'keyword.$2', next: '@root.$2' },\n                            'end': { token: 'keyword.$S2', next: '@pop' },\n                            '@keywords': 'keyword',\n                            '@builtins': 'predefined',\n                            '@default': 'identifier'\n                        }\n                    }]],\n            [/[a-z_]\\w*[!?=]?/,\n                {\n                    cases: {\n                        'if|unless|while|until': { token: 'keyword.$0x', next: '@modifier.$0x' },\n                        'for': { token: 'keyword.$2', next: '@dodecl.$2' },\n                        '@linedecls': { token: 'keyword.$0', next: '@root.$0' },\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[A-Z][\\w]*[!?=]?/, 'constructor.identifier'],\n            [/\\$[\\w]*/, 'global.constant'],\n            [/@[\\w]*/, 'namespace.instance.identifier'],\n            [/@@[\\w]*/, 'namespace.class.identifier'],\n            // here document\n            [/<<[-~](@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            [/[ \\t\\r\\n]+<<(@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            [/^<<(@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            // whitespace\n            { include: '@whitespace' },\n            // strings\n            [/\"/, { token: 'string.d.delim', next: '@dstring.d.\"' }],\n            [/'/, { token: 'string.sq.delim', next: '@sstring.sq' }],\n            // % literals. For efficiency, rematch in the 'pstring' state\n            [/%([rsqxwW]|Q?)/, { token: '@rematch', next: 'pstring' }],\n            // commands and symbols\n            [/`/, { token: 'string.x.delim', next: '@dstring.x.`' }],\n            [/:(\\w|[$@])\\w*[!?=]?/, 'string.s'],\n            [/:\"/, { token: 'string.s.delim', next: '@dstring.s.\"' }],\n            [/:'/, { token: 'string.s.delim', next: '@sstring.s' }],\n            // regular expressions. Lookahead for a (not escaped) closing forwardslash on the same line\n            [/\\/(?=(\\\\\\/|[^\\/\\n])+\\/)/, { token: 'regexp.delim', next: '@regexp' }],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@keywordops': 'keyword',\n                        '@operators': 'operator',\n                        '@default': ''\n                    }\n                }],\n            [/[;,]/, 'delimiter'],\n            // numbers\n            [/0[xX][0-9a-fA-F](_?[0-9a-fA-F])*/, 'number.hex'],\n            [/0[_oO][0-7](_?[0-7])*/, 'number.octal'],\n            [/0[bB][01](_?[01])*/, 'number.binary'],\n            [/0[dD]@decpart/, 'number'],\n            [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)/, {\n                    cases: {\n                        '$1': 'number.float',\n                        '@default': 'number'\n                    }\n                }],\n        ],\n        // used to not treat a 'do' as a block opener if it occurs on the same\n        // line as a 'do' statement: 'while|until|for'\n        // dodecl.<decl> where decl is the declarations started, like 'while'\n        dodecl: [\n            [/^/, { token: '', switchTo: '@root.$S2' }],\n            [/[a-z_]\\w*[!?=]?/, {\n                    cases: {\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        'do': { token: 'keyword', switchTo: '@root.$S2' },\n                        '@linedecls': { token: '@rematch', switchTo: '@root.$S2' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@root' }\n        ],\n        // used to prevent potential modifiers ('if|until|while|unless') to match\n        // with 'end' keywords.\n        // modifier.<decl>x where decl is the declaration starter, like 'if'\n        modifier: [\n            [/^/, '', '@pop'],\n            [/[a-z_]\\w*[!?=]?/, {\n                    cases: {\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        'then|else|elsif|do': { token: 'keyword', switchTo: '@root.$S2' },\n                        '@linedecls': { token: '@rematch', switchTo: '@root.$S2' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@root' }\n        ],\n        // single quote strings (also used for symbols)\n        // sstring.<kind>  where kind is 'sq' (single quote) or 's' (symbol)\n        sstring: [\n            [/[^\\\\']+/, 'string.$S2'],\n            [/\\\\\\\\|\\\\'|\\\\$/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.invalid'],\n            [/'/, { token: 'string.$S2.delim', next: '@pop' }]\n        ],\n        // double quoted \"string\".\n        // dstring.<kind>.<delim> where kind is 'd' (double quoted), 'x' (command), or 's' (symbol)\n        // and delim is the ending delimiter (\" or `)\n        dstring: [\n            [/[^\\\\`\"#]+/, 'string.$S2'],\n            [/#/, 'string.$S2.escape', '@interpolated'],\n            [/\\\\$/, 'string.$S2.escape'],\n            [/@escapes/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.escape.invalid'],\n            [/[`\"]/, {\n                    cases: {\n                        '$#==$S3': { token: 'string.$S2.delim', next: '@pop' },\n                        '@default': 'string.$S2'\n                    }\n                }]\n        ],\n        // literal documents\n        // heredoc.<close> where close is the closing delimiter\n        heredoc: [\n            [/^(\\s*)(@heredelim)$/, {\n                    cases: {\n                        '$2==$S2': ['string.heredoc', { token: 'string.heredoc.delimiter', next: '@pop' }],\n                        '@default': ['string.heredoc', 'string.heredoc']\n                    }\n                }],\n            [/.*/, 'string.heredoc'],\n        ],\n        // interpolated sequence\n        interpolated: [\n            [/\\$\\w*/, 'global.constant', '@pop'],\n            [/@\\w*/, 'namespace.class.identifier', '@pop'],\n            [/@@\\w*/, 'namespace.instance.identifier', '@pop'],\n            [/[{]/, { token: 'string.escape.curly', switchTo: '@interpolated_compound' }],\n            ['', '', '@pop'],\n        ],\n        // any code\n        interpolated_compound: [\n            [/[}]/, { token: 'string.escape.curly', next: '@pop' }],\n            { include: '@root' },\n        ],\n        // %r quoted regexp\n        // pregexp.<open>.<close> where open/close are the open/close delimiter\n        pregexp: [\n            { include: '@whitespace' },\n            // turns out that you can quote using regex control characters, aargh!\n            // for example; %r|kgjgaj| is ok (even though | is used for alternation)\n            // so, we need to match those first\n            [/[^\\(\\{\\[\\\\]/, {\n                    cases: {\n                        '$#==$S3': { token: 'regexp.delim', next: '@pop' },\n                        '$#==$S2': { token: 'regexp.delim', next: '@push' },\n                        '~[)}\\\\]]': '@brackets.regexp.escape.control',\n                        '~@regexpctl': 'regexp.escape.control',\n                        '@default': 'regexp'\n                    }\n                }],\n            { include: '@regexcontrol' },\n        ],\n        // We match regular expression quite precisely\n        regexp: [\n            { include: '@regexcontrol' },\n            [/[^\\\\\\/]/, 'regexp'],\n            ['/[ixmp]*', { token: 'regexp.delim' }, '@pop'],\n        ],\n        regexcontrol: [\n            [/(\\{)(\\d+(?:,\\d*)?)(\\})/, ['@brackets.regexp.escape.control', 'regexp.escape.control', '@brackets.regexp.escape.control']],\n            [/(\\[)(\\^?)/, ['@brackets.regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]],\n            [/(\\()(\\?[:=!])/, ['@brackets.regexp.escape.control', 'regexp.escape.control']],\n            [/\\(\\?#/, { token: 'regexp.escape.control', next: '@regexpcomment' }],\n            [/[()]/, '@brackets.regexp.escape.control'],\n            [/@regexpctl/, 'regexp.escape.control'],\n            [/\\\\$/, 'regexp.escape'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/\\\\\\./, 'regexp.invalid'],\n            [/#/, 'regexp.escape', '@interpolated'],\n        ],\n        regexrange: [\n            [/-/, 'regexp.escape.control'],\n            [/\\^/, 'regexp.invalid'],\n            [/\\\\$/, 'regexp.escape'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/[^\\]]/, 'regexp'],\n            [/\\]/, '@brackets.regexp.escape.control', '@pop'],\n        ],\n        regexpcomment: [\n            [/[^)]+/, 'comment'],\n            [/\\)/, { token: 'regexp.escape.control', next: '@pop' }]\n        ],\n        // % quoted strings\n        // A bit repetitive since we need to often special case the kind of ending delimiter\n        pstring: [\n            [/%([qws])\\(/, { token: 'string.$1.delim', switchTo: '@qstring.$1.(.)' }],\n            [/%([qws])\\[/, { token: 'string.$1.delim', switchTo: '@qstring.$1.[.]' }],\n            [/%([qws])\\{/, { token: 'string.$1.delim', switchTo: '@qstring.$1.{.}' }],\n            [/%([qws])</, { token: 'string.$1.delim', switchTo: '@qstring.$1.<.>' }],\n            [/%([qws])(@delim)/, { token: 'string.$1.delim', switchTo: '@qstring.$1.$2.$2' }],\n            [/%r\\(/, { token: 'regexp.delim', switchTo: '@pregexp.(.)' }],\n            [/%r\\[/, { token: 'regexp.delim', switchTo: '@pregexp.[.]' }],\n            [/%r\\{/, { token: 'regexp.delim', switchTo: '@pregexp.{.}' }],\n            [/%r</, { token: 'regexp.delim', switchTo: '@pregexp.<.>' }],\n            [/%r(@delim)/, { token: 'regexp.delim', switchTo: '@pregexp.$1.$1' }],\n            [/%(x|W|Q?)\\(/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.(.)' }],\n            [/%(x|W|Q?)\\[/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.[.]' }],\n            [/%(x|W|Q?)\\{/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.{.}' }],\n            [/%(x|W|Q?)</, { token: 'string.$1.delim', switchTo: '@qqstring.$1.<.>' }],\n            [/%(x|W|Q?)(@delim)/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.$2.$2' }],\n            [/%([rqwsxW]|Q?)./, { token: 'invalid', next: '@pop' }],\n            [/./, { token: 'invalid', next: '@pop' }],\n        ],\n        // non-expanded quoted string.\n        // qstring.<kind>.<open>.<close>\n        //  kind = q|w|s  (single quote, array, symbol)\n        //  open = open delimiter\n        //  close = close delimiter\n        qstring: [\n            [/\\\\$/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.escape'],\n            [/./, {\n                    cases: {\n                        '$#==$S4': { token: 'string.$S2.delim', next: '@pop' },\n                        '$#==$S3': { token: 'string.$S2.delim', next: '@push' },\n                        '@default': 'string.$S2'\n                    }\n                }],\n        ],\n        // expanded quoted string.\n        // qqstring.<kind>.<open>.<close>\n        //  kind = Q|W|x  (double quote, array, command)\n        //  open = open delimiter\n        //  close = close delimiter\n        qqstring: [\n            [/#/, 'string.$S2.escape', '@interpolated'],\n            { include: '@qstring' }\n        ],\n        // whitespace & comments\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/^\\s*=begin\\b/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^=]+/, 'comment'],\n            [/^\\s*=begin\\b/, 'comment.invalid'],\n            [/^\\s*=end\\b.*/, 'comment', '@pop'],\n            [/[=]/, 'comment']\n        ],\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    tokenPostfix: '.rust',\n    defaultToken: 'invalid',\n    keywords: [\n        'as', 'box', 'break', 'const', 'continue', 'crate', 'else', 'enum',\n        'extern', 'false', 'fn', 'for', 'if', 'impl', 'in', 'let', 'loop',\n        'match', 'mod', 'move', 'mut', 'pub', 'ref', 'return', 'self',\n        'static', 'struct', 'super', 'trait', 'true', 'type', 'unsafe', 'use',\n        'where', 'while', 'catch', 'default', 'union', 'static', 'abstract',\n        'alignof', 'become', 'do', 'final', 'macro', 'offsetof', 'override',\n        'priv', 'proc', 'pure', 'sizeof', 'typeof', 'unsized', 'virtual',\n        'yield',\n    ],\n    typeKeywords: [\n        'Self', 'm32', 'm64', 'm128', 'f80', 'f16', 'f128', 'int', 'uint',\n        'float', 'char', 'bool', 'u8', 'u16', 'u32', 'u64', 'f32', 'f64', 'i8',\n        'i16', 'i32', 'i64', 'str', 'Option', 'Either', 'c_float', 'c_double',\n        'c_void', 'FILE', 'fpos_t', 'DIR', 'dirent', 'c_char', 'c_schar',\n        'c_uchar', 'c_short', 'c_ushort', 'c_int', 'c_uint', 'c_long',\n        'c_ulong', 'size_t', 'ptrdiff_t', 'clock_t', 'time_t', 'c_longlong',\n        'c_ulonglong', 'intptr_t', 'uintptr_t', 'off_t', 'dev_t', 'ino_t',\n        'pid_t', 'mode_t', 'ssize_t',\n    ],\n    constants: [\n        'true', 'false', 'Some', 'None', 'Left', 'Right', 'Ok', 'Err',\n    ],\n    supportConstants: [\n        'EXIT_FAILURE', 'EXIT_SUCCESS', 'RAND_MAX', 'EOF', 'SEEK_SET',\n        'SEEK_CUR', 'SEEK_END', '_IOFBF', '_IONBF', '_IOLBF', 'BUFSIZ',\n        'FOPEN_MAX', 'FILENAME_MAX', 'L_tmpnam', 'TMP_MAX', 'O_RDONLY',\n        'O_WRONLY', 'O_RDWR', 'O_APPEND', 'O_CREAT', 'O_EXCL', 'O_TRUNC',\n        'S_IFIFO', 'S_IFCHR', 'S_IFBLK', 'S_IFDIR', 'S_IFREG', 'S_IFMT',\n        'S_IEXEC', 'S_IWRITE', 'S_IREAD', 'S_IRWXU', 'S_IXUSR', 'S_IWUSR',\n        'S_IRUSR', 'F_OK', 'R_OK', 'W_OK', 'X_OK', 'STDIN_FILENO',\n        'STDOUT_FILENO', 'STDERR_FILENO',\n    ],\n    supportMacros: [\n        'format!', 'print!', 'println!', 'panic!', 'format_args!', 'unreachable!',\n        'write!', 'writeln!'\n    ],\n    operators: [\n        '!', '!=', '%', '%=', '&', '&=', '&&', '*', '*=', '+', '+=', '-', '-=',\n        '->', '.', '..', '...', '/', '/=', ':', ';', '<<', '<<=', '<', '<=', '=',\n        '==', '=>', '>', '>=', '>>', '>>=', '@', '^', '^=', '|', '|=', '||', '_',\n        '?', '#'\n    ],\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n    delimiters: /[,]/,\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\n    floatSuffixes: /f(32|64)/,\n    tokenizer: {\n        root: [\n            [/[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n                {\n                    cases: {\n                        '@typeKeywords': 'keyword.type',\n                        '@keywords': 'keyword',\n                        '@supportConstants': 'keyword',\n                        '@supportMacros': 'keyword',\n                        '@constants': 'keyword',\n                        '@default': 'identifier',\n                    }\n                }\n            ],\n            // Designator\n            [/\\$/, 'identifier'],\n            // Lifetime annotations\n            [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, 'identifier'],\n            // Byte literal\n            [/'\\S'/, 'string.byteliteral'],\n            // Strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\n            { include: '@numbers' },\n            // Whitespace + comments\n            { include: '@whitespace' },\n            [/@delimiters/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'delimiter'\n                    }\n                }],\n            [/[{}()\\[\\]<>]/, '@brackets'],\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        numbers: [\n            //Octal\n            [/(0o[0-7_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Binary\n            [/(0b[0-1_]+)(@intSuffixes)?/, { token: 'number' }],\n            //Exponent\n            [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: 'number' }],\n            //Float\n            [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: 'number' }],\n            //Hexadecimal\n            [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: 'number' }],\n            //Integer\n            [/[\\d][\\d_]*(@intSuffixes?)?/, { token: 'number' }],\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '\\'',\n    },\n    brackets: [\n        ['(', ')'], ['[', ']'],\n        ['If', 'EndIf'],\n        ['While', 'EndWhile'],\n        ['For', 'EndFor'],\n        ['Sub', 'EndSub']\n    ],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sb',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        // Special bracket statement pairs\n        { token: 'keyword.tag-if', open: 'If', close: 'EndIf' },\n        { token: 'keyword.tag-while', open: 'While', close: 'EndWhile' },\n        { token: 'keyword.tag-for', open: 'For', close: 'EndFor' },\n        { token: 'keyword.tag-sub', open: 'Sub', close: 'EndSub' },\n    ],\n    keywords: [\n        'Else', 'ElseIf', 'EndFor', 'EndIf', 'EndSub', 'EndWhile',\n        'For', 'Goto', 'If', 'Step', 'Sub', 'Then', 'To', 'While'\n    ],\n    tagwords: [\n        'If', 'Sub', 'While', 'For'\n    ],\n    operators: ['>', '<', '<>', '<=', '>=', 'And', 'Or', '+', '-', '*', '/', '='],\n    // we include these common regular expressions\n    identifier: /[a-zA-Z_][\\w]*/,\n    symbols: /[=><:+\\-*\\/%\\.,]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // whitespace\n            { include: '@whitespace' },\n            // classes\n            [/(@identifier)(?=[.])/, 'type'],\n            // identifiers, tagwords, and keywords\n            [/@identifier/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@operators': 'operator',\n                        '@default': 'variable.name'\n                    }\n                }],\n            // methods, properties, and events\n            [/([.])(@identifier)/, {\n                    cases: {\n                        '$2': ['delimiter', 'type.member'],\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\.\\d+/, 'number.float'],\n            [/\\d+/, 'number'],\n            // delimiters and operators\n            [/[()\\[\\]]/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'operator',\n                        '@default': 'delimiter'\n                    }\n                }],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(\\').*$/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"C?/, 'string', '@pop']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: ';',\n        blockComment: ['#|', '|#'],\n    },\n    brackets: [['(', ')'], ['{', '}'], ['[', ']']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.scheme',\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n    ],\n    keywords: [\n        'case',\n        'do',\n        'let',\n        'loop',\n        'if',\n        'else',\n        'when',\n        'cons',\n        'car',\n        'cdr',\n        'cond',\n        'lambda',\n        'lambda*',\n        'syntax-rules',\n        'format',\n        'set!',\n        'quote',\n        'eval',\n        'append',\n        'list',\n        'list?',\n        'member?',\n        'load',\n    ],\n    constants: ['#t', '#f'],\n    operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\n    tokenizer: {\n        root: [\n            [/#[xXoObB][0-9a-fA-F]+/, 'number.hex'],\n            [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'],\n            [\n                /(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/,\n                ['keyword', 'white', 'variable'],\n            ],\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [\n                /[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@constants': 'constant',\n                        '@operators': 'operators',\n                        '@default': 'identifier',\n                    },\n                },\n            ],\n        ],\n        comment: [\n            [/[^\\|#]+/, 'comment'],\n            [/#\\|/, 'comment', '@push'],\n            [/\\|#/, 'comment', '@pop'],\n            [/[\\|#]/, 'comment'],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/#\\|/, 'comment', '@comment'],\n            [/;.*$/, 'comment'],\n        ],\n        strings: [\n            [/\"$/, 'string', '@popall'],\n            [/\"(?=.)/, 'string', '@multiLineString'],\n        ],\n        multiLineString: [\n            [/\\\\./, 'string.escape'],\n            [/\"/, 'string', '@popall'],\n            [/.(?=.*\")/, 'string'],\n            [/.*\\\\$/, 'string'],\n            [/.*$/, 'string', '@popall'],\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n    comments: {\n        blockComment: ['/*', '*/'],\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n            end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.scss',\n    ws: '[ \\t\\n\\r\\f]*',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [\n            { include: '@selector' },\n        ],\n        selector: [\n            { include: '@comments' },\n            { include: '@import' },\n            { include: '@variabledeclaration' },\n            { include: '@warndebug' },\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\n            ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: 'keyword', next: '@keyframedeclaration' }],\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@controlstatement' },\n            { include: '@selectorname' },\n            ['[&\\\\*]', 'tag'],\n            ['[>\\\\+,]', 'delimiter'],\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n        ],\n        selectorbody: [\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\n            { include: '@selector' },\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        selectorname: [\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'],\n        ],\n        selectorattribute: [\n            { include: '@term' },\n            [']', { token: 'delimiter.bracket', next: '@pop' }],\n        ],\n        term: [\n            { include: '@comments' },\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@functioninvocation' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@variablereference' },\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\n            { include: '@name' },\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\n            [',', 'delimiter'],\n            ['!default', 'literal'],\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }],\n        ],\n        rulevalue: [\n            { include: '@term' },\n            ['!important', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        nestedproperty: [\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\n            { include: '@comments' },\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        warndebug: [\n            ['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }],\n        ],\n        import: [\n            ['[@](import)', { token: 'keyword', next: '@declarationbody' }],\n        ],\n        variabledeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        parenthizedterm: [\n            { include: '@term' },\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }],\n        ],\n        declarationbody: [\n            { include: '@term' },\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        extendbody: [\n            { include: '@selectorname' },\n            ['!optional', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n        ],\n        variablereference: [\n            ['\\\\$@identifier', 'variable.ref'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n        ],\n        variableinterpolation: [\n            { include: '@variablereference' },\n            ['}', { token: 'meta', next: '@pop' }],\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment'],\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment'],\n        ],\n        name: [\n            ['@identifier', 'attribute.value'],\n        ],\n        numbers: [\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex'],\n        ],\n        units: [\n            ['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'number', '@pop']\n        ],\n        functiondeclaration: [\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }],\n        ],\n        mixindeclaration: [\n            // mixin with parameters\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            // mixin without parameters\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        parameterdeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            [',', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        includedeclaration: [\n            { include: '@functioninvocation' },\n            ['@identifier', 'meta'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        keyframedeclaration: [\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }],\n        ],\n        keyframebody: [\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        controlstatement: [\n            ['[@](if|else|for|while|each|media)', { token: 'keyword.flow', next: '@controlstatementdeclaration' }],\n        ],\n        controlstatementdeclaration: [\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }],\n        ],\n        functionbody: [\n            ['[@](return)', { token: 'keyword' }],\n            { include: '@variabledeclaration' },\n            { include: '@term' },\n            { include: '@controlstatement' },\n            [';', 'delimiter'],\n            ['}', { token: 'delimiter.curly', next: '@pop' }],\n        ],\n        functioninvocation: [\n            ['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }],\n        ],\n        functionarguments: [\n            ['\\\\$@identifier@ws:', 'attribute.name'],\n            ['[,]', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }],\n        ],\n        strings: [\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\n            ['~?\\'', { token: 'string.delimiter', next: '@stringendquote' }]\n        ],\n        stringenddoublequote: [\n            ['\\\\\\\\.', 'string'],\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ],\n        stringendquote: [\n            ['\\\\\\\\.', 'string'],\n            ['\\'', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.shell',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n    ],\n    keywords: [\n        'if',\n        'then',\n        'do',\n        'else',\n        'elif',\n        'while',\n        'until',\n        'for',\n        'in',\n        'esac',\n        'fi',\n        'fin',\n        'fil',\n        'done',\n        'exit',\n        'set',\n        'unset',\n        'export',\n        'function',\n    ],\n    builtins: [\n        'ab',\n        'awk',\n        'bash',\n        'beep',\n        'cat',\n        'cc',\n        'cd',\n        'chown',\n        'chmod',\n        'chroot',\n        'clear',\n        'cp',\n        'curl',\n        'cut',\n        'diff',\n        'echo',\n        'find',\n        'gawk',\n        'gcc',\n        'get',\n        'git',\n        'grep',\n        'hg',\n        'kill',\n        'killall',\n        'ln',\n        'ls',\n        'make',\n        'mkdir',\n        'openssl',\n        'mv',\n        'nc',\n        'node',\n        'npm',\n        'ping',\n        'ps',\n        'restart',\n        'rm',\n        'rmdir',\n        'sed',\n        'service',\n        'sh',\n        'shopt',\n        'shred',\n        'source',\n        'sort',\n        'sleep',\n        'ssh',\n        'start',\n        'stop',\n        'su',\n        'sudo',\n        'svn',\n        'tee',\n        'telnet',\n        'top',\n        'touch',\n        'vi',\n        'vim',\n        'wall',\n        'wc',\n        'wget',\n        'who',\n        'write',\n        'yes',\n        'zsh',\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            [\n                /[a-zA-Z]\\w*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@builtins': 'type.identifier',\n                        '@default': ''\n                    },\n                },\n            ],\n            { include: '@strings' },\n            { include: '@parameters' },\n            { include: '@heredoc' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            [/-+\\w+/, 'attribute.name'],\n            [/@symbols/, 'delimiter'],\n            { include: '@numbers' },\n            [/[,;]/, 'delimiter'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#!.*$)/, 'metatag'],\n            [/(^#.*$)/, 'comment'],\n        ],\n        numbers: [\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n        ],\n        // Recognize strings, including those broken across lines\n        strings: [\n            [/'/, 'string', '@stringBody'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/'/, 'string', '@popall'],\n            [/./, 'string'],\n        ],\n        dblStringBody: [\n            [/\"/, 'string', '@popall'],\n            [/./, 'string'],\n        ],\n        heredoc: [\n            [/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, ['constants', 'white', 'string.heredoc.delimiter', 'string.heredoc', 'string.heredoc.delimiter']]\n        ],\n        parameters: [\n            [/\\$\\d+/, 'variable.predefined'],\n            [/\\$\\w+/, 'variable'],\n            [/\\$[*@#?\\-$!0_]/, 'variable'],\n            [/\\$['\"{(]/, 'variable', '@parameterBody']\n        ],\n        parameterBody: [\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/['\"{(]/, 'variable', '@pop'],\n            [/./, 'variable']\n        ],\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sol',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.angle', open: '<', close: '>' }\n    ],\n    keywords: [\n        // Main keywords\n        'pragma',\n        'solidity',\n        'contract',\n        'library',\n        'using',\n        'struct',\n        'function',\n        'modifier',\n        //Built-in types\n        'address',\n        'string',\n        'bool',\n        //Other types\n        'Int', 'Uint', 'Byte', 'Fixed', 'Ufixed',\n        //All int\n        'int', 'int8', 'int16', 'int24', 'int32', 'int40', 'int48', 'int56', 'int64', 'int72', 'int80', 'int88', 'int96', 'int104', 'int112', 'int120', 'int128', 'int136', 'int144', 'int152', 'int160', 'int168', 'int176', 'int184', 'int192', 'int200', 'int208', 'int216', 'int224', 'int232', 'int240', 'int248', 'int256',\n        //All uint\n        'uint', 'uint8', 'uint16', 'uint24', 'uint32', 'uint40', 'uint48', 'uint56', 'uint64', 'uint72', 'uint80', 'uint88', 'uint96', 'uint104', 'uint112', 'uint120', 'uint128', 'uint136', 'uint144', 'uint152', 'uint160', 'uint168', 'uint176', 'uint184', 'uint192', 'uint200', 'uint208', 'uint216', 'uint224', 'uint232', 'uint240', 'uint248', 'uint256',\n        //All Byte\n        'byte', 'bytes', 'bytes1', 'bytes2', 'bytes3', 'bytes4', 'bytes5', 'bytes6', 'bytes7', 'bytes8', 'bytes9', 'bytes10', 'bytes11', 'bytes12', 'bytes13', 'bytes14', 'bytes15', 'bytes16', 'bytes17', 'bytes18', 'bytes19', 'bytes20', 'bytes21', 'bytes22', 'bytes23', 'bytes24', 'bytes25', 'bytes26', 'bytes27', 'bytes28', 'bytes29', 'bytes30', 'bytes31', 'bytes32',\n        //All fixed\n        'fixed', 'fixed0x8', 'fixed0x16', 'fixed0x24', 'fixed0x32', 'fixed0x40', 'fixed0x48', 'fixed0x56', 'fixed0x64', 'fixed0x72', 'fixed0x80', 'fixed0x88', 'fixed0x96', 'fixed0x104', 'fixed0x112', 'fixed0x120', 'fixed0x128', 'fixed0x136', 'fixed0x144', 'fixed0x152', 'fixed0x160', 'fixed0x168', 'fixed0x176', 'fixed0x184', 'fixed0x192', 'fixed0x200', 'fixed0x208', 'fixed0x216', 'fixed0x224', 'fixed0x232', 'fixed0x240', 'fixed0x248', 'fixed0x256', 'fixed8x8', 'fixed8x16', 'fixed8x24', 'fixed8x32', 'fixed8x40', 'fixed8x48', 'fixed8x56', 'fixed8x64', 'fixed8x72', 'fixed8x80', 'fixed8x88', 'fixed8x96', 'fixed8x104', 'fixed8x112', 'fixed8x120', 'fixed8x128', 'fixed8x136', 'fixed8x144', 'fixed8x152', 'fixed8x160', 'fixed8x168', 'fixed8x176', 'fixed8x184', 'fixed8x192', 'fixed8x200', 'fixed8x208', 'fixed8x216', 'fixed8x224', 'fixed8x232', 'fixed8x240', 'fixed8x248', 'fixed16x8', 'fixed16x16', 'fixed16x24', 'fixed16x32', 'fixed16x40', 'fixed16x48', 'fixed16x56', 'fixed16x64', 'fixed16x72', 'fixed16x80', 'fixed16x88', 'fixed16x96', 'fixed16x104', 'fixed16x112', 'fixed16x120', 'fixed16x128', 'fixed16x136', 'fixed16x144', 'fixed16x152', 'fixed16x160', 'fixed16x168', 'fixed16x176', 'fixed16x184', 'fixed16x192', 'fixed16x200', 'fixed16x208', 'fixed16x216', 'fixed16x224', 'fixed16x232', 'fixed16x240', 'fixed24x8', 'fixed24x16', 'fixed24x24', 'fixed24x32', 'fixed24x40', 'fixed24x48', 'fixed24x56', 'fixed24x64', 'fixed24x72', 'fixed24x80', 'fixed24x88', 'fixed24x96', 'fixed24x104', 'fixed24x112', 'fixed24x120', 'fixed24x128', 'fixed24x136', 'fixed24x144', 'fixed24x152', 'fixed24x160', 'fixed24x168', 'fixed24x176', 'fixed24x184', 'fixed24x192', 'fixed24x200', 'fixed24x208', 'fixed24x216', 'fixed24x224', 'fixed24x232', 'fixed32x8', 'fixed32x16', 'fixed32x24', 'fixed32x32', 'fixed32x40', 'fixed32x48', 'fixed32x56', 'fixed32x64', 'fixed32x72', 'fixed32x80', 'fixed32x88', 'fixed32x96', 'fixed32x104', 'fixed32x112', 'fixed32x120', 'fixed32x128', 'fixed32x136', 'fixed32x144', 'fixed32x152', 'fixed32x160', 'fixed32x168', 'fixed32x176', 'fixed32x184', 'fixed32x192', 'fixed32x200', 'fixed32x208', 'fixed32x216', 'fixed32x224', 'fixed40x8', 'fixed40x16', 'fixed40x24', 'fixed40x32', 'fixed40x40', 'fixed40x48', 'fixed40x56', 'fixed40x64', 'fixed40x72', 'fixed40x80', 'fixed40x88', 'fixed40x96', 'fixed40x104', 'fixed40x112', 'fixed40x120', 'fixed40x128', 'fixed40x136', 'fixed40x144', 'fixed40x152', 'fixed40x160', 'fixed40x168', 'fixed40x176', 'fixed40x184', 'fixed40x192', 'fixed40x200', 'fixed40x208', 'fixed40x216', 'fixed48x8', 'fixed48x16', 'fixed48x24', 'fixed48x32', 'fixed48x40', 'fixed48x48', 'fixed48x56', 'fixed48x64', 'fixed48x72', 'fixed48x80', 'fixed48x88', 'fixed48x96', 'fixed48x104', 'fixed48x112', 'fixed48x120', 'fixed48x128', 'fixed48x136', 'fixed48x144', 'fixed48x152', 'fixed48x160', 'fixed48x168', 'fixed48x176', 'fixed48x184', 'fixed48x192', 'fixed48x200', 'fixed48x208', 'fixed56x8', 'fixed56x16', 'fixed56x24', 'fixed56x32', 'fixed56x40', 'fixed56x48', 'fixed56x56', 'fixed56x64', 'fixed56x72', 'fixed56x80', 'fixed56x88', 'fixed56x96', 'fixed56x104', 'fixed56x112', 'fixed56x120', 'fixed56x128', 'fixed56x136', 'fixed56x144', 'fixed56x152', 'fixed56x160', 'fixed56x168', 'fixed56x176', 'fixed56x184', 'fixed56x192', 'fixed56x200', 'fixed64x8', 'fixed64x16', 'fixed64x24', 'fixed64x32', 'fixed64x40', 'fixed64x48', 'fixed64x56', 'fixed64x64', 'fixed64x72', 'fixed64x80', 'fixed64x88', 'fixed64x96', 'fixed64x104', 'fixed64x112', 'fixed64x120', 'fixed64x128', 'fixed64x136', 'fixed64x144', 'fixed64x152', 'fixed64x160', 'fixed64x168', 'fixed64x176', 'fixed64x184', 'fixed64x192', 'fixed72x8', 'fixed72x16', 'fixed72x24', 'fixed72x32', 'fixed72x40', 'fixed72x48', 'fixed72x56', 'fixed72x64', 'fixed72x72', 'fixed72x80', 'fixed72x88', 'fixed72x96', 'fixed72x104', 'fixed72x112', 'fixed72x120', 'fixed72x128', 'fixed72x136', 'fixed72x144', 'fixed72x152', 'fixed72x160', 'fixed72x168', 'fixed72x176', 'fixed72x184', 'fixed80x8', 'fixed80x16', 'fixed80x24', 'fixed80x32', 'fixed80x40', 'fixed80x48', 'fixed80x56', 'fixed80x64', 'fixed80x72', 'fixed80x80', 'fixed80x88', 'fixed80x96', 'fixed80x104', 'fixed80x112', 'fixed80x120', 'fixed80x128', 'fixed80x136', 'fixed80x144', 'fixed80x152', 'fixed80x160', 'fixed80x168', 'fixed80x176', 'fixed88x8', 'fixed88x16', 'fixed88x24', 'fixed88x32', 'fixed88x40', 'fixed88x48', 'fixed88x56', 'fixed88x64', 'fixed88x72', 'fixed88x80', 'fixed88x88', 'fixed88x96', 'fixed88x104', 'fixed88x112', 'fixed88x120', 'fixed88x128', 'fixed88x136', 'fixed88x144', 'fixed88x152', 'fixed88x160', 'fixed88x168', 'fixed96x8', 'fixed96x16', 'fixed96x24', 'fixed96x32', 'fixed96x40', 'fixed96x48', 'fixed96x56', 'fixed96x64', 'fixed96x72', 'fixed96x80', 'fixed96x88', 'fixed96x96', 'fixed96x104', 'fixed96x112', 'fixed96x120', 'fixed96x128', 'fixed96x136', 'fixed96x144', 'fixed96x152', 'fixed96x160', 'fixed104x8', 'fixed104x16', 'fixed104x24', 'fixed104x32', 'fixed104x40', 'fixed104x48', 'fixed104x56', 'fixed104x64', 'fixed104x72', 'fixed104x80', 'fixed104x88', 'fixed104x96', 'fixed104x104', 'fixed104x112', 'fixed104x120', 'fixed104x128', 'fixed104x136', 'fixed104x144', 'fixed104x152', 'fixed112x8', 'fixed112x16', 'fixed112x24', 'fixed112x32', 'fixed112x40', 'fixed112x48', 'fixed112x56', 'fixed112x64', 'fixed112x72', 'fixed112x80', 'fixed112x88', 'fixed112x96', 'fixed112x104', 'fixed112x112', 'fixed112x120', 'fixed112x128', 'fixed112x136', 'fixed112x144', 'fixed120x8', 'fixed120x16', 'fixed120x24', 'fixed120x32', 'fixed120x40', 'fixed120x48', 'fixed120x56', 'fixed120x64', 'fixed120x72', 'fixed120x80', 'fixed120x88', 'fixed120x96', 'fixed120x104', 'fixed120x112', 'fixed120x120', 'fixed120x128', 'fixed120x136', 'fixed128x8', 'fixed128x16', 'fixed128x24', 'fixed128x32', 'fixed128x40', 'fixed128x48', 'fixed128x56', 'fixed128x64', 'fixed128x72', 'fixed128x80', 'fixed128x88', 'fixed128x96', 'fixed128x104', 'fixed128x112', 'fixed128x120', 'fixed128x128', 'fixed136x8', 'fixed136x16', 'fixed136x24', 'fixed136x32', 'fixed136x40', 'fixed136x48', 'fixed136x56', 'fixed136x64', 'fixed136x72', 'fixed136x80', 'fixed136x88', 'fixed136x96', 'fixed136x104', 'fixed136x112', 'fixed136x120', 'fixed144x8', 'fixed144x16', 'fixed144x24', 'fixed144x32', 'fixed144x40', 'fixed144x48', 'fixed144x56', 'fixed144x64', 'fixed144x72', 'fixed144x80', 'fixed144x88', 'fixed144x96', 'fixed144x104', 'fixed144x112', 'fixed152x8', 'fixed152x16', 'fixed152x24', 'fixed152x32', 'fixed152x40', 'fixed152x48', 'fixed152x56', 'fixed152x64', 'fixed152x72', 'fixed152x80', 'fixed152x88', 'fixed152x96', 'fixed152x104', 'fixed160x8', 'fixed160x16', 'fixed160x24', 'fixed160x32', 'fixed160x40', 'fixed160x48', 'fixed160x56', 'fixed160x64', 'fixed160x72', 'fixed160x80', 'fixed160x88', 'fixed160x96', 'fixed168x8', 'fixed168x16', 'fixed168x24', 'fixed168x32', 'fixed168x40', 'fixed168x48', 'fixed168x56', 'fixed168x64', 'fixed168x72', 'fixed168x80', 'fixed168x88', 'fixed176x8', 'fixed176x16', 'fixed176x24', 'fixed176x32', 'fixed176x40', 'fixed176x48', 'fixed176x56', 'fixed176x64', 'fixed176x72', 'fixed176x80', 'fixed184x8', 'fixed184x16', 'fixed184x24', 'fixed184x32', 'fixed184x40', 'fixed184x48', 'fixed184x56', 'fixed184x64', 'fixed184x72', 'fixed192x8', 'fixed192x16', 'fixed192x24', 'fixed192x32', 'fixed192x40', 'fixed192x48', 'fixed192x56', 'fixed192x64', 'fixed200x8', 'fixed200x16', 'fixed200x24', 'fixed200x32', 'fixed200x40', 'fixed200x48', 'fixed200x56', 'fixed208x8', 'fixed208x16', 'fixed208x24', 'fixed208x32', 'fixed208x40', 'fixed208x48', 'fixed216x8', 'fixed216x16', 'fixed216x24', 'fixed216x32', 'fixed216x40', 'fixed224x8', 'fixed224x16', 'fixed224x24', 'fixed224x32', 'fixed232x8', 'fixed232x16', 'fixed232x24', 'fixed240x8', 'fixed240x16', 'fixed248x8',\n        //All ufixed\n        'ufixed', 'ufixed0x8', 'ufixed0x16', 'ufixed0x24', 'ufixed0x32', 'ufixed0x40', 'ufixed0x48', 'ufixed0x56', 'ufixed0x64', 'ufixed0x72', 'ufixed0x80', 'ufixed0x88', 'ufixed0x96', 'ufixed0x104', 'ufixed0x112', 'ufixed0x120', 'ufixed0x128', 'ufixed0x136', 'ufixed0x144', 'ufixed0x152', 'ufixed0x160', 'ufixed0x168', 'ufixed0x176', 'ufixed0x184', 'ufixed0x192', 'ufixed0x200', 'ufixed0x208', 'ufixed0x216', 'ufixed0x224', 'ufixed0x232', 'ufixed0x240', 'ufixed0x248', 'ufixed0x256', 'ufixed8x8', 'ufixed8x16', 'ufixed8x24', 'ufixed8x32', 'ufixed8x40', 'ufixed8x48', 'ufixed8x56', 'ufixed8x64', 'ufixed8x72', 'ufixed8x80', 'ufixed8x88', 'ufixed8x96', 'ufixed8x104', 'ufixed8x112', 'ufixed8x120', 'ufixed8x128', 'ufixed8x136', 'ufixed8x144', 'ufixed8x152', 'ufixed8x160', 'ufixed8x168', 'ufixed8x176', 'ufixed8x184', 'ufixed8x192', 'ufixed8x200', 'ufixed8x208', 'ufixed8x216', 'ufixed8x224', 'ufixed8x232', 'ufixed8x240', 'ufixed8x248', 'ufixed16x8', 'ufixed16x16', 'ufixed16x24', 'ufixed16x32', 'ufixed16x40', 'ufixed16x48', 'ufixed16x56', 'ufixed16x64', 'ufixed16x72', 'ufixed16x80', 'ufixed16x88', 'ufixed16x96', 'ufixed16x104', 'ufixed16x112', 'ufixed16x120', 'ufixed16x128', 'ufixed16x136', 'ufixed16x144', 'ufixed16x152', 'ufixed16x160', 'ufixed16x168', 'ufixed16x176', 'ufixed16x184', 'ufixed16x192', 'ufixed16x200', 'ufixed16x208', 'ufixed16x216', 'ufixed16x224', 'ufixed16x232', 'ufixed16x240', 'ufixed24x8', 'ufixed24x16', 'ufixed24x24', 'ufixed24x32', 'ufixed24x40', 'ufixed24x48', 'ufixed24x56', 'ufixed24x64', 'ufixed24x72', 'ufixed24x80', 'ufixed24x88', 'ufixed24x96', 'ufixed24x104', 'ufixed24x112', 'ufixed24x120', 'ufixed24x128', 'ufixed24x136', 'ufixed24x144', 'ufixed24x152', 'ufixed24x160', 'ufixed24x168', 'ufixed24x176', 'ufixed24x184', 'ufixed24x192', 'ufixed24x200', 'ufixed24x208', 'ufixed24x216', 'ufixed24x224', 'ufixed24x232', 'ufixed32x8', 'ufixed32x16', 'ufixed32x24', 'ufixed32x32', 'ufixed32x40', 'ufixed32x48', 'ufixed32x56', 'ufixed32x64', 'ufixed32x72', 'ufixed32x80', 'ufixed32x88', 'ufixed32x96', 'ufixed32x104', 'ufixed32x112', 'ufixed32x120', 'ufixed32x128', 'ufixed32x136', 'ufixed32x144', 'ufixed32x152', 'ufixed32x160', 'ufixed32x168', 'ufixed32x176', 'ufixed32x184', 'ufixed32x192', 'ufixed32x200', 'ufixed32x208', 'ufixed32x216', 'ufixed32x224', 'ufixed40x8', 'ufixed40x16', 'ufixed40x24', 'ufixed40x32', 'ufixed40x40', 'ufixed40x48', 'ufixed40x56', 'ufixed40x64', 'ufixed40x72', 'ufixed40x80', 'ufixed40x88', 'ufixed40x96', 'ufixed40x104', 'ufixed40x112', 'ufixed40x120', 'ufixed40x128', 'ufixed40x136', 'ufixed40x144', 'ufixed40x152', 'ufixed40x160', 'ufixed40x168', 'ufixed40x176', 'ufixed40x184', 'ufixed40x192', 'ufixed40x200', 'ufixed40x208', 'ufixed40x216', 'ufixed48x8', 'ufixed48x16', 'ufixed48x24', 'ufixed48x32', 'ufixed48x40', 'ufixed48x48', 'ufixed48x56', 'ufixed48x64', 'ufixed48x72', 'ufixed48x80', 'ufixed48x88', 'ufixed48x96', 'ufixed48x104', 'ufixed48x112', 'ufixed48x120', 'ufixed48x128', 'ufixed48x136', 'ufixed48x144', 'ufixed48x152', 'ufixed48x160', 'ufixed48x168', 'ufixed48x176', 'ufixed48x184', 'ufixed48x192', 'ufixed48x200', 'ufixed48x208', 'ufixed56x8', 'ufixed56x16', 'ufixed56x24', 'ufixed56x32', 'ufixed56x40', 'ufixed56x48', 'ufixed56x56', 'ufixed56x64', 'ufixed56x72', 'ufixed56x80', 'ufixed56x88', 'ufixed56x96', 'ufixed56x104', 'ufixed56x112', 'ufixed56x120', 'ufixed56x128', 'ufixed56x136', 'ufixed56x144', 'ufixed56x152', 'ufixed56x160', 'ufixed56x168', 'ufixed56x176', 'ufixed56x184', 'ufixed56x192', 'ufixed56x200', 'ufixed64x8', 'ufixed64x16', 'ufixed64x24', 'ufixed64x32', 'ufixed64x40', 'ufixed64x48', 'ufixed64x56', 'ufixed64x64', 'ufixed64x72', 'ufixed64x80', 'ufixed64x88', 'ufixed64x96', 'ufixed64x104', 'ufixed64x112', 'ufixed64x120', 'ufixed64x128', 'ufixed64x136', 'ufixed64x144', 'ufixed64x152', 'ufixed64x160', 'ufixed64x168', 'ufixed64x176', 'ufixed64x184', 'ufixed64x192', 'ufixed72x8', 'ufixed72x16', 'ufixed72x24', 'ufixed72x32', 'ufixed72x40', 'ufixed72x48', 'ufixed72x56', 'ufixed72x64', 'ufixed72x72', 'ufixed72x80', 'ufixed72x88', 'ufixed72x96', 'ufixed72x104', 'ufixed72x112', 'ufixed72x120', 'ufixed72x128', 'ufixed72x136', 'ufixed72x144', 'ufixed72x152', 'ufixed72x160', 'ufixed72x168', 'ufixed72x176', 'ufixed72x184', 'ufixed80x8', 'ufixed80x16', 'ufixed80x24', 'ufixed80x32', 'ufixed80x40', 'ufixed80x48', 'ufixed80x56', 'ufixed80x64', 'ufixed80x72', 'ufixed80x80', 'ufixed80x88', 'ufixed80x96', 'ufixed80x104', 'ufixed80x112', 'ufixed80x120', 'ufixed80x128', 'ufixed80x136', 'ufixed80x144', 'ufixed80x152', 'ufixed80x160', 'ufixed80x168', 'ufixed80x176', 'ufixed88x8', 'ufixed88x16', 'ufixed88x24', 'ufixed88x32', 'ufixed88x40', 'ufixed88x48', 'ufixed88x56', 'ufixed88x64', 'ufixed88x72', 'ufixed88x80', 'ufixed88x88', 'ufixed88x96', 'ufixed88x104', 'ufixed88x112', 'ufixed88x120', 'ufixed88x128', 'ufixed88x136', 'ufixed88x144', 'ufixed88x152', 'ufixed88x160', 'ufixed88x168', 'ufixed96x8', 'ufixed96x16', 'ufixed96x24', 'ufixed96x32', 'ufixed96x40', 'ufixed96x48', 'ufixed96x56', 'ufixed96x64', 'ufixed96x72', 'ufixed96x80', 'ufixed96x88', 'ufixed96x96', 'ufixed96x104', 'ufixed96x112', 'ufixed96x120', 'ufixed96x128', 'ufixed96x136', 'ufixed96x144', 'ufixed96x152', 'ufixed96x160', 'ufixed104x8', 'ufixed104x16', 'ufixed104x24', 'ufixed104x32', 'ufixed104x40', 'ufixed104x48', 'ufixed104x56', 'ufixed104x64', 'ufixed104x72', 'ufixed104x80', 'ufixed104x88', 'ufixed104x96', 'ufixed104x104', 'ufixed104x112', 'ufixed104x120', 'ufixed104x128', 'ufixed104x136', 'ufixed104x144', 'ufixed104x152', 'ufixed112x8', 'ufixed112x16', 'ufixed112x24', 'ufixed112x32', 'ufixed112x40', 'ufixed112x48', 'ufixed112x56', 'ufixed112x64', 'ufixed112x72', 'ufixed112x80', 'ufixed112x88', 'ufixed112x96', 'ufixed112x104', 'ufixed112x112', 'ufixed112x120', 'ufixed112x128', 'ufixed112x136', 'ufixed112x144', 'ufixed120x8', 'ufixed120x16', 'ufixed120x24', 'ufixed120x32', 'ufixed120x40', 'ufixed120x48', 'ufixed120x56', 'ufixed120x64', 'ufixed120x72', 'ufixed120x80', 'ufixed120x88', 'ufixed120x96', 'ufixed120x104', 'ufixed120x112', 'ufixed120x120', 'ufixed120x128', 'ufixed120x136', 'ufixed128x8', 'ufixed128x16', 'ufixed128x24', 'ufixed128x32', 'ufixed128x40', 'ufixed128x48', 'ufixed128x56', 'ufixed128x64', 'ufixed128x72', 'ufixed128x80', 'ufixed128x88', 'ufixed128x96', 'ufixed128x104', 'ufixed128x112', 'ufixed128x120', 'ufixed128x128', 'ufixed136x8', 'ufixed136x16', 'ufixed136x24', 'ufixed136x32', 'ufixed136x40', 'ufixed136x48', 'ufixed136x56', 'ufixed136x64', 'ufixed136x72', 'ufixed136x80', 'ufixed136x88', 'ufixed136x96', 'ufixed136x104', 'ufixed136x112', 'ufixed136x120', 'ufixed144x8', 'ufixed144x16', 'ufixed144x24', 'ufixed144x32', 'ufixed144x40', 'ufixed144x48', 'ufixed144x56', 'ufixed144x64', 'ufixed144x72', 'ufixed144x80', 'ufixed144x88', 'ufixed144x96', 'ufixed144x104', 'ufixed144x112', 'ufixed152x8', 'ufixed152x16', 'ufixed152x24', 'ufixed152x32', 'ufixed152x40', 'ufixed152x48', 'ufixed152x56', 'ufixed152x64', 'ufixed152x72', 'ufixed152x80', 'ufixed152x88', 'ufixed152x96', 'ufixed152x104', 'ufixed160x8', 'ufixed160x16', 'ufixed160x24', 'ufixed160x32', 'ufixed160x40', 'ufixed160x48', 'ufixed160x56', 'ufixed160x64', 'ufixed160x72', 'ufixed160x80', 'ufixed160x88', 'ufixed160x96', 'ufixed168x8', 'ufixed168x16', 'ufixed168x24', 'ufixed168x32', 'ufixed168x40', 'ufixed168x48', 'ufixed168x56', 'ufixed168x64', 'ufixed168x72', 'ufixed168x80', 'ufixed168x88', 'ufixed176x8', 'ufixed176x16', 'ufixed176x24', 'ufixed176x32', 'ufixed176x40', 'ufixed176x48', 'ufixed176x56', 'ufixed176x64', 'ufixed176x72', 'ufixed176x80', 'ufixed184x8', 'ufixed184x16', 'ufixed184x24', 'ufixed184x32', 'ufixed184x40', 'ufixed184x48', 'ufixed184x56', 'ufixed184x64', 'ufixed184x72', 'ufixed192x8', 'ufixed192x16', 'ufixed192x24', 'ufixed192x32', 'ufixed192x40', 'ufixed192x48', 'ufixed192x56', 'ufixed192x64', 'ufixed200x8', 'ufixed200x16', 'ufixed200x24', 'ufixed200x32', 'ufixed200x40', 'ufixed200x48', 'ufixed200x56', 'ufixed208x8', 'ufixed208x16', 'ufixed208x24', 'ufixed208x32', 'ufixed208x40', 'ufixed208x48', 'ufixed216x8', 'ufixed216x16', 'ufixed216x24', 'ufixed216x32', 'ufixed216x40', 'ufixed224x8', 'ufixed224x16', 'ufixed224x24', 'ufixed224x32', 'ufixed232x8', 'ufixed232x16', 'ufixed232x24', 'ufixed240x8', 'ufixed240x16', 'ufixed248x8',\n        'event',\n        'enum',\n        'let',\n        'mapping',\n        'private',\n        'public',\n        'external',\n        'inherited',\n        'payable',\n        'true',\n        'false',\n        'var',\n        'import',\n        'constant',\n        'if',\n        'else',\n        'for',\n        'else',\n        'for',\n        'while',\n        'do',\n        'break',\n        'continue',\n        'throw',\n        'returns',\n        'return',\n        'suicide',\n        'new',\n        'is',\n        'this',\n        'super'\n    ],\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\n    floatsuffix: /[fFlL]?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // [[ attributes ]].\n            [/\\[\\[.*\\]\\]/, 'annotation'],\n            // Preprocessor directive\n            [/^\\s*#\\w+/, 'keyword'],\n            //DataTypes\n            [/int\\d*/, 'keyword'],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n            [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\n            [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\n            [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\n            [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\n            [/\\d(@integersuffix)/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        doccomment: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, 'string', '@pop']\n        ],\n    },\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '--',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.sql',\n    ignoreCase: true,\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    keywords: [\n        'ABORT_AFTER_WAIT',\n        'ABSENT',\n        'ABSOLUTE',\n        'ACCENT_SENSITIVITY',\n        'ACTION',\n        'ACTIVATION',\n        'ACTIVE',\n        'ADD',\n        'ADDRESS',\n        'ADMIN',\n        'AES',\n        'AES_128',\n        'AES_192',\n        'AES_256',\n        'AFFINITY',\n        'AFTER',\n        'AGGREGATE',\n        'ALGORITHM',\n        'ALL_CONSTRAINTS',\n        'ALL_ERRORMSGS',\n        'ALL_INDEXES',\n        'ALL_LEVELS',\n        'ALL_SPARSE_COLUMNS',\n        'ALLOW_CONNECTIONS',\n        'ALLOW_MULTIPLE_EVENT_LOSS',\n        'ALLOW_PAGE_LOCKS',\n        'ALLOW_ROW_LOCKS',\n        'ALLOW_SINGLE_EVENT_LOSS',\n        'ALLOW_SNAPSHOT_ISOLATION',\n        'ALLOWED',\n        'ALTER',\n        'ANONYMOUS',\n        'ANSI_DEFAULTS',\n        'ANSI_NULL_DEFAULT',\n        'ANSI_NULL_DFLT_OFF',\n        'ANSI_NULL_DFLT_ON',\n        'ANSI_NULLS',\n        'ANSI_PADDING',\n        'ANSI_WARNINGS',\n        'APPEND',\n        'APPLICATION',\n        'APPLICATION_LOG',\n        'ARITHABORT',\n        'ARITHIGNORE',\n        'AS',\n        'ASC',\n        'ASSEMBLY',\n        'ASYMMETRIC',\n        'ASYNCHRONOUS_COMMIT',\n        'AT',\n        'ATOMIC',\n        'ATTACH',\n        'ATTACH_REBUILD_LOG',\n        'AUDIT',\n        'AUDIT_GUID',\n        'AUTHENTICATION',\n        'AUTHORIZATION',\n        'AUTO',\n        'AUTO_CLEANUP',\n        'AUTO_CLOSE',\n        'AUTO_CREATE_STATISTICS',\n        'AUTO_SHRINK',\n        'AUTO_UPDATE_STATISTICS',\n        'AUTO_UPDATE_STATISTICS_ASYNC',\n        'AUTOMATED_BACKUP_PREFERENCE',\n        'AUTOMATIC',\n        'AVAILABILITY',\n        'AVAILABILITY_MODE',\n        'BACKUP',\n        'BACKUP_PRIORITY',\n        'BASE64',\n        'BATCHSIZE',\n        'BEGIN',\n        'BEGIN_DIALOG',\n        'BIGINT',\n        'BINARY',\n        'BINDING',\n        'BIT',\n        'BLOCKERS',\n        'BLOCKSIZE',\n        'BOUNDING_BOX',\n        'BREAK',\n        'BROKER',\n        'BROKER_INSTANCE',\n        'BROWSE',\n        'BUCKET_COUNT',\n        'BUFFER',\n        'BUFFERCOUNT',\n        'BULK',\n        'BULK_LOGGED',\n        'BY',\n        'CACHE',\n        'CALL',\n        'CALLED',\n        'CALLER',\n        'CAP_CPU_PERCENT',\n        'CASCADE',\n        'CASE',\n        'CATALOG',\n        'CATCH',\n        'CELLS_PER_OBJECT',\n        'CERTIFICATE',\n        'CHANGE_RETENTION',\n        'CHANGE_TRACKING',\n        'CHANGES',\n        'CHAR',\n        'CHARACTER',\n        'CHECK',\n        'CHECK_CONSTRAINTS',\n        'CHECK_EXPIRATION',\n        'CHECK_POLICY',\n        'CHECKALLOC',\n        'CHECKCATALOG',\n        'CHECKCONSTRAINTS',\n        'CHECKDB',\n        'CHECKFILEGROUP',\n        'CHECKIDENT',\n        'CHECKPOINT',\n        'CHECKTABLE',\n        'CLASSIFIER_FUNCTION',\n        'CLEANTABLE',\n        'CLEANUP',\n        'CLEAR',\n        'CLOSE',\n        'CLUSTER',\n        'CLUSTERED',\n        'CODEPAGE',\n        'COLLATE',\n        'COLLECTION',\n        'COLUMN',\n        'COLUMN_SET',\n        'COLUMNS',\n        'COLUMNSTORE',\n        'COLUMNSTORE_ARCHIVE',\n        'COMMIT',\n        'COMMITTED',\n        'COMPATIBILITY_LEVEL',\n        'COMPRESSION',\n        'COMPUTE',\n        'CONCAT',\n        'CONCAT_NULL_YIELDS_NULL',\n        'CONFIGURATION',\n        'CONNECT',\n        'CONSTRAINT',\n        'CONTAINMENT',\n        'CONTENT',\n        'CONTEXT',\n        'CONTINUE',\n        'CONTINUE_AFTER_ERROR',\n        'CONTRACT',\n        'CONTRACT_NAME',\n        'CONTROL',\n        'CONVERSATION',\n        'COOKIE',\n        'COPY_ONLY',\n        'COUNTER',\n        'CPU',\n        'CREATE',\n        'CREATE_NEW',\n        'CREATION_DISPOSITION',\n        'CREDENTIAL',\n        'CRYPTOGRAPHIC',\n        'CUBE',\n        'CURRENT',\n        'CURRENT_DATE',\n        'CURSOR',\n        'CURSOR_CLOSE_ON_COMMIT',\n        'CURSOR_DEFAULT',\n        'CYCLE',\n        'DATA',\n        'DATA_COMPRESSION',\n        'DATA_PURITY',\n        'DATABASE',\n        'DATABASE_DEFAULT',\n        'DATABASE_MIRRORING',\n        'DATABASE_SNAPSHOT',\n        'DATAFILETYPE',\n        'DATE',\n        'DATE_CORRELATION_OPTIMIZATION',\n        'DATEFIRST',\n        'DATEFORMAT',\n        'DATETIME',\n        'DATETIME2',\n        'DATETIMEOFFSET',\n        'DAY',\n        'DAYOFYEAR',\n        'DAYS',\n        'DB_CHAINING',\n        'DBCC',\n        'DBREINDEX',\n        'DDL_DATABASE_LEVEL_EVENTS',\n        'DEADLOCK_PRIORITY',\n        'DEALLOCATE',\n        'DEC',\n        'DECIMAL',\n        'DECLARE',\n        'DECRYPTION',\n        'DEFAULT',\n        'DEFAULT_DATABASE',\n        'DEFAULT_FULLTEXT_LANGUAGE',\n        'DEFAULT_LANGUAGE',\n        'DEFAULT_SCHEMA',\n        'DEFINITION',\n        'DELAY',\n        'DELAYED_DURABILITY',\n        'DELETE',\n        'DELETED',\n        'DENSITY_VECTOR',\n        'DENY',\n        'DEPENDENTS',\n        'DES',\n        'DESC',\n        'DESCRIPTION',\n        'DESX',\n        'DHCP',\n        'DIAGNOSTICS',\n        'DIALOG',\n        'DIFFERENTIAL',\n        'DIRECTORY_NAME',\n        'DISABLE',\n        'DISABLE_BROKER',\n        'DISABLED',\n        'DISK',\n        'DISTINCT',\n        'DISTRIBUTED',\n        'DOCUMENT',\n        'DOUBLE',\n        'DROP',\n        'DROP_EXISTING',\n        'DROPCLEANBUFFERS',\n        'DUMP',\n        'DURABILITY',\n        'DYNAMIC',\n        'EDITION',\n        'ELEMENTS',\n        'ELSE',\n        'EMERGENCY',\n        'EMPTY',\n        'EMPTYFILE',\n        'ENABLE',\n        'ENABLE_BROKER',\n        'ENABLED',\n        'ENCRYPTION',\n        'END',\n        'ENDPOINT',\n        'ENDPOINT_URL',\n        'ERRLVL',\n        'ERROR',\n        'ERROR_BROKER_CONVERSATIONS',\n        'ERRORFILE',\n        'ESCAPE',\n        'ESTIMATEONLY',\n        'EVENT',\n        'EVENT_RETENTION_MODE',\n        'EXEC',\n        'EXECUTABLE',\n        'EXECUTE',\n        'EXIT',\n        'EXPAND',\n        'EXPIREDATE',\n        'EXPIRY_DATE',\n        'EXPLICIT',\n        'EXTENDED_LOGICAL_CHECKS',\n        'EXTENSION',\n        'EXTERNAL',\n        'EXTERNAL_ACCESS',\n        'FAIL_OPERATION',\n        'FAILOVER',\n        'FAILOVER_MODE',\n        'FAILURE_CONDITION_LEVEL',\n        'FALSE',\n        'FAN_IN',\n        'FAST',\n        'FAST_FORWARD',\n        'FETCH',\n        'FIELDTERMINATOR',\n        'FILE',\n        'FILEGROUP',\n        'FILEGROWTH',\n        'FILELISTONLY',\n        'FILENAME',\n        'FILEPATH',\n        'FILESTREAM',\n        'FILESTREAM_ON',\n        'FILETABLE_COLLATE_FILENAME',\n        'FILETABLE_DIRECTORY',\n        'FILETABLE_FULLPATH_UNIQUE_CONSTRAINT_NAME',\n        'FILETABLE_NAMESPACE',\n        'FILETABLE_PRIMARY_KEY_CONSTRAINT_NAME',\n        'FILETABLE_STREAMID_UNIQUE_CONSTRAINT_NAME',\n        'FILLFACTOR',\n        'FILTERING',\n        'FIRE_TRIGGERS',\n        'FIRST',\n        'FIRSTROW',\n        'FLOAT',\n        'FMTONLY',\n        'FOLLOWING',\n        'FOR',\n        'FORCE',\n        'FORCE_FAILOVER_ALLOW_DATA_LOSS',\n        'FORCE_SERVICE_ALLOW_DATA_LOSS',\n        'FORCED',\n        'FORCEPLAN',\n        'FORCESCAN',\n        'FORCESEEK',\n        'FOREIGN',\n        'FORMATFILE',\n        'FORMSOF',\n        'FORWARD_ONLY',\n        'FREE',\n        'FREEPROCCACHE',\n        'FREESESSIONCACHE',\n        'FREESYSTEMCACHE',\n        'FROM',\n        'FULL',\n        'FULLSCAN',\n        'FULLTEXT',\n        'FUNCTION',\n        'GB',\n        'GEOGRAPHY_AUTO_GRID',\n        'GEOGRAPHY_GRID',\n        'GEOMETRY_AUTO_GRID',\n        'GEOMETRY_GRID',\n        'GET',\n        'GLOBAL',\n        'GO',\n        'GOTO',\n        'GOVERNOR',\n        'GRANT',\n        'GRIDS',\n        'GROUP',\n        'GROUP_MAX_REQUESTS',\n        'HADR',\n        'HASH',\n        'HASHED',\n        'HAVING',\n        'HEADERONLY',\n        'HEALTH_CHECK_TIMEOUT',\n        'HELP',\n        'HIERARCHYID',\n        'HIGH',\n        'HINT',\n        'HISTOGRAM',\n        'HOLDLOCK',\n        'HONOR_BROKER_PRIORITY',\n        'HOUR',\n        'HOURS',\n        'IDENTITY',\n        'IDENTITY_INSERT',\n        'IDENTITY_VALUE',\n        'IDENTITYCOL',\n        'IF',\n        'IGNORE_CONSTRAINTS',\n        'IGNORE_DUP_KEY',\n        'IGNORE_NONCLUSTERED_COLUMNSTORE_INDEX',\n        'IGNORE_TRIGGERS',\n        'IMAGE',\n        'IMMEDIATE',\n        'IMPERSONATE',\n        'IMPLICIT_TRANSACTIONS',\n        'IMPORTANCE',\n        'INCLUDE',\n        'INCREMENT',\n        'INCREMENTAL',\n        'INDEX',\n        'INDEXDEFRAG',\n        'INFINITE',\n        'INFLECTIONAL',\n        'INIT',\n        'INITIATOR',\n        'INPUT',\n        'INPUTBUFFER',\n        'INSENSITIVE',\n        'INSERT',\n        'INSERTED',\n        'INSTEAD',\n        'INT',\n        'INTEGER',\n        'INTO',\n        'IO',\n        'IP',\n        'ISABOUT',\n        'ISOLATION',\n        'JOB',\n        'KB',\n        'KEEP',\n        'KEEP_CDC',\n        'KEEP_NULLS',\n        'KEEP_REPLICATION',\n        'KEEPDEFAULTS',\n        'KEEPFIXED',\n        'KEEPIDENTITY',\n        'KEEPNULLS',\n        'KERBEROS',\n        'KEY',\n        'KEY_SOURCE',\n        'KEYS',\n        'KEYSET',\n        'KILL',\n        'KILOBYTES_PER_BATCH',\n        'LABELONLY',\n        'LANGUAGE',\n        'LAST',\n        'LASTROW',\n        'LEVEL',\n        'LEVEL_1',\n        'LEVEL_2',\n        'LEVEL_3',\n        'LEVEL_4',\n        'LIFETIME',\n        'LIMIT',\n        'LINENO',\n        'LIST',\n        'LISTENER',\n        'LISTENER_IP',\n        'LISTENER_PORT',\n        'LOAD',\n        'LOADHISTORY',\n        'LOB_COMPACTION',\n        'LOCAL',\n        'LOCAL_SERVICE_NAME',\n        'LOCK_ESCALATION',\n        'LOCK_TIMEOUT',\n        'LOGIN',\n        'LOGSPACE',\n        'LOOP',\n        'LOW',\n        'MANUAL',\n        'MARK',\n        'MARK_IN_USE_FOR_REMOVAL',\n        'MASTER',\n        'MAX_CPU_PERCENT',\n        'MAX_DISPATCH_LATENCY',\n        'MAX_DOP',\n        'MAX_DURATION',\n        'MAX_EVENT_SIZE',\n        'MAX_FILES',\n        'MAX_IOPS_PER_VOLUME',\n        'MAX_MEMORY',\n        'MAX_MEMORY_PERCENT',\n        'MAX_QUEUE_READERS',\n        'MAX_ROLLOVER_FILES',\n        'MAX_SIZE',\n        'MAXDOP',\n        'MAXERRORS',\n        'MAXLENGTH',\n        'MAXRECURSION',\n        'MAXSIZE',\n        'MAXTRANSFERSIZE',\n        'MAXVALUE',\n        'MB',\n        'MEDIADESCRIPTION',\n        'MEDIANAME',\n        'MEDIAPASSWORD',\n        'MEDIUM',\n        'MEMBER',\n        'MEMORY_OPTIMIZED',\n        'MEMORY_OPTIMIZED_DATA',\n        'MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT',\n        'MEMORY_PARTITION_MODE',\n        'MERGE',\n        'MESSAGE',\n        'MESSAGE_FORWARD_SIZE',\n        'MESSAGE_FORWARDING',\n        'MICROSECOND',\n        'MILLISECOND',\n        'MIN_CPU_PERCENT',\n        'MIN_IOPS_PER_VOLUME',\n        'MIN_MEMORY_PERCENT',\n        'MINUTE',\n        'MINUTES',\n        'MINVALUE',\n        'MIRROR',\n        'MIRROR_ADDRESS',\n        'MODIFY',\n        'MONEY',\n        'MONTH',\n        'MOVE',\n        'MULTI_USER',\n        'MUST_CHANGE',\n        'NAME',\n        'NANOSECOND',\n        'NATIONAL',\n        'NATIVE_COMPILATION',\n        'NCHAR',\n        'NEGOTIATE',\n        'NESTED_TRIGGERS',\n        'NEW_ACCOUNT',\n        'NEW_BROKER',\n        'NEW_PASSWORD',\n        'NEWNAME',\n        'NEXT',\n        'NO',\n        'NO_BROWSETABLE',\n        'NO_CHECKSUM',\n        'NO_COMPRESSION',\n        'NO_EVENT_LOSS',\n        'NO_INFOMSGS',\n        'NO_TRUNCATE',\n        'NO_WAIT',\n        'NOCHECK',\n        'NOCOUNT',\n        'NOEXEC',\n        'NOEXPAND',\n        'NOFORMAT',\n        'NOINDEX',\n        'NOINIT',\n        'NOLOCK',\n        'NON',\n        'NON_TRANSACTED_ACCESS',\n        'NONCLUSTERED',\n        'NONE',\n        'NORECOMPUTE',\n        'NORECOVERY',\n        'NORESEED',\n        'NORESET',\n        'NOREWIND',\n        'NORMAL',\n        'NOSKIP',\n        'NOTIFICATION',\n        'NOTRUNCATE',\n        'NOUNLOAD',\n        'NOWAIT',\n        'NTEXT',\n        'NTLM',\n        'NUMANODE',\n        'NUMERIC',\n        'NUMERIC_ROUNDABORT',\n        'NVARCHAR',\n        'OBJECT',\n        'OF',\n        'OFF',\n        'OFFLINE',\n        'OFFSET',\n        'OFFSETS',\n        'OLD_ACCOUNT',\n        'OLD_PASSWORD',\n        'ON',\n        'ON_FAILURE',\n        'ONLINE',\n        'ONLY',\n        'OPEN',\n        'OPEN_EXISTING',\n        'OPENTRAN',\n        'OPTIMISTIC',\n        'OPTIMIZE',\n        'OPTION',\n        'ORDER',\n        'OUT',\n        'OUTPUT',\n        'OUTPUTBUFFER',\n        'OVER',\n        'OVERRIDE',\n        'OWNER',\n        'OWNERSHIP',\n        'PAD_INDEX',\n        'PAGE',\n        'PAGE_VERIFY',\n        'PAGECOUNT',\n        'PAGLOCK',\n        'PARAMETERIZATION',\n        'PARSEONLY',\n        'PARTIAL',\n        'PARTITION',\n        'PARTITIONS',\n        'PARTNER',\n        'PASSWORD',\n        'PATH',\n        'PER_CPU',\n        'PER_NODE',\n        'PERCENT',\n        'PERMISSION_SET',\n        'PERSISTED',\n        'PHYSICAL_ONLY',\n        'PLAN',\n        'POISON_MESSAGE_HANDLING',\n        'POOL',\n        'POPULATION',\n        'PORT',\n        'PRECEDING',\n        'PRECISION',\n        'PRIMARY',\n        'PRIMARY_ROLE',\n        'PRINT',\n        'PRIOR',\n        'PRIORITY',\n        'PRIORITY_LEVEL',\n        'PRIVATE',\n        'PRIVILEGES',\n        'PROC',\n        'PROCCACHE',\n        'PROCEDURE',\n        'PROCEDURE_NAME',\n        'PROCESS',\n        'PROFILE',\n        'PROPERTY',\n        'PROPERTY_DESCRIPTION',\n        'PROPERTY_INT_ID',\n        'PROPERTY_SET_GUID',\n        'PROVIDER',\n        'PROVIDER_KEY_NAME',\n        'PUBLIC',\n        'PUT',\n        'QUARTER',\n        'QUERY',\n        'QUERY_GOVERNOR_COST_LIMIT',\n        'QUEUE',\n        'QUEUE_DELAY',\n        'QUOTED_IDENTIFIER',\n        'RAISERROR',\n        'RANGE',\n        'RAW',\n        'RC2',\n        'RC4',\n        'RC4_128',\n        'READ',\n        'READ_COMMITTED_SNAPSHOT',\n        'READ_ONLY',\n        'READ_ONLY_ROUTING_LIST',\n        'READ_ONLY_ROUTING_URL',\n        'READ_WRITE',\n        'READ_WRITE_FILEGROUPS',\n        'READCOMMITTED',\n        'READCOMMITTEDLOCK',\n        'READONLY',\n        'READPAST',\n        'READTEXT',\n        'READUNCOMMITTED',\n        'READWRITE',\n        'REAL',\n        'REBUILD',\n        'RECEIVE',\n        'RECOMPILE',\n        'RECONFIGURE',\n        'RECOVERY',\n        'RECURSIVE',\n        'RECURSIVE_TRIGGERS',\n        'REFERENCES',\n        'REGENERATE',\n        'RELATED_CONVERSATION',\n        'RELATED_CONVERSATION_GROUP',\n        'RELATIVE',\n        'REMOTE',\n        'REMOTE_PROC_TRANSACTIONS',\n        'REMOTE_SERVICE_NAME',\n        'REMOVE',\n        'REORGANIZE',\n        'REPAIR_ALLOW_DATA_LOSS',\n        'REPAIR_FAST',\n        'REPAIR_REBUILD',\n        'REPEATABLE',\n        'REPEATABLEREAD',\n        'REPLICA',\n        'REPLICATION',\n        'REQUEST_MAX_CPU_TIME_SEC',\n        'REQUEST_MAX_MEMORY_GRANT_PERCENT',\n        'REQUEST_MEMORY_GRANT_TIMEOUT_SEC',\n        'REQUIRED',\n        'RESAMPLE',\n        'RESEED',\n        'RESERVE_DISK_SPACE',\n        'RESET',\n        'RESOURCE',\n        'RESTART',\n        'RESTORE',\n        'RESTRICT',\n        'RESTRICTED_USER',\n        'RESULT',\n        'RESUME',\n        'RETAINDAYS',\n        'RETENTION',\n        'RETURN',\n        'RETURNS',\n        'REVERT',\n        'REVOKE',\n        'REWIND',\n        'REWINDONLY',\n        'ROBUST',\n        'ROLE',\n        'ROLLBACK',\n        'ROLLUP',\n        'ROOT',\n        'ROUTE',\n        'ROW',\n        'ROWCOUNT',\n        'ROWGUIDCOL',\n        'ROWLOCK',\n        'ROWS',\n        'ROWS_PER_BATCH',\n        'ROWTERMINATOR',\n        'ROWVERSION',\n        'RSA_1024',\n        'RSA_2048',\n        'RSA_512',\n        'RULE',\n        'SAFE',\n        'SAFETY',\n        'SAMPLE',\n        'SAVE',\n        'SCHEDULER',\n        'SCHEMA',\n        'SCHEMA_AND_DATA',\n        'SCHEMA_ONLY',\n        'SCHEMABINDING',\n        'SCHEME',\n        'SCROLL',\n        'SCROLL_LOCKS',\n        'SEARCH',\n        'SECOND',\n        'SECONDARY',\n        'SECONDARY_ONLY',\n        'SECONDARY_ROLE',\n        'SECONDS',\n        'SECRET',\n        'SECURITY_LOG',\n        'SECURITYAUDIT',\n        'SELECT',\n        'SELECTIVE',\n        'SELF',\n        'SEND',\n        'SENT',\n        'SEQUENCE',\n        'SERIALIZABLE',\n        'SERVER',\n        'SERVICE',\n        'SERVICE_BROKER',\n        'SERVICE_NAME',\n        'SESSION',\n        'SESSION_TIMEOUT',\n        'SET',\n        'SETS',\n        'SETUSER',\n        'SHOW_STATISTICS',\n        'SHOWCONTIG',\n        'SHOWPLAN',\n        'SHOWPLAN_ALL',\n        'SHOWPLAN_TEXT',\n        'SHOWPLAN_XML',\n        'SHRINKDATABASE',\n        'SHRINKFILE',\n        'SHUTDOWN',\n        'SID',\n        'SIGNATURE',\n        'SIMPLE',\n        'SINGLE_BLOB',\n        'SINGLE_CLOB',\n        'SINGLE_NCLOB',\n        'SINGLE_USER',\n        'SINGLETON',\n        'SIZE',\n        'SKIP',\n        'SMALLDATETIME',\n        'SMALLINT',\n        'SMALLMONEY',\n        'SNAPSHOT',\n        'SORT_IN_TEMPDB',\n        'SOURCE',\n        'SPARSE',\n        'SPATIAL',\n        'SPATIAL_WINDOW_MAX_CELLS',\n        'SPECIFICATION',\n        'SPLIT',\n        'SQL',\n        'SQL_VARIANT',\n        'SQLPERF',\n        'STANDBY',\n        'START',\n        'START_DATE',\n        'STARTED',\n        'STARTUP_STATE',\n        'STAT_HEADER',\n        'STATE',\n        'STATEMENT',\n        'STATIC',\n        'STATISTICAL_SEMANTICS',\n        'STATISTICS',\n        'STATISTICS_INCREMENTAL',\n        'STATISTICS_NORECOMPUTE',\n        'STATS',\n        'STATS_STREAM',\n        'STATUS',\n        'STATUSONLY',\n        'STOP',\n        'STOP_ON_ERROR',\n        'STOPAT',\n        'STOPATMARK',\n        'STOPBEFOREMARK',\n        'STOPLIST',\n        'STOPPED',\n        'SUBJECT',\n        'SUBSCRIPTION',\n        'SUPPORTED',\n        'SUSPEND',\n        'SWITCH',\n        'SYMMETRIC',\n        'SYNCHRONOUS_COMMIT',\n        'SYNONYM',\n        'SYSNAME',\n        'SYSTEM',\n        'TABLE',\n        'TABLERESULTS',\n        'TABLESAMPLE',\n        'TABLOCK',\n        'TABLOCKX',\n        'TAKE',\n        'TAPE',\n        'TARGET',\n        'TARGET_RECOVERY_TIME',\n        'TB',\n        'TCP',\n        'TEXT',\n        'TEXTIMAGE_ON',\n        'TEXTSIZE',\n        'THEN',\n        'THESAURUS',\n        'THROW',\n        'TIES',\n        'TIME',\n        'TIMEOUT',\n        'TIMER',\n        'TIMESTAMP',\n        'TINYINT',\n        'TO',\n        'TOP',\n        'TORN_PAGE_DETECTION',\n        'TRACEOFF',\n        'TRACEON',\n        'TRACESTATUS',\n        'TRACK_CAUSALITY',\n        'TRACK_COLUMNS_UPDATED',\n        'TRAN',\n        'TRANSACTION',\n        'TRANSFER',\n        'TRANSFORM_NOISE_WORDS',\n        'TRIGGER',\n        'TRIPLE_DES',\n        'TRIPLE_DES_3KEY',\n        'TRUE',\n        'TRUNCATE',\n        'TRUNCATEONLY',\n        'TRUSTWORTHY',\n        'TRY',\n        'TSQL',\n        'TWO_DIGIT_YEAR_CUTOFF',\n        'TYPE',\n        'TYPE_WARNING',\n        'UNBOUNDED',\n        'UNCHECKED',\n        'UNCOMMITTED',\n        'UNDEFINED',\n        'UNIQUE',\n        'UNIQUEIDENTIFIER',\n        'UNKNOWN',\n        'UNLIMITED',\n        'UNLOAD',\n        'UNSAFE',\n        'UPDATE',\n        'UPDATETEXT',\n        'UPDATEUSAGE',\n        'UPDLOCK',\n        'URL',\n        'USE',\n        'USED',\n        'USER',\n        'USEROPTIONS',\n        'USING',\n        'VALID_XML',\n        'VALIDATION',\n        'VALUE',\n        'VALUES',\n        'VARBINARY',\n        'VARCHAR',\n        'VARYING',\n        'VERIFYONLY',\n        'VERSION',\n        'VIEW',\n        'VIEW_METADATA',\n        'VIEWS',\n        'VISIBILITY',\n        'WAIT_AT_LOW_PRIORITY',\n        'WAITFOR',\n        'WEEK',\n        'WEIGHT',\n        'WELL_FORMED_XML',\n        'WHEN',\n        'WHERE',\n        'WHILE',\n        'WINDOWS',\n        'WITH',\n        'WITHIN',\n        'WITHOUT',\n        'WITNESS',\n        'WORK',\n        'WORKLOAD',\n        'WRITETEXT',\n        'XACT_ABORT',\n        'XLOCK',\n        'XMAX',\n        'XMIN',\n        'XML',\n        'XMLDATA',\n        'XMLNAMESPACES',\n        'XMLSCHEMA',\n        'XQUERY',\n        'XSINIL',\n        'YEAR',\n        'YMAX',\n        'YMIN'\n    ],\n    operators: [\n        // Logical\n        'ALL', 'AND', 'ANY', 'BETWEEN', 'EXISTS', 'IN', 'LIKE', 'NOT', 'OR', 'SOME',\n        // Set\n        'EXCEPT', 'INTERSECT', 'UNION',\n        // Join\n        'APPLY', 'CROSS', 'FULL', 'INNER', 'JOIN', 'LEFT', 'OUTER', 'RIGHT',\n        // Predicates\n        'CONTAINS', 'FREETEXT', 'IS', 'NULL',\n        // Pivoting\n        'PIVOT', 'UNPIVOT',\n        // Merging\n        'MATCHED'\n    ],\n    builtinFunctions: [\n        // Aggregate\n        'AVG', 'CHECKSUM_AGG', 'COUNT', 'COUNT_BIG', 'GROUPING', 'GROUPING_ID', 'MAX', 'MIN', 'SUM', 'STDEV', 'STDEVP', 'VAR', 'VARP',\n        // Analytic\n        'CUME_DIST', 'FIRST_VALUE', 'LAG', 'LAST_VALUE', 'LEAD', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK',\n        // Collation\n        'COLLATE', 'COLLATIONPROPERTY', 'TERTIARY_WEIGHTS',\n        // Azure\n        'FEDERATION_FILTERING_VALUE',\n        // Conversion\n        'CAST', 'CONVERT', 'PARSE', 'TRY_CAST', 'TRY_CONVERT', 'TRY_PARSE',\n        // Cryptographic\n        'ASYMKEY_ID', 'ASYMKEYPROPERTY', 'CERTPROPERTY', 'CERT_ID', 'CRYPT_GEN_RANDOM',\n        'DECRYPTBYASYMKEY', 'DECRYPTBYCERT', 'DECRYPTBYKEY', 'DECRYPTBYKEYAUTOASYMKEY', 'DECRYPTBYKEYAUTOCERT', 'DECRYPTBYPASSPHRASE',\n        'ENCRYPTBYASYMKEY', 'ENCRYPTBYCERT', 'ENCRYPTBYKEY', 'ENCRYPTBYPASSPHRASE', 'HASHBYTES', 'IS_OBJECTSIGNED',\n        'KEY_GUID', 'KEY_ID', 'KEY_NAME', 'SIGNBYASYMKEY', 'SIGNBYCERT', 'SYMKEYPROPERTY', 'VERIFYSIGNEDBYCERT', 'VERIFYSIGNEDBYASYMKEY',\n        // Cursor\n        'CURSOR_STATUS',\n        // Datatype\n        'DATALENGTH', 'IDENT_CURRENT', 'IDENT_INCR', 'IDENT_SEED', 'IDENTITY', 'SQL_VARIANT_PROPERTY',\n        // Datetime\n        'CURRENT_TIMESTAMP', 'DATEADD', 'DATEDIFF', 'DATEFROMPARTS', 'DATENAME', 'DATEPART', 'DATETIME2FROMPARTS', 'DATETIMEFROMPARTS',\n        'DATETIMEOFFSETFROMPARTS', 'DAY', 'EOMONTH', 'GETDATE', 'GETUTCDATE', 'ISDATE', 'MONTH', 'SMALLDATETIMEFROMPARTS', 'SWITCHOFFSET',\n        'SYSDATETIME', 'SYSDATETIMEOFFSET', 'SYSUTCDATETIME', 'TIMEFROMPARTS', 'TODATETIMEOFFSET', 'YEAR',\n        // Logical\n        'CHOOSE', 'COALESCE', 'IIF', 'NULLIF',\n        // Mathematical\n        'ABS', 'ACOS', 'ASIN', 'ATAN', 'ATN2', 'CEILING', 'COS', 'COT', 'DEGREES', 'EXP', 'FLOOR', 'LOG', 'LOG10',\n        'PI', 'POWER', 'RADIANS', 'RAND', 'ROUND', 'SIGN', 'SIN', 'SQRT', 'SQUARE', 'TAN',\n        // Metadata\n        'APP_NAME', 'APPLOCK_MODE', 'APPLOCK_TEST', 'ASSEMBLYPROPERTY', 'COL_LENGTH', 'COL_NAME', 'COLUMNPROPERTY',\n        'DATABASE_PRINCIPAL_ID', 'DATABASEPROPERTYEX', 'DB_ID', 'DB_NAME', 'FILE_ID', 'FILE_IDEX', 'FILE_NAME', 'FILEGROUP_ID',\n        'FILEGROUP_NAME', 'FILEGROUPPROPERTY', 'FILEPROPERTY', 'FULLTEXTCATALOGPROPERTY', 'FULLTEXTSERVICEPROPERTY',\n        'INDEX_COL', 'INDEXKEY_PROPERTY', 'INDEXPROPERTY', 'OBJECT_DEFINITION', 'OBJECT_ID',\n        'OBJECT_NAME', 'OBJECT_SCHEMA_NAME', 'OBJECTPROPERTY', 'OBJECTPROPERTYEX', 'ORIGINAL_DB_NAME', 'PARSENAME',\n        'SCHEMA_ID', 'SCHEMA_NAME', 'SCOPE_IDENTITY', 'SERVERPROPERTY', 'STATS_DATE', 'TYPE_ID', 'TYPE_NAME', 'TYPEPROPERTY',\n        // Ranking\n        'DENSE_RANK', 'NTILE', 'RANK', 'ROW_NUMBER',\n        // Replication\n        'PUBLISHINGSERVERNAME',\n        // Rowset\n        'OPENDATASOURCE', 'OPENQUERY', 'OPENROWSET', 'OPENXML',\n        // Security\n        'CERTENCODED', 'CERTPRIVATEKEY', 'CURRENT_USER', 'HAS_DBACCESS', 'HAS_PERMS_BY_NAME', 'IS_MEMBER', 'IS_ROLEMEMBER', 'IS_SRVROLEMEMBER',\n        'LOGINPROPERTY', 'ORIGINAL_LOGIN', 'PERMISSIONS', 'PWDENCRYPT', 'PWDCOMPARE', 'SESSION_USER', 'SESSIONPROPERTY', 'SUSER_ID', 'SUSER_NAME',\n        'SUSER_SID', 'SUSER_SNAME', 'SYSTEM_USER', 'USER', 'USER_ID', 'USER_NAME',\n        // String\n        'ASCII', 'CHAR', 'CHARINDEX', 'CONCAT', 'DIFFERENCE', 'FORMAT', 'LEFT', 'LEN', 'LOWER', 'LTRIM', 'NCHAR', 'PATINDEX',\n        'QUOTENAME', 'REPLACE', 'REPLICATE', 'REVERSE', 'RIGHT', 'RTRIM', 'SOUNDEX', 'SPACE', 'STR', 'STUFF', 'SUBSTRING', 'UNICODE', 'UPPER',\n        // System\n        'BINARY_CHECKSUM', 'CHECKSUM', 'CONNECTIONPROPERTY', 'CONTEXT_INFO', 'CURRENT_REQUEST_ID', 'ERROR_LINE', 'ERROR_NUMBER', 'ERROR_MESSAGE',\n        'ERROR_PROCEDURE', 'ERROR_SEVERITY', 'ERROR_STATE', 'FORMATMESSAGE', 'GETANSINULL', 'GET_FILESTREAM_TRANSACTION_CONTEXT', 'HOST_ID',\n        'HOST_NAME', 'ISNULL', 'ISNUMERIC', 'MIN_ACTIVE_ROWVERSION', 'NEWID', 'NEWSEQUENTIALID', 'ROWCOUNT_BIG', 'XACT_STATE',\n        // TextImage\n        'TEXTPTR', 'TEXTVALID',\n        // Trigger\n        'COLUMNS_UPDATED', 'EVENTDATA', 'TRIGGER_NESTLEVEL', 'UPDATE',\n        // ChangeTracking\n        'CHANGETABLE', 'CHANGE_TRACKING_CONTEXT', 'CHANGE_TRACKING_CURRENT_VERSION', 'CHANGE_TRACKING_IS_COLUMN_IN_MASK', 'CHANGE_TRACKING_MIN_VALID_VERSION',\n        // FullTextSearch\n        'CONTAINSTABLE', 'FREETEXTTABLE',\n        // SemanticTextSearch\n        'SEMANTICKEYPHRASETABLE', 'SEMANTICSIMILARITYDETAILSTABLE', 'SEMANTICSIMILARITYTABLE',\n        // FileStream\n        'FILETABLEROOTPATH', 'GETFILENAMESPACEPATH', 'GETPATHLOCATOR', 'PATHNAME',\n        // ServiceBroker\n        'GET_TRANSMISSION_STATUS'\n    ],\n    builtinVariables: [\n        // Configuration\n        '@@DATEFIRST', '@@DBTS', '@@LANGID', '@@LANGUAGE', '@@LOCK_TIMEOUT', '@@MAX_CONNECTIONS', '@@MAX_PRECISION', '@@NESTLEVEL',\n        '@@OPTIONS', '@@REMSERVER', '@@SERVERNAME', '@@SERVICENAME', '@@SPID', '@@TEXTSIZE', '@@VERSION',\n        // Cursor\n        '@@CURSOR_ROWS', '@@FETCH_STATUS',\n        // Datetime\n        '@@DATEFIRST',\n        // Metadata\n        '@@PROCID',\n        // System\n        '@@ERROR', '@@IDENTITY', '@@ROWCOUNT', '@@TRANCOUNT',\n        // Stats\n        '@@CONNECTIONS', '@@CPU_BUSY', '@@IDLE', '@@IO_BUSY', '@@PACKET_ERRORS', '@@PACK_RECEIVED', '@@PACK_SENT',\n        '@@TIMETICKS', '@@TOTAL_ERRORS', '@@TOTAL_READ', '@@TOTAL_WRITE'\n    ],\n    pseudoColumns: [\n        '$ACTION', '$IDENTITY', '$ROWGUID', '$PARTITION'\n    ],\n    tokenizer: {\n        root: [\n            { include: '@comments' },\n            { include: '@whitespace' },\n            { include: '@pseudoColumns' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@complexIdentifiers' },\n            { include: '@scopes' },\n            [/[;,.]/, 'delimiter'],\n            [/[()]/, '@brackets'],\n            [/[\\w@#$]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@operators': 'operator',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[<>=!%&+\\-*/|~^]/, 'operator'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white']\n        ],\n        comments: [\n            [/--+.*/, 'comment'],\n            [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\n        ],\n        comment: [\n            [/[^*/]+/, 'comment'],\n            // Not supporting nested comments, as nested comments seem to not be standard?\n            // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\n            // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\n            [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\n            [/./, 'comment']\n        ],\n        pseudoColumns: [\n            [/[$][A-Za-z_][\\w@#$]*/, {\n                    cases: {\n                        '@pseudoColumns': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n        ],\n        numbers: [\n            [/0[xX][0-9a-fA-F]*/, 'number'],\n            [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\n            [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\n        ],\n        strings: [\n            [/N'/, { token: 'string', next: '@string' }],\n            [/'/, { token: 'string', next: '@string' }]\n        ],\n        string: [\n            [/[^']+/, 'string'],\n            [/''/, 'string'],\n            [/'/, { token: 'string', next: '@pop' }]\n        ],\n        complexIdentifiers: [\n            [/\\[/, { token: 'identifier.quote', next: '@bracketedIdentifier' }],\n            [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\n        ],\n        bracketedIdentifier: [\n            [/[^\\]]+/, 'identifier'],\n            [/]]/, 'identifier'],\n            [/]/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        quotedIdentifier: [\n            [/[^\"]+/, 'identifier'],\n            [/\"\"/, 'identifier'],\n            [/\"/, { token: 'identifier.quote', next: '@pop' }]\n        ],\n        scopes: [\n            [/BEGIN\\s+(DISTRIBUTED\\s+)?TRAN(SACTION)?\\b/i, 'keyword'],\n            [/BEGIN\\s+TRY\\b/i, { token: 'keyword.try' }],\n            [/END\\s+TRY\\b/i, { token: 'keyword.try' }],\n            [/BEGIN\\s+CATCH\\b/i, { token: 'keyword.catch' }],\n            [/END\\s+CATCH\\b/i, { token: 'keyword.catch' }],\n            [/(BEGIN|CASE)\\b/i, { token: 'keyword.block' }],\n            [/END\\b/i, { token: 'keyword.block' }],\n            [/WHEN\\b/i, { token: 'keyword.choice' }],\n            [/THEN\\b/i, { token: 'keyword.choice' }]\n        ]\n    }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n        ['var', 'end_var'],\n        ['var_input', 'end_var'],\n        ['var_output', 'end_var'],\n        ['var_in_out', 'end_var'],\n        ['var_temp', 'end_var'],\n        ['var_global', 'end_var'],\n        ['var_access', 'end_var'],\n        ['var_external', 'end_var'],\n        ['type', 'end_type'],\n        ['struct', 'end_struct'],\n        ['program', 'end_program'],\n        ['function', 'end_function'],\n        ['function_block', 'end_function_block'],\n        ['action', 'end_action'],\n        ['step', 'end_step'],\n        ['initial_step', 'end_step'],\n        ['transaction', 'end_transaction'],\n        ['configuration', 'end_configuration'],\n        ['tcp', 'end_tcp'],\n        ['recource', 'end_recource'],\n        ['channel', 'end_channel'],\n        ['library', 'end_library'],\n        ['folder', 'end_folder'],\n        ['binaries', 'end_binaries'],\n        ['includes', 'end_includes'],\n        ['sources', 'end_sources']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '/*', close: '*/' },\n        { open: '\\'', close: '\\'', notIn: ['string_sq'] },\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.st',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: ['if', 'end_if', 'elsif', 'else', 'case', 'of', 'to',\n        'do', 'with', 'by', 'while', 'repeat', 'end_while', 'end_repeat', 'end_case',\n        'for', 'end_for', 'task', 'retain', 'non_retain', 'constant', 'with', 'at',\n        'exit', 'return', 'interval', 'priority', 'address', 'port', 'on_channel',\n        'then', 'iec', 'file', 'uses', 'version', 'packagetype', 'displayname',\n        'copyright', 'summary', 'vendor', 'common_source', 'from'],\n    constant: ['false', 'true', 'null'],\n    defineKeywords: [\n        'var', 'var_input', 'var_output', 'var_in_out', 'var_temp', 'var_global',\n        'var_access', 'var_external', 'end_var',\n        'type', 'end_type', 'struct', 'end_struct', 'program', 'end_program',\n        'function', 'end_function', 'function_block', 'end_function_block',\n        'configuration', 'end_configuration', 'tcp', 'end_tcp', 'recource',\n        'end_recource', 'channel', 'end_channel', 'library', 'end_library',\n        'folder', 'end_folder', 'binaries', 'end_binaries', 'includes',\n        'end_includes', 'sources', 'end_sources',\n        'action', 'end_action', 'step', 'initial_step', 'end_step', 'transaction', 'end_transaction'\n    ],\n    typeKeywords: ['int', 'sint', 'dint', 'lint', 'usint', 'uint', 'udint', 'ulint',\n        'real', 'lreal', 'time', 'date', 'time_of_day', 'date_and_time', 'string',\n        'bool', 'byte', 'world', 'dworld', 'array', 'pointer', 'lworld'],\n    operators: ['=', '>', '<', ':', ':=', '<=', '>=', '<>', '&', '+', '-', '*', '**',\n        'MOD', '^', 'or', 'and', 'not', 'xor', 'abs', 'acos', 'asin', 'atan', 'cos',\n        'exp', 'expt', 'ln', 'log', 'sin', 'sqrt', 'tan', 'sel', 'max', 'min', 'limit',\n        'mux', 'shl', 'shr', 'rol', 'ror', 'indexof', 'sizeof', 'adr', 'adrinst',\n        'bitadr', 'is_valid'],\n    builtinVariables: [],\n    builtinFunctions: ['sr', 'rs', 'tp', 'ton', 'tof', 'eq', 'ge', 'le', 'lt',\n        'ne', 'round', 'trunc', 'ctd', 'сtu', 'ctud', 'r_trig', 'f_trig',\n        'move', 'concat', 'delete', 'find', 'insert', 'left', 'len', 'replace',\n        'right', 'rtc'],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // C# style strings\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/(T|DT|TOD)#[0-9:-_shmyd]*/, 'tag'],\n            [/[A-Za-z]{1,6}#[0-9]*/, 'tag'],\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]*/, 'tag'],\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\n            [/(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]*/, 'predefined'],\n            [/[A_Za-z]*(_TO_)[A_Za-z]*/, 'predefined'],\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@operators': 'operators',\n                        '@keywords': 'keyword',\n                        '@typeKeywords': 'type',\n                        '@defineKeywords': 'variable',\n                        '@constant': 'constant',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@whitespace' },\n            [/[;.]/, 'delimiter'],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/16#[0-9a-fA-F]+/, 'number.hex'],\n            [/2#[0-9_]+/, 'number.binary'],\n            [/\\d+/, 'number'],\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        comment2: [\n            [/[^\\(*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            [\"\\\\*\\\\)\", 'comment', '@pop'],\n            [/[\\(*]/, 'comment']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\(\\*/, 'comment', '@comment2'],\n        ],\n        string_dq: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        string_sq: [\n            [/[^\\\\']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ]\n    }\n};\n"],"sourceRoot":""}